Here is a {targetType} we need you to model:
-----
{targetDescription}
-----

Here is some context on the problem:
-----
{background}
-----

Here is the list of available variables:
-----
{variables}
-----

And finally, here is list of input parameters:
-----
{parameters}
-----

First, take a deep breath and explain how we should define the {targetType}. Feel free to define new variables if you think it is necessary. Then, generate a json file accordingly with the following format (STICK TO THIS FORMAT!):


{{
    "{targetType}": {{
        "description": "The description of the {targetType}",
        "status": "formulated",
        "formulation": "The LaTeX mathematical expression representing the formulation of the {targetType}",
        "related_variables": [ "variable1", "variable2", ...],
        "related_parameters" : [ "parameter1", "parameter2", ...]
    }},
    "auxiliary_constraints": [
        {{
            "description": "The description of the auxiliary constraint",
            "status": "formulated",
            "formulation": "The LaTeX mathematical expression representing the formulation of the auxiliary constraint"
            "related_variables": [ "variable1", "variable2", ...],
            "related_parameters" : [ "parameter1", "parameter2", ...]
        }}
    ]
    "new_variables": [
        {{
            "definition": "The definition of the variable",
            "symbol": "The symbol for the variable",
            "shape": [ "symbol1", "symbol2", ... ],
            "status": "formulated"
        }}
    ]
}}

- Your formulation should be in LaTeX mathematical format (do not include the $ symbols). 
- Note that I'm going to use python json.loads() function to parse the json file, so please make sure the format is correct (don't add ',' before enclosing '}}' or ']' characters.
- Generate the complete json file and don't omit anything.
- Use '```json' and '```' to enclose the json file.
- Important: You can not define new parameters. You can only define new variables.Use CamelCase and full words for new variable symbols, and do not include indices in the symbol (e.g. ItemsSold instead of itemsSold or items_sold or ItemsSold_i)
- Use \\textup{{}} when writing variable and parameter names. For example (\\sum_{{i=1}}^{{N}} \\textup{{ItemsSold}}_{{i}} instead of \\sum_{{i=1}}^{{N}} ItemsSold_{{i}})
- Use \\quad for spaces.
- Use empty list ([]) if no new variables are defined.
- Always use non-strict inequalities (e.g. \\leq instead of <), even if the constraint is strict.
- Define auxiliary constraints when necessary. Set it to an empty list ([]) if no auxiliary constraints are needed. If new auxiliary constraints need new variables, add them to the "new_variables" list too.
- All \\ in the result should be expended to \\\\ to fit the format string requirement, included the term mentioned before

Take a deep breath and solve the problem step by step.