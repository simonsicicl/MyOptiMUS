{
    "background": "The Employee Assignment Problem involves scheduling a certain number of employees with specific skills across multiple shifts and restaurants, taking into account skill demands and employee preferences to minimize the scheduling cost.",
    "problem_type": "LP",
    "parameters": [
        {
            "symbol": "NumRestaurants",
            "definition": "The number of restaurants",
            "shape": [],
            "code": "NumRestaurants = data[\"NumRestaurants\"] # scalar parameter"
        },
        {
            "symbol": "NumEmployees",
            "definition": "The number of employees",
            "shape": [],
            "code": "NumEmployees = data[\"NumEmployees\"] # scalar parameter"
        },
        {
            "symbol": "NumShifts",
            "definition": "The number of shifts",
            "shape": [],
            "code": "NumShifts = data[\"NumShifts\"] # scalar parameter"
        },
        {
            "symbol": "NumSkills",
            "definition": "The total number of skills that employees can have",
            "shape": [],
            "code": "NumSkills = data[\"NumSkills\"] # scalar parameter"
        },
        {
            "symbol": "Demand",
            "definition": "The demand for employees with specific skills at each restaurant during each shift",
            "shape": [
                "NumRestaurants",
                "NumShifts",
                "NumSkills"
            ],
            "code": "Demand = np.array(data[\"Demand\"]) # ['NumRestaurants', 'NumShifts', 'NumSkills']"
        },
        {
            "symbol": "EmployeeSkills",
            "definition": "Binary indicator if an employee has a specific skill",
            "shape": [
                "NumEmployees",
                "NumSkills"
            ],
            "code": "EmployeeSkills = np.array(data[\"EmployeeSkills\"]) # ['NumEmployees', 'NumSkills']"
        },
        {
            "symbol": "SkillPreference",
            "definition": "Employee's preference level for each skill",
            "shape": [
                "NumEmployees",
                "NumSkills"
            ],
            "code": "SkillPreference = np.array(data[\"SkillPreference\"]) # ['NumEmployees', 'NumSkills']"
        },
        {
            "symbol": "ShiftAvailability",
            "definition": "Binary indicator if an employee is available for a specific shift",
            "shape": [
                "NumEmployees",
                "NumShifts"
            ],
            "code": "ShiftAvailability = np.array(data[\"ShiftAvailability\"]) # ['NumEmployees', 'NumShifts']"
        },
        {
            "symbol": "UnfulfilledPositionWeight",
            "definition": "The weighting factor for unfulfilled positions",
            "shape": [],
            "code": "UnfulfilledPositionWeight = data[\"UnfulfilledPositionWeight\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "Exactly NumEmployees employees must be assigned across all restaurants and shifts.",
            "status": "formulated",
            "formulation": "\\sum_{e=1}^{\\textup{NumEmployees}} \\sum_{r=1}^{\\textup{NumRestaurants}} \\sum_{s=1}^{\\textup{NumShifts}} \\textup{Assignment}_{e,r,s} = \\textup{NumEmployees}",
            "related_variables": [
                "Assignment"
            ],
            "related_parameters": [
                "NumEmployees",
                "NumRestaurants",
                "NumShifts"
            ]
        },
        {
            "description": "Each employee can only be assigned to one shift at one restaurant at a time",
            "status": "formulated",
            "formulation": "\\sum_{r=1}^{\\textup{NumRestaurants}} \\sum_{s=1}^{\\textup{NumShifts}} \\textup{Assignment}_{e,r,s} \\leq 1 \\quad \\forall e \\in \\{1, \\dots, \\textup{NumEmployees}\\}",
            "related_variables": [
                "Assignment"
            ],
            "related_parameters": [
                "NumRestaurants",
                "NumShifts",
                "NumEmployees"
            ]
        },
        {
            "description": "The total number of employees assigned to each shift in each restaurant must meet the skill demand for that shift.",
            "status": "formulated",
            "formulation": "\\sum_{e=1}^{\\textup{NumEmployees}} \\textup{Assignment}_{e,r,s} \\cdot \\textup{EmployeeSkills}_{e,k} \\geq \\textup{Demand}_{r,s,k}, \\quad \\forall r \\in [1, \\textup{NumRestaurants}], \\quad \\forall s \\in [1, \\textup{NumShifts}], \\quad \\forall k \\in [1, \\textup{NumSkills}]",
            "related_variables": [
                "Assignment"
            ],
            "related_parameters": [
                "Demand",
                "EmployeeSkills",
                "NumRestaurants",
                "NumShifts",
                "NumSkills",
                "NumEmployees"
            ]
        },
        {
            "description": "Ensure the total skill contributions from assigned employees satisfy the skill demand for each restaurant and shift.",
            "status": "formulated",
            "formulation": "\\sum_{\\textup{e}=1}^{\\textup{NumEmployees}} \\textup{SkillMatch}_{\\textup{e},\\textup{r},\\textup{s},\\textup{k}} \\geq \\textup{Demand}_{\\textup{r},\\textup{s},\\textup{k}}, \\quad \\forall \\textup{r} \\in [1,\\textup{NumRestaurants}], \\forall \\textup{s} \\in [1,\\textup{NumShifts}], \\forall \\textup{k} \\in [1,\\textup{NumSkills}]",
            "related_variables": [
                "SkillMatch"
            ],
            "related_parameters": [
                "Demand"
            ]
        },
        {
            "description": "Defines SkillMatch, ensuring it is valid only if an employee is assigned to a shift and possesses the required skill.",
            "status": "formulated",
            "formulation": "\\textup{SkillMatch}_{\\textup{e},\\textup{r},\\textup{s},\\textup{k}} \\leq \\textup{Assignment}_{\\textup{e},\\textup{r},\\textup{s}}, \\quad \\forall \\textup{e} \\in [1,\\textup{NumEmployees}], \\forall \\textup{r} \\in [1,\\textup{NumRestaurants}], \\forall \\textup{s} \\in [1,\\textup{NumShifts}], \\forall \\textup{k} \\in [1,\\textup{NumSkills}]",
            "related_variables": [
                "SkillMatch",
                "Assignment"
            ],
            "related_parameters": []
        },
        {
            "description": "Ensures SkillMatch is 0 if the assigned employee does not possess the required skill.",
            "status": "formulated",
            "formulation": "\\textup{SkillMatch}_{\\textup{e},\\textup{r},\\textup{s},\\textup{k}} \\leq \\textup{EmployeeSkills}_{\\textup{e},\\textup{k}}, \\quad \\forall \\textup{e} \\in [1,\\textup{NumEmployees}], \\forall \\textup{r} \\in [1,\\textup{NumRestaurants}], \\forall \\textup{s} \\in [1,\\textup{NumShifts}], \\forall \\textup{k} \\in [1,\\textup{NumSkills}]",
            "related_variables": [
                "SkillMatch"
            ],
            "related_parameters": [
                "EmployeeSkills"
            ]
        },
        {
            "description": "Defines SkillMatch as 1 only if both assignment and employee skill match conditions hold.",
            "status": "formulated",
            "formulation": "\\textup{SkillMatch}_{\\textup{e},\\textup{r},\\textup{s},\\textup{k}} \\geq \\textup{Assignment}_{\\textup{e},\\textup{r},\\textup{s}} + \\textup{EmployeeSkills}_{\\textup{e},\\textup{k}} - 1, \\quad \\forall \\textup{e} \\in [1,\\textup{NumEmployees}], \\forall \\textup{r} \\in [1,\\textup{NumRestaurants}], \\forall \\textup{s} \\in [1,\\textup{NumShifts}], \\forall \\textup{k} \\in [1,\\textup{NumSkills}]",
            "related_variables": [
                "SkillMatch",
                "Assignment"
            ],
            "related_parameters": [
                "EmployeeSkills"
            ]
        },
        {
            "description": "Ensure that the unmet demand for all skills at a restaurant and shift is measured by UnfulfilledPositions.",
            "status": "formulated",
            "formulation": "\\textup{UnfulfilledPositions}_{r,s,k} = \\textup{Demand}_{r,s,k} - \\sum_{e=1}^{\\textup{NumEmployees}} \\textup{SkillMatch}_{e,r,s,k}, \\quad \\forall \\, r \\in [1, \\textup{NumRestaurants}], \\, s \\in [1, \\textup{NumShifts}], \\, k \\in [1, \\textup{NumSkills}]",
            "related_variables": [
                "SkillMatch",
                "UnfulfilledPositions"
            ],
            "related_parameters": [
                "Demand",
                "NumRestaurants",
                "NumShifts",
                "NumSkills",
                "NumEmployees"
            ]
        },
        {
            "description": "Ensure SkillMatch is consistent with employees' skills and assignments.",
            "status": "formulated",
            "formulation": "\\textup{SkillMatch}_{e,r,s,k} \\leq \\textup{EmployeeSkills}_{e,k} \\cdot \\textup{Assignment}_{e,r,s}, \\quad \\forall \\, e \\in [1, \\textup{NumEmployees}], \\, r \\in [1, \\textup{NumRestaurants}], \\, s \\in [1, \\textup{NumShifts}], \\, k \\in [1, \\textup{NumSkills}]",
            "related_variables": [
                "SkillMatch",
                "Assignment"
            ],
            "related_parameters": [
                "EmployeeSkills",
                "NumRestaurants",
                "NumShifts",
                "NumSkills",
                "NumEmployees"
            ]
        },
        {
            "description": "Ensure that UnfulfilledPositions is non-negative.",
            "status": "formulated",
            "formulation": "\\textup{UnfulfilledPositions}_{r,s,k} \\geq 0, \\quad \\forall \\, r \\in [1, \\textup{NumRestaurants}], \\, s \\in [1, \\textup{NumShifts}], \\, k \\in [1, \\textup{NumSkills}]",
            "related_variables": [
                "UnfulfilledPositions"
            ],
            "related_parameters": [
                "NumRestaurants",
                "NumShifts",
                "NumSkills"
            ]
        }
    ],
    "variables": [
        {
            "definition": "Binary variable indicating whether an employee e is assigned to restaurant r during shift s.",
            "symbol": "Assignment",
            "shape": [
                "NumEmployees",
                "NumRestaurants",
                "NumShifts"
            ],
            "status": "formulated"
        },
        {
            "definition": "Binary variable indicating whether employee e satisfies skill k at restaurant r during shift s.",
            "symbol": "SkillMatch",
            "shape": [
                "NumEmployees",
                "NumRestaurants",
                "NumShifts",
                "NumSkills"
            ],
            "status": "formulated"
        },
        {
            "definition": "Number of unfulfilled positions for skill k at restaurant r during shift s.",
            "symbol": "UnfulfilledPositions",
            "shape": [
                "NumRestaurants",
                "NumShifts",
                "NumSkills"
            ],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Minimize the total cost, including unfulfilled position cost and employee preference cost.",
            "status": "formulated",
            "formulation": "\\textup{Minimize} \\quad \\sum_{r=1}^{\\textup{NumRestaurants}} \\sum_{s=1}^{\\textup{NumShifts}} \\sum_{k=1}^{\\textup{NumSkills}} \\left( \\textup{UnfulfilledPositions}_{r,s,k} \\cdot \\textup{UnfulfilledPositionWeight} \\right) + \\sum_{e=1}^{\\textup{NumEmployees}} \\sum_{r=1}^{\\textup{NumRestaurants}} \\sum_{s=1}^{\\textup{NumShifts}} \\sum_{k=1}^{\\textup{NumSkills}} \\left( \\textup{Assignment}_{e,r,s} \\cdot (1 - \\textup{SkillPreference}_{e,k}) \\cdot \\textup{EmployeeSkills}_{e,k} \\right)",
            "related_variables": [
                "Assignment",
                "UnfulfilledPositions"
            ],
            "related_parameters": [
                "UnfulfilledPositionWeight",
                "SkillPreference",
                "EmployeeSkills",
                "NumRestaurants",
                "NumShifts",
                "NumSkills",
                "NumEmployees"
            ]
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413150831_complexor_Scheduling Problem/",
    "problem_path": "data/complexor/Scheduling Problem/"
}