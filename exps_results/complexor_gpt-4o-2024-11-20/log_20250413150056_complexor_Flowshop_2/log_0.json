{
    "background": "A set of jobs need to be processed on a set of machines in series, with each machine being able to work in parallel. Jobs must follow the same processing order through all machines, with the objective to minimize the total time to complete all jobs, known as the makespan.",
    "problem_type": "LP",
    "parameters": [
        {
            "symbol": "JobCount",
            "definition": "The total number of jobs to be processed",
            "shape": [],
            "code": "JobCount = data[\"JobCount\"] # scalar parameter"
        },
        {
            "symbol": "MachineCount",
            "definition": "The total number of machines available for processing",
            "shape": [],
            "code": "MachineCount = data[\"MachineCount\"] # scalar parameter"
        },
        {
            "symbol": "ProcessingTime",
            "definition": "The time required to process job j on machine m",
            "shape": [
                "JobCount",
                "MachineCount"
            ],
            "code": "ProcessingTime = np.array(data[\"ProcessingTime\"]) # ['JobCount', 'MachineCount']"
        }
    ],
    "constraints": [
        {
            "description": "Ensure jobs follow sequential processing across machines and no two jobs overlap on the same machine.",
            "status": "formulated",
            "formulation": "\\textup{JobStartTimes}_{j,m+1} \\geq \\textup{JobStartTimes}_{j,m} + \\textup{ProcessingTime}_{j,m}, \\quad \\forall j = 1, \\ldots, \\textup{JobCount}, \\quad \\forall m = 1, \\ldots, \\textup{MachineCount}-1",
            "related_variables": [
                "JobStartTimes"
            ],
            "related_parameters": [
                "JobCount",
                "MachineCount",
                "ProcessingTime"
            ]
        },
        {
            "description": "Each machine can process only one job at a time.",
            "status": "formulated",
            "formulation": "\\textup{JobStartTimes}_{j1,m} + \\textup{ProcessingTime}_{j1,m} \\leq \\textup{JobStartTimes}_{j2,m} + M \\cdot (1 - \\textup{MachineSequenceOrder}_{j1,j2,m}) \\\\ \\textup{JobStartTimes}_{j2,m} + \\textup{ProcessingTime}_{j2,m} \\leq \\textup{JobStartTimes}_{j1,m} + M \\cdot (1 - \\textup{MachineSequenceOrder}_{j2,j1,m})",
            "related_variables": [
                "JobStartTimes",
                "MachineSequenceOrder"
            ],
            "related_parameters": [
                "ProcessingTime",
                "JobCount",
                "MachineCount"
            ]
        },
        {
            "description": "Ensure jobs on the same machine do not overlap using binary sequence order.",
            "status": "formulated",
            "formulation": "\\textup{JobStartTimes}_{j',m} \\geq \\textup{JobStartTimes}_{j,m} + \\textup{ProcessingTime}_{j,m} - (1 - \\textup{MachineSequenceOrder}_{j,j',m}) \\cdot M, \\quad \\forall j, j' = 1, \\ldots, \\textup{JobCount}, \\quad \\forall m = 1, \\ldots, \\textup{MachineCount}",
            "related_variables": [
                "JobStartTimes",
                "MachineSequenceOrder"
            ],
            "related_parameters": [
                "JobCount",
                "MachineCount",
                "ProcessingTime"
            ]
        },
        {
            "description": "Binary variable logic ensures sequencing order is correctly enforced.",
            "status": "formulated",
            "formulation": "\\textup{MachineSequenceOrder}_{j,j',m} + \\textup{MachineSequenceOrder}_{j',j,m} = 1, \\quad \\forall j \\neq j', \\quad \\forall m",
            "related_variables": [
                "MachineSequenceOrder"
            ],
            "related_parameters": [
                "JobCount",
                "MachineCount"
            ]
        },
        {
            "description": "Each pair of jobs must have exactly one sequencing order on each machine.",
            "status": "formulated",
            "formulation": "\\textup{MachineSequenceOrder}_{j1,j2,m} + \\textup{MachineSequenceOrder}_{j2,j1,m} = 1 \\quad \\forall j1 \\neq j2, \\forall m",
            "related_variables": [
                "MachineSequenceOrder"
            ],
            "related_parameters": [
                "JobCount",
                "MachineCount"
            ]
        },
        {
            "description": "Ensures that the makespan is greater than or equal to the completion time of all jobs on the last machine",
            "status": "formulated",
            "formulation": "\\textup{Makespan} \\geq \\textup{JobStartTimes}_{j, \\textup{MachineCount}} + \\textup{ProcessingTime}_{j, \\textup{MachineCount}} \\quad \\forall j \\in \\{1, 2, \\ldots, \\textup{JobCount}\\}",
            "related_variables": [
                "Makespan",
                "JobStartTimes"
            ],
            "related_parameters": [
                "ProcessingTime",
                "JobCount",
                "MachineCount"
            ]
        }
    ],
    "variables": [
        {
            "definition": "Start time of job j on machine m",
            "symbol": "JobStartTimes",
            "shape": [
                "JobCount",
                "MachineCount"
            ],
            "status": "formulated"
        },
        {
            "definition": "Binary variable representing job sequencing on the same machine",
            "symbol": "MachineSequenceOrder",
            "shape": [
                "JobCount",
                "JobCount",
                "MachineCount"
            ],
            "status": "formulated"
        },
        {
            "definition": "The completion time of the last job on the last machine, representing the makespan",
            "symbol": "Makespan",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Minimize the total makespan, which is the time when the last job is completed on the last machine",
            "status": "formulated",
            "formulation": "\\min \\textup{Makespan}",
            "related_variables": [
                "Makespan"
            ],
            "related_parameters": []
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413150056_complexor_Flowshop_2/",
    "problem_path": "data/complexor/Flowshop_2/"
}