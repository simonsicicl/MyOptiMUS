{
    "background": "An engineering school is hosting a bridge building competition where students aim to build the maximum number of beam and truss bridges using limited supplies of Popsicle sticks and glue to maximize the total mass the bridges can support.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Number of Popsicle sticks required for a beam bridge",
            "symbol": "PopsicleBeam",
            "value": 30,
            "shape": [],
            "code": "PopsicleBeam = data[\"PopsicleBeam\"] # scalar parameter"
        },
        {
            "definition": "Units of glue required for a beam bridge",
            "symbol": "GlueBeam",
            "value": 5,
            "shape": [],
            "code": "GlueBeam = data[\"GlueBeam\"] # scalar parameter"
        },
        {
            "definition": "Number of Popsicle sticks required for a truss bridge",
            "symbol": "PopsicleTruss",
            "value": 50,
            "shape": [],
            "code": "PopsicleTruss = data[\"PopsicleTruss\"] # scalar parameter"
        },
        {
            "definition": "Units of glue required for a truss bridge",
            "symbol": "GlueTruss",
            "value": 8,
            "shape": [],
            "code": "GlueTruss = data[\"GlueTruss\"] # scalar parameter"
        },
        {
            "definition": "Total available Popsicle sticks",
            "symbol": "TotalPopsicles",
            "value": 600,
            "shape": [],
            "code": "TotalPopsicles = data[\"TotalPopsicles\"] # scalar parameter"
        },
        {
            "definition": "Total available units of glue",
            "symbol": "TotalGlue",
            "value": 100,
            "shape": [],
            "code": "TotalGlue = data[\"TotalGlue\"] # scalar parameter"
        },
        {
            "definition": "Maximum number of truss bridges",
            "symbol": "MaxTruss",
            "value": 5,
            "shape": [],
            "code": "MaxTruss = data[\"MaxTruss\"] # scalar parameter"
        },
        {
            "definition": "Mass supported by a beam bridge",
            "symbol": "MassBeam",
            "value": 40,
            "shape": [],
            "code": "MassBeam = data[\"MassBeam\"] # scalar parameter"
        },
        {
            "definition": "Mass supported by a truss bridge",
            "symbol": "MassTruss",
            "value": 60,
            "shape": [],
            "code": "MassTruss = data[\"MassTruss\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The number of beam bridges is non-negative.",
            "status": "formulated",
            "formulation": "\\textup{NumberBeam} \\geq 0",
            "related_variables": [
                "NumberBeam"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of truss bridges built is non-negative.",
            "status": "formulated",
            "formulation": "\\textup{NumberTruss} \\geq 0",
            "related_variables": [
                "NumberTruss"
            ],
            "related_parameters": []
        },
        {
            "description": "The total Popsicle sticks used by building beam and truss bridges cannot exceed the total available Popsicle sticks.",
            "status": "formulated",
            "formulation": "\\\\textup{NumberBeam} \\\\cdot \\\\textup{PopsicleBeam} + \\\\textup{NumberTruss} \\\\cdot \\\\textup{PopsicleTruss} \\\\leq \\\\textup{TotalPopsicles}",
            "related_variables": [
                "NumberBeam",
                "NumberTruss"
            ],
            "related_parameters": [
                "PopsicleBeam",
                "PopsicleTruss",
                "TotalPopsicles"
            ]
        },
        {
            "description": "The total glue consumption must not exceed the available glue.",
            "status": "formulated",
            "formulation": "\\textup{GlueBeam} \\cdot \\textup{NumberBeam} + \\textup{GlueTruss} \\cdot \\textup{NumberTruss} \\leq \\textup{TotalGlue}",
            "related_variables": [
                "NumberBeam",
                "NumberTruss"
            ],
            "related_parameters": [
                "GlueBeam",
                "GlueTruss",
                "TotalGlue"
            ]
        },
        {
            "description": "At most MaxTruss truss bridges can be built by each team.",
            "status": "formulated",
            "formulation": "\\textup{NumberTruss} \\leq \\textup{MaxTruss}",
            "related_variables": [
                "NumberTruss"
            ],
            "related_parameters": [
                "MaxTruss"
            ]
        },
        {
            "description": "The number of beam bridges must be at least one greater than the number of truss bridges.",
            "status": "formulated",
            "formulation": "\\textup{NumberBeam} \\geq \\textup{NumberTruss} + 1",
            "related_variables": [
                "NumberBeam",
                "NumberTruss"
            ],
            "related_parameters": []
        },
        {
            "description": "The total Popsicle sticks used by beam and truss bridges cannot exceed the total available.",
            "status": "formulated",
            "formulation": "\\textup{PopsicleBeam} \\cdot \\textup{NumberBeam} + \\textup{PopsicleTruss} \\cdot \\textup{NumberTruss} \\leq \\textup{TotalPopsicles}",
            "related_variables": [
                "NumberBeam",
                "NumberTruss"
            ],
            "related_parameters": [
                "PopsicleBeam",
                "PopsicleTruss",
                "TotalPopsicles"
            ]
        },
        {
            "description": "The total glue used by beam and truss bridges cannot exceed the total available.",
            "status": "formulated",
            "formulation": "\\textup{GlueBeam} \\cdot \\textup{NumberBeam} + \\textup{GlueTruss} \\cdot \\textup{NumberTruss} \\leq \\textup{TotalGlue}",
            "related_variables": [
                "NumberBeam",
                "NumberTruss"
            ],
            "related_parameters": [
                "GlueBeam",
                "GlueTruss",
                "TotalGlue"
            ]
        },
        {
            "description": "The number of truss bridges built cannot exceed the maximum allowed.",
            "status": "formulated",
            "formulation": "\\textup{NumberTruss} \\leq \\textup{MaxTruss}",
            "related_variables": [
                "NumberTruss"
            ],
            "related_parameters": [
                "MaxTruss"
            ]
        },
        {
            "description": "The numbers of beam and truss bridges must be non-negative.",
            "status": "formulated",
            "formulation": "\\textup{NumberBeam} \\geq 0, \\quad \\textup{NumberTruss} \\geq 0",
            "related_variables": [
                "NumberBeam",
                "NumberTruss"
            ],
            "related_parameters": []
        }
    ],
    "variables": [
        {
            "definition": "The number of beam bridges built.",
            "symbol": "NumberBeam",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "The number of truss bridges built.",
            "symbol": "NumberTruss",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Maximize the total mass that the built bridges can support.",
            "status": "formulated",
            "formulation": "\\textup{Maximize:} \\\\ \\quad \\textup{MassBeam} \\cdot \\textup{NumberBeam} + \\textup{MassTruss} \\cdot \\textup{NumberTruss}",
            "related_variables": [
                "NumberBeam",
                "NumberTruss"
            ],
            "related_parameters": [
                "MassBeam",
                "MassTruss"
            ]
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413160746_nl4opt_prob_147/",
    "problem_path": "data/nl4opt/prob_147/"
}