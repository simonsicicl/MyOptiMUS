{
    "background": "A research group has two methods, A and B, for producing fabric and plastic, both of which consume a special element. The goal is to meet minimum production requirements for fabric and plastic with limited availability of the special element.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Units of fabric produced by method A per hour",
            "symbol": "FabricA",
            "value": 25,
            "shape": [],
            "code": "FabricA = data[\"FabricA\"] # scalar parameter"
        },
        {
            "definition": "Units of fabric produced by method B per hour",
            "symbol": "FabricB",
            "value": 45,
            "shape": [],
            "code": "FabricB = data[\"FabricB\"] # scalar parameter"
        },
        {
            "definition": "Units of plastic produced by method A per hour",
            "symbol": "PlasticA",
            "value": 14,
            "shape": [],
            "code": "PlasticA = data[\"PlasticA\"] # scalar parameter"
        },
        {
            "definition": "Units of plastic produced by method B per hour",
            "symbol": "PlasticB",
            "value": 25,
            "shape": [],
            "code": "PlasticB = data[\"PlasticB\"] # scalar parameter"
        },
        {
            "definition": "Units of the special element required by method A",
            "symbol": "ElementA",
            "value": 60,
            "shape": [],
            "code": "ElementA = data[\"ElementA\"] # scalar parameter"
        },
        {
            "definition": "Units of the special element required by method B",
            "symbol": "ElementB",
            "value": 65,
            "shape": [],
            "code": "ElementB = data[\"ElementB\"] # scalar parameter"
        },
        {
            "definition": "Total available units of the special element",
            "symbol": "TotalElement",
            "value": 3500,
            "shape": [],
            "code": "TotalElement = data[\"TotalElement\"] # scalar parameter"
        },
        {
            "definition": "Minimum required units of fabric that must be produced",
            "symbol": "MinFabric",
            "value": 1400,
            "shape": [],
            "code": "MinFabric = data[\"MinFabric\"] # scalar parameter"
        },
        {
            "definition": "Minimum required units of plastic that must be produced",
            "symbol": "MinPlastic",
            "value": 1000,
            "shape": [],
            "code": "MinPlastic = data[\"MinPlastic\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "At least MinFabric units of fabric must be produced using methods A and B.",
            "status": "formulated",
            "formulation": "\\\\textup{FabricA} \\\\cdot \\\\textup{HoursA} + \\\\textup{FabricB} \\\\cdot \\\\textup{HoursB} \\\\geq \\\\textup{MinFabric}",
            "related_variables": [
                "HoursA",
                "HoursB"
            ],
            "related_parameters": [
                "FabricA",
                "FabricB",
                "MinFabric"
            ]
        },
        {
            "description": "The total plastic production from both methods A and B must meet or exceed the minimum required units of plastic (MinPlastic).",
            "status": "formulated",
            "formulation": "\\\\textup{PlasticA} \\\\cdot \\\\textup{HoursA} + \\\\textup{PlasticB} \\\\cdot \\\\textup{HoursB} \\\\geq \\\\textup{MinPlastic}",
            "related_variables": [
                "HoursA",
                "HoursB"
            ],
            "related_parameters": [
                "PlasticA",
                "PlasticB",
                "MinPlastic"
            ]
        },
        {
            "description": "The number of hours using method A must be non-negative.",
            "status": "formulated",
            "formulation": "\\textup{HoursA} \\geq 0",
            "related_variables": [
                "HoursA"
            ],
            "related_parameters": []
        },
        {
            "description": "Non-negativity constraint on the number of hours allocated to method B.",
            "status": "formulated",
            "formulation": "\\\\textup{HoursB} \\\\geq 0",
            "related_variables": [
                "HoursB"
            ],
            "related_parameters": []
        },
        {
            "description": "Ensure that the total fabric produced meets or exceeds the minimum required fabric production.",
            "status": "formulated",
            "formulation": "\\textup{HoursA} \\times \\textup{FabricA} + \\textup{HoursB} \\times \\textup{FabricB} \\geq \\textup{MinFabric}",
            "related_variables": [
                "HoursA",
                "HoursB"
            ],
            "related_parameters": [
                "FabricA",
                "FabricB",
                "MinFabric"
            ]
        },
        {
            "description": "Ensure that the total plastic produced meets or exceeds the minimum required plastic production.",
            "status": "formulated",
            "formulation": "\\textup{HoursA} \\times \\textup{PlasticA} + \\textup{HoursB} \\times \\textup{PlasticB} \\geq \\textup{MinPlastic}",
            "related_variables": [
                "HoursA",
                "HoursB"
            ],
            "related_parameters": [
                "PlasticA",
                "PlasticB",
                "MinPlastic"
            ]
        },
        {
            "description": "Ensure that the total consumption of the special element does not exceed availability.",
            "status": "formulated",
            "formulation": "\\textup{HoursA} \\times \\textup{ElementA} + \\textup{HoursB} \\times \\textup{ElementB} \\leq \\textup{TotalElement}",
            "related_variables": [
                "HoursA",
                "HoursB"
            ],
            "related_parameters": [
                "ElementA",
                "ElementB",
                "TotalElement"
            ]
        }
    ],
    "variables": [
        {
            "definition": "The number of hours allocated to method A for production",
            "symbol": "HoursA",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "The number of hours allocated to method B for production",
            "symbol": "HoursB",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Minimize the total production time required to meet minimum fabric and plastic production requirements.",
            "status": "formulated",
            "formulation": "\\min \\quad \\textup{HoursA} + \\textup{HoursB}",
            "related_variables": [
                "HoursA",
                "HoursB"
            ],
            "related_parameters": []
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250414053742_nl4opt_prob_260/",
    "problem_path": "data/nl4opt/prob_260/"
}