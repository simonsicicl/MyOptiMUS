{
    "background": "A chemical plant is considering purchasing two types of generators, A and B, which produce hydrogen using different processes along with producing pollutants. The plant has a minimum hydrogen production requirement as well as a cap on the maximum pollutants allowed.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Hydrogen production of generator A",
            "symbol": "HydrogenA",
            "value": 40,
            "shape": [],
            "code": "HydrogenA = data[\"HydrogenA\"] # scalar parameter"
        },
        {
            "definition": "Pollutants production of generator A",
            "symbol": "PollutantsA",
            "value": 300,
            "shape": [],
            "code": "PollutantsA = data[\"PollutantsA\"] # scalar parameter"
        },
        {
            "definition": "Hydrogen production of generator B",
            "symbol": "HydrogenB",
            "value": 30,
            "shape": [],
            "code": "HydrogenB = data[\"HydrogenB\"] # scalar parameter"
        },
        {
            "definition": "Pollutants production of generator B",
            "symbol": "PollutantsB",
            "value": 200,
            "shape": [],
            "code": "PollutantsB = data[\"PollutantsB\"] # scalar parameter"
        },
        {
            "definition": "Minimum daily hydrogen production required",
            "symbol": "MinHydrogen",
            "value": 1000,
            "shape": [],
            "code": "MinHydrogen = data[\"MinHydrogen\"] # scalar parameter"
        },
        {
            "definition": "Maximum allowed daily pollutant production",
            "symbol": "MaxPollutants",
            "value": 3000,
            "shape": [],
            "code": "MaxPollutants = data[\"MaxPollutants\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The number of generator A must be non-negative.",
            "status": "formulated",
            "formulation": "\\\\textup{NumGeneratorA} \\\\geq 0",
            "related_variables": [
                "NumGeneratorA"
            ],
            "related_parameters": []
        },
        {
            "description": "The quantity of generator B must be non-negative, ensuring feasibility in the optimization problem.",
            "status": "formulated",
            "formulation": "\\textup{NumGeneratorB} \\geq 0",
            "related_variables": [
                "NumGeneratorB"
            ],
            "related_parameters": []
        },
        {
            "description": "The total hydrogen production must be at least the minimum required hydrogen production (MinHydrogen).",
            "status": "formulated",
            "formulation": "\\textup{HydrogenA} \\\\cdot \\textup{NumGeneratorA} + \\textup{HydrogenB} \\\\cdot \\textup{NumGeneratorB} \\geq \\textup{MinHydrogen}",
            "related_variables": [
                "NumGeneratorA",
                "NumGeneratorB"
            ],
            "related_parameters": [
                "HydrogenA",
                "HydrogenB",
                "MinHydrogen"
            ]
        },
        {
            "description": "The total pollutants produced by generators of type A and B must not exceed MaxPollutants.",
            "status": "formulated",
            "formulation": "\\\\textup{NumGeneratorA} \\\\cdot \\\\textup{PollutantsA} + \\\\textup{NumGeneratorB} \\\\cdot \\\\textup{PollutantsB} \\\\leq \\\\textup{MaxPollutants}",
            "related_variables": [
                "NumGeneratorA",
                "NumGeneratorB"
            ],
            "related_parameters": [
                "PollutantsA",
                "PollutantsB",
                "MaxPollutants"
            ]
        },
        {
            "description": "The total hydrogen produced must meet the minimum requirement.",
            "status": "formulated",
            "formulation": "(\\textup{HydrogenA} \\cdot \\textup{NumGeneratorA}) + (\\textup{HydrogenB} \\cdot \\textup{NumGeneratorB}) \\geq \\textup{MinHydrogen}",
            "related_variables": [
                "NumGeneratorA",
                "NumGeneratorB"
            ],
            "related_parameters": [
                "HydrogenA",
                "HydrogenB",
                "MinHydrogen"
            ]
        },
        {
            "description": "The total pollutants produced must not exceed the allowed maximum.",
            "status": "formulated",
            "formulation": "(\\textup{PollutantsA} \\cdot \\textup{NumGeneratorA}) + (\\textup{PollutantsB} \\cdot \\textup{NumGeneratorB}) \\leq \\textup{MaxPollutants}",
            "related_variables": [
                "NumGeneratorA",
                "NumGeneratorB"
            ],
            "related_parameters": [
                "PollutantsA",
                "PollutantsB",
                "MaxPollutants"
            ]
        }
    ],
    "variables": [
        {
            "definition": "The number of generators of type A purchased",
            "symbol": "NumGeneratorA",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "The number of generators of type B purchased",
            "symbol": "NumGeneratorB",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Minimize the total number of generators A and B purchased.",
            "status": "formulated",
            "formulation": "\\textup{Minimize:} \\\\ \\textup{NumGeneratorA} + \\textup{NumGeneratorB}",
            "related_variables": [
                "NumGeneratorA",
                "NumGeneratorB"
            ],
            "related_parameters": []
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250414062116_nl4opt_prob_93/",
    "problem_path": "data/nl4opt/prob_93/"
}