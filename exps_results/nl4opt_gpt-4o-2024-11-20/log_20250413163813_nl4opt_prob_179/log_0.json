{
    "background": "An industrial tire company needs to deliver large tires to remote engineering sites with a minimum delivery requirement, a budget, and constraints on transport modes.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Tires transported per trip by cargo plane",
            "symbol": "TiresPlane",
            "value": 10,
            "shape": [],
            "code": "TiresPlane = data[\"TiresPlane\"] # scalar parameter"
        },
        {
            "definition": "Cost per trip of a cargo plane",
            "symbol": "CostPlane",
            "value": 1000,
            "shape": [],
            "code": "CostPlane = data[\"CostPlane\"] # scalar parameter"
        },
        {
            "definition": "Tires transported per trip by ultrawide truck",
            "symbol": "TiresTruck",
            "value": 6,
            "shape": [],
            "code": "TiresTruck = data[\"TiresTruck\"] # scalar parameter"
        },
        {
            "definition": "Cost per trip of an ultrawide truck",
            "symbol": "CostTruck",
            "value": 700,
            "shape": [],
            "code": "CostTruck = data[\"CostTruck\"] # scalar parameter"
        },
        {
            "definition": "Minimum number of tires required to transport",
            "symbol": "MinTires",
            "value": 200,
            "shape": [],
            "code": "MinTires = data[\"MinTires\"] # scalar parameter"
        },
        {
            "definition": "Available budget for transport",
            "symbol": "Budget",
            "value": 22000,
            "shape": [],
            "code": "Budget = data[\"Budget\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The number of plane trips must be non-negative.",
            "status": "formulated",
            "formulation": "\\\\textup{PlaneTrips} \\\\geq 0",
            "related_variables": [
                "PlaneTrips"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of truck trips should be non-negative.",
            "status": "formulated",
            "formulation": "\\textup{TruckTrips} \\geq 0",
            "related_variables": [
                "TruckTrips"
            ],
            "related_parameters": []
        },
        {
            "description": "Constraint ensuring that the total tires transported by cargo planes and ultrawide trucks is at least MinTires.",
            "status": "formulated",
            "formulation": "\\\\textup{TiresPlane} \\\\cdot \\\\textup{PlaneTrips} + \\\\textup{TiresTruck} \\\\cdot \\\\textup{TruckTrips} \\\\geq \\\\textup{MinTires}",
            "related_variables": [
                "PlaneTrips",
                "TruckTrips"
            ],
            "related_parameters": [
                "TiresPlane",
                "TiresTruck",
                "MinTires"
            ]
        },
        {
            "description": "The total cost of transporting tires using cargo planes and ultrawide trucks must not exceed the available budget.",
            "status": "formulated",
            "formulation": "\\\\textup{CostPlane} \\\\times \\\\textup{PlaneTrips} + \\\\textup{CostTruck} \\\\times \\\\textup{TruckTrips} \\\\leq \\\\textup{Budget}",
            "related_variables": [
                "PlaneTrips",
                "TruckTrips"
            ],
            "related_parameters": [
                "CostPlane",
                "CostTruck",
                "Budget"
            ]
        },
        {
            "description": "The number of plane trips cannot exceed the number of truck trips.",
            "status": "formulated",
            "formulation": "\\textup{PlaneTrips} \\leq \\textup{TruckTrips}",
            "related_variables": [
                "PlaneTrips",
                "TruckTrips"
            ],
            "related_parameters": []
        },
        {
            "description": "Ensure the total number of tires delivered by planes and trucks meets or exceeds the minimum requirement.",
            "status": "formulated",
            "formulation": "\\textup{TiresPlane} \\cdot \\textup{PlaneTrips} + \\textup{TiresTruck} \\cdot \\textup{TruckTrips} \\geq \\textup{MinTires}",
            "related_variables": [
                "PlaneTrips",
                "TruckTrips"
            ],
            "related_parameters": [
                "TiresPlane",
                "TiresTruck",
                "MinTires"
            ]
        },
        {
            "description": "Ensure the total transportation cost is within the available budget.",
            "status": "formulated",
            "formulation": "\\textup{CostPlane} \\cdot \\textup{PlaneTrips} + \\textup{CostTruck} \\cdot \\textup{TruckTrips} \\leq \\textup{Budget}",
            "related_variables": [
                "PlaneTrips",
                "TruckTrips"
            ],
            "related_parameters": [
                "CostPlane",
                "CostTruck",
                "Budget"
            ]
        }
    ],
    "variables": [
        {
            "definition": "The number of trips made by cargo planes.",
            "symbol": "PlaneTrips",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "The number of trips made by ultrawide trucks.",
            "symbol": "TruckTrips",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Minimize the total number of trips made by planes and trucks.",
            "status": "formulated",
            "formulation": "\\textup{Minimize:} \\quad \\textup{PlaneTrips} + \\textup{TruckTrips}",
            "related_variables": [
                "PlaneTrips",
                "TruckTrips"
            ],
            "related_parameters": []
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413163813_nl4opt_prob_179/",
    "problem_path": "data/nl4opt/prob_179/"
}