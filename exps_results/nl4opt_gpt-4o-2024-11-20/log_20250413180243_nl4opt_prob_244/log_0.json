{
    "background": "A metal-working shop needs to decide on the purchase of metal-working equipment, considering the capacities and waste generation of chop saws and steel cutters to meet an expected daily metal cutting demand without exceeding the waste production limit.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Pounds of steel worked by the chop saw per day",
            "symbol": "PoundsChopSaw",
            "value": 25,
            "shape": [],
            "code": "PoundsChopSaw = data[\"PoundsChopSaw\"] # scalar parameter"
        },
        {
            "definition": "Units of waste generated by the chop saw per day",
            "symbol": "WasteChopSaw",
            "value": 25,
            "shape": [],
            "code": "WasteChopSaw = data[\"WasteChopSaw\"] # scalar parameter"
        },
        {
            "definition": "Pounds of steel worked by the steel cutter per day",
            "symbol": "PoundsSteelCutter",
            "value": 5,
            "shape": [],
            "code": "PoundsSteelCutter = data[\"PoundsSteelCutter\"] # scalar parameter"
        },
        {
            "definition": "Units of waste generated by the steel cutter per day",
            "symbol": "WasteSteelCutter",
            "value": 3,
            "shape": [],
            "code": "WasteSteelCutter = data[\"WasteSteelCutter\"] # scalar parameter"
        },
        {
            "definition": "Total pounds of steel required to be worked per day",
            "symbol": "TotalPounds",
            "value": 520,
            "shape": [],
            "code": "TotalPounds = data[\"TotalPounds\"] # scalar parameter"
        },
        {
            "definition": "Maximum allowed units of waste per day",
            "symbol": "MaxWaste",
            "value": 400,
            "shape": [],
            "code": "MaxWaste = data[\"MaxWaste\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The number of chop saws must be non-negative.",
            "status": "formulated",
            "formulation": "\\textup{NumberOfChopSaws} \\geq 0",
            "related_variables": [
                "NumberOfChopSaws"
            ],
            "related_parameters": []
        },
        {
            "description": "The total pounds of steel worked must meet or exceed the daily steel requirement. Additionally, the total waste generated by both equipment types must not exceed the allowable daily waste limit.",
            "status": "formulated",
            "formulation": "\\textup{PoundsChopSaw} \\\\cdot \\textup{NumberOfChopSaws} + \\textup{PoundsSteelCutter} \\\\cdot \\textup{NumberOfSteelCutters} \\geq \\textup{TotalPounds}, \\\\quad \\textup{WasteChopSaw} \\\\cdot \\textup{NumberOfChopSaws} + \\textup{WasteSteelCutter} \\\\cdot \\textup{NumberOfSteelCutters} \\leq \\textup{MaxWaste}",
            "related_variables": [
                "NumberOfChopSaws",
                "NumberOfSteelCutters"
            ],
            "related_parameters": [
                "PoundsChopSaw",
                "PoundsSteelCutter",
                "TotalPounds",
                "WasteChopSaw",
                "WasteSteelCutter",
                "MaxWaste"
            ]
        },
        {
            "description": "The total pounds of metal cut daily must meet or exceed the required \\textup{TotalPounds}.",
            "status": "formulated",
            "formulation": "\\textup{PoundsChopSaw} \\times \\textup{NumberOfChopSaws} + \\textup{PoundsSteelCutter} \\times \\textup{NumberOfSteelCutters} \\geq \\textup{TotalPounds}",
            "related_variables": [
                "NumberOfChopSaws",
                "NumberOfSteelCutters"
            ],
            "related_parameters": [
                "PoundsChopSaw",
                "PoundsSteelCutter",
                "TotalPounds"
            ]
        },
        {
            "description": "The total waste produced by the chop saws and steel cutters must not exceed the maximum allowed units of waste per day.",
            "status": "formulated",
            "formulation": "(\\textup{NumberOfChopSaws} \\times \\textup{WasteChopSaw}) + (\\textup{NumberOfSteelCutters} \\times \\textup{WasteSteelCutter}) \\leq \\textup{MaxWaste}",
            "related_variables": [
                "NumberOfChopSaws",
                "NumberOfSteelCutters"
            ],
            "related_parameters": [
                "WasteChopSaw",
                "WasteSteelCutter",
                "MaxWaste"
            ]
        },
        {
            "description": "The number of steel cutters is non-negative.",
            "status": "formulated",
            "formulation": "\\textup{NumberOfSteelCutters} \\geq 0",
            "related_variables": [
                "NumberOfSteelCutters"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of chop saws is non-negative.",
            "status": "formulated",
            "formulation": "\\textup{NumberOfChopSaws} \\geq 0",
            "related_variables": [
                "NumberOfChopSaws"
            ],
            "related_parameters": []
        },
        {
            "description": "Ensure that the total pounds of steel worked by chop saws and steel cutters meets or exceeds the daily demand.",
            "status": "formulated",
            "formulation": "(\\textup{PoundsChopSaw} \\cdot \\textup{NumberOfChopSaws}) + (\\textup{PoundsSteelCutter} \\cdot \\textup{NumberOfSteelCutters}) \\geq \\textup{TotalPounds}",
            "related_variables": [
                "NumberOfChopSaws",
                "NumberOfSteelCutters"
            ],
            "related_parameters": [
                "PoundsChopSaw",
                "PoundsSteelCutter",
                "TotalPounds"
            ]
        },
        {
            "description": "Ensure that the total waste generated by chop saws and steel cutters does not exceed the maximum allowed waste.",
            "status": "formulated",
            "formulation": "(\\textup{WasteChopSaw} \\cdot \\textup{NumberOfChopSaws}) + (\\textup{WasteSteelCutter} \\cdot \\textup{NumberOfSteelCutters}) \\leq \\textup{MaxWaste}",
            "related_variables": [
                "NumberOfChopSaws",
                "NumberOfSteelCutters"
            ],
            "related_parameters": [
                "WasteChopSaw",
                "WasteSteelCutter",
                "MaxWaste"
            ]
        }
    ],
    "variables": [
        {
            "definition": "The number of chop saws purchased or operated in the metal-working shop.",
            "symbol": "NumberOfChopSaws",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "The number of steel cutters purchased or operated in the metal-working shop.",
            "symbol": "NumberOfSteelCutters",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Minimize the total number of metal-working equipment needed by the shop.",
            "status": "formulated",
            "formulation": "\\textup{Minimize} \\quad \\textup{NumberOfChopSaws} + \\textup{NumberOfSteelCutters}",
            "related_variables": [
                "NumberOfChopSaws",
                "NumberOfSteelCutters"
            ],
            "related_parameters": []
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413180243_nl4opt_prob_244/",
    "problem_path": "data/nl4opt/prob_244/"
}