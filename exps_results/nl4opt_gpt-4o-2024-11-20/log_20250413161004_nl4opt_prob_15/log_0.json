{
    "background": "A store employs senior citizens and young adults, who have different wages.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Wage for senior citizens per week",
            "symbol": "WageSenior",
            "value": 500,
            "shape": [],
            "code": "WageSenior = data[\"WageSenior\"] # scalar parameter"
        },
        {
            "definition": "Wage for young adults per week",
            "symbol": "WageYoung",
            "value": 750,
            "shape": [],
            "code": "WageYoung = data[\"WageYoung\"] # scalar parameter"
        },
        {
            "definition": "Maximum weekly wage bill",
            "symbol": "MaxWageBill",
            "value": 30000,
            "shape": [],
            "code": "MaxWageBill = data[\"MaxWageBill\"] # scalar parameter"
        },
        {
            "definition": "Minimum number of workers required per day",
            "symbol": "MinWorkers",
            "value": 50,
            "shape": [],
            "code": "MinWorkers = data[\"MinWorkers\"] # scalar parameter"
        },
        {
            "definition": "Minimum number of young adults required per day",
            "symbol": "MinYoung",
            "value": 10,
            "shape": [],
            "code": "MinYoung = data[\"MinYoung\"] # scalar parameter"
        },
        {
            "definition": "Minimum fraction of young adults relative to senior citizens",
            "symbol": "YoungToSeniorRatio",
            "value": 0.33,
            "shape": [],
            "code": "YoungToSeniorRatio = data[\"YoungToSeniorRatio\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The total weekly wage for all workers employed must not exceed the maximum wage bill (MaxWageBill).",
            "status": "formulated",
            "formulation": "\\\\textup{WageSenior} \\\\cdot \\\\textup{NumberSenior} + \\\\textup{WageYoung} \\\\cdot \\\\textup{NumberYoung} \\\\leq \\\\textup{MaxWageBill}",
            "related_variables": [
                "NumberSenior",
                "NumberYoung"
            ],
            "related_parameters": [
                "WageSenior",
                "WageYoung",
                "MaxWageBill"
            ]
        },
        {
            "description": "Each day, the total number of workers on duty (average per day from weekly employment) must be at least \\textup{MinWorkers}.",
            "status": "formulated",
            "formulation": "\\frac{\\textup{NumberSenior} + \\textup{NumberYoung}}{7} \\geq \\textup{MinWorkers}",
            "related_variables": [
                "NumberSenior",
                "NumberYoung"
            ],
            "related_parameters": [
                "MinWorkers"
            ]
        },
        {
            "description": "Ensure the weekly employment of young adults is sufficient to meet the daily minimum requirement for 7 days.",
            "status": "formulated",
            "formulation": "\\textup{NumberYoung} \\geq 7 \\cdot \\textup{MinYoung}",
            "related_variables": [
                "NumberYoung"
            ],
            "related_parameters": [
                "MinYoung"
            ]
        },
        {
            "description": "The number of young adults must be at least YoungToSeniorRatio times the number of senior citizens employed.",
            "status": "formulated",
            "formulation": "\\\\textup{NumberYoung} \\\\geq \\\\textup{YoungToSeniorRatio} \\\\cdot \\\\textup{NumberSenior}",
            "related_variables": [
                "NumberYoung",
                "NumberSenior"
            ],
            "related_parameters": [
                "YoungToSeniorRatio"
            ]
        },
        {
            "description": "The number of senior citizens employed in a week must be non-negative.",
            "status": "formulated",
            "formulation": "\\textup{NumberSenior} \\geq 0",
            "related_variables": [
                "NumberSenior"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of young adults employed in a week must be non-negative.",
            "status": "formulated",
            "formulation": "\\\\textup{NumberYoung} \\\\geq 0",
            "related_variables": [
                "NumberYoung"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of senior citizens employed must be an integer.",
            "status": "formulated",
            "formulation": "\\textup{NumberSenior} \\in \\mathbb{Z}",
            "related_variables": [
                "NumberSenior"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of young adults employed must be an integer.",
            "status": "formulated",
            "formulation": "\\textup{NumberYoung} \\in \\mathbb{Z}",
            "related_variables": [
                "NumberYoung"
            ],
            "related_parameters": []
        },
        {
            "description": "Ensure the total weekly wage bill does not exceed the maximum allowable budget.",
            "status": "formulated",
            "formulation": "\\textup{WageSenior} \\cdot \\textup{NumberSenior} + \\textup{WageYoung} \\cdot \\textup{NumberYoung} \\leq \\textup{MaxWageBill}",
            "related_variables": [
                "NumberSenior",
                "NumberYoung"
            ],
            "related_parameters": [
                "WageSenior",
                "WageYoung",
                "MaxWageBill"
            ]
        },
        {
            "description": "Ensure the total number of workers employed meets the minimum daily requirement.",
            "status": "formulated",
            "formulation": "\\textup{NumberSenior} + \\textup{NumberYoung} \\geq \\textup{MinWorkers}",
            "related_variables": [
                "NumberSenior",
                "NumberYoung"
            ],
            "related_parameters": [
                "MinWorkers"
            ]
        },
        {
            "description": "Ensure the number of young adults employed meets the minimum daily requirement.",
            "status": "formulated",
            "formulation": "\\textup{NumberYoung} \\geq \\textup{MinYoung}",
            "related_variables": [
                "NumberYoung"
            ],
            "related_parameters": [
                "MinYoung"
            ]
        },
        {
            "description": "Ensure the fraction of young adults is above the minimum relative to senior citizens, based on the given ratio.",
            "status": "formulated",
            "formulation": "\\textup{NumberYoung} \\geq \\textup{YoungToSeniorRatio} \\cdot \\textup{NumberSenior}",
            "related_variables": [
                "NumberSenior",
                "NumberYoung"
            ],
            "related_parameters": [
                "YoungToSeniorRatio"
            ]
        }
    ],
    "variables": [
        {
            "definition": "Number of senior citizens employed in a week",
            "symbol": "NumberSenior",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "Number of young adults employed in a week",
            "symbol": "NumberYoung",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Minimize the weekly wage bill by adjusting the number of senior citizens and young adults employed.",
            "status": "formulated",
            "formulation": "\\textup{Minimize: } \\textup{WageSenior} \\cdot \\textup{NumberSenior} + \\textup{WageYoung} \\cdot \\textup{NumberYoung}",
            "related_variables": [
                "NumberSenior",
                "NumberYoung"
            ],
            "related_parameters": [
                "WageSenior",
                "WageYoung"
            ]
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413161004_nl4opt_prob_15/",
    "problem_path": "data/nl4opt/prob_15/"
}