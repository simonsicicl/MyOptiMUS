{
    "background": "A shipping company must decide how to transport packages using trucks and cars to minimize gas consumption, while meeting package delivery and trip constraints.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Number of packages transported per trip by truck",
            "symbol": "PackageTruck",
            "value": 50,
            "shape": [],
            "code": "PackageTruck = data[\"PackageTruck\"] # scalar parameter"
        },
        {
            "definition": "Number of packages transported per trip by car",
            "symbol": "PackageCar",
            "value": 30,
            "shape": [],
            "code": "PackageCar = data[\"PackageCar\"] # scalar parameter"
        },
        {
            "definition": "Gas used per trip by truck",
            "symbol": "GasTruck",
            "value": 20,
            "shape": [],
            "code": "GasTruck = data[\"GasTruck\"] # scalar parameter"
        },
        {
            "definition": "Gas used per trip by car",
            "symbol": "GasCar",
            "value": 15,
            "shape": [],
            "code": "GasCar = data[\"GasCar\"] # scalar parameter"
        },
        {
            "definition": "Maximum number of truck trips",
            "symbol": "MaxTruckTrips",
            "value": 5,
            "shape": [],
            "code": "MaxTruckTrips = data[\"MaxTruckTrips\"] # scalar parameter"
        },
        {
            "definition": "Minimum proportion of trips made by car",
            "symbol": "MinCarTripProp",
            "value": 0.33,
            "shape": [],
            "code": "MinCarTripProp = data[\"MinCarTripProp\"] # scalar parameter"
        },
        {
            "definition": "Minimum number of packages to be transported",
            "symbol": "MinPackages",
            "value": 500,
            "shape": [],
            "code": "MinPackages = data[\"MinPackages\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The number of truck trips must be non-negative.",
            "status": "formulated",
            "formulation": "\\\\textup{TruckTrips} \\\\geq 0",
            "related_variables": [
                "TruckTrips"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of car trips must be non-negative.",
            "status": "formulated",
            "formulation": "\\\\textup{CarTrips} \\\\geq 0",
            "related_variables": [
                "CarTrips"
            ],
            "related_parameters": []
        },
        {
            "description": "Ensure that the number of truck trips does not exceed the maximum allowed truck trips.",
            "status": "formulated",
            "formulation": "\\textup{TruckTrips} \\leq \\textup{MaxTruckTrips}",
            "related_variables": [
                "TruckTrips"
            ],
            "related_parameters": [
                "MaxTruckTrips"
            ]
        },
        {
            "description": "At least MinCarTripProp of all trips must be made by cars.",
            "status": "formulated",
            "formulation": "(1 - \\textup{MinCarTripProp}) \\cdot \\textup{CarTrips} - \\textup{MinCarTripProp} \\cdot \\textup{TruckTrips} \\geq 0",
            "related_variables": [
                "TruckTrips",
                "CarTrips"
            ],
            "related_parameters": [
                "MinCarTripProp"
            ]
        },
        {
            "description": "Ensure at least MinPackages packages are transported.",
            "status": "formulated",
            "formulation": "\\\\textup{TruckTrips} \\\\cdot \\\\textup{PackageTruck} + \\\\textup{CarTrips} \\\\cdot \\\\textup{PackageCar} \\\\geq \\\\textup{MinPackages}",
            "related_variables": [
                "TruckTrips",
                "CarTrips"
            ],
            "related_parameters": [
                "PackageTruck",
                "PackageCar",
                "MinPackages"
            ]
        },
        {
            "description": "Ensure total number of trips is greater than zero (to avoid division by zero).",
            "status": "formulated",
            "formulation": "\\textup{TruckTrips} + \\textup{CarTrips} \\geq 1",
            "related_variables": [
                "TruckTrips",
                "CarTrips"
            ],
            "related_parameters": []
        },
        {
            "description": "Ensure non-negativity of TruckTrips.",
            "status": "formulated",
            "formulation": "\\textup{TruckTrips} \\geq 0",
            "related_variables": [
                "TruckTrips"
            ],
            "related_parameters": []
        },
        {
            "description": "Ensure non-negativity of CarTrips.",
            "status": "formulated",
            "formulation": "\\textup{CarTrips} \\geq 0",
            "related_variables": [
                "CarTrips"
            ],
            "related_parameters": []
        },
        {
            "description": "The total number of packages transported must be at least the minimum required",
            "status": "formulated",
            "formulation": "(\\textup{PackageTruck} \\\\cdot \\textup{TruckTrips}) + (\\textup{PackageCar} \\\\cdot \\textup{CarTrips}) \\\\geq \\textup{MinPackages}",
            "related_variables": [
                "TruckTrips",
                "CarTrips"
            ],
            "related_parameters": [
                "PackageTruck",
                "PackageCar",
                "MinPackages"
            ]
        },
        {
            "description": "The number of truck trips must not exceed the maximum allowable",
            "status": "formulated",
            "formulation": "\\textup{TruckTrips} \\\\leq \\textup{MaxTruckTrips}",
            "related_variables": [
                "TruckTrips"
            ],
            "related_parameters": [
                "MaxTruckTrips"
            ]
        },
        {
            "description": "The proportion of trips made by cars must be at least the minimum required proportion",
            "status": "formulated",
            "formulation": "(1 - \\textup{MinCarTripProp}) \\\\cdot \\textup{CarTrips} \\\\geq \\textup{MinCarTripProp} \\\\cdot \\textup{TruckTrips}",
            "related_variables": [
                "TruckTrips",
                "CarTrips"
            ],
            "related_parameters": [
                "MinCarTripProp"
            ]
        }
    ],
    "variables": [
        {
            "definition": "The number of trips made using trucks.",
            "symbol": "TruckTrips",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "The number of trips made using cars.",
            "symbol": "CarTrips",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Minimize the total amount of gas consumed for transporting packages",
            "status": "formulated",
            "formulation": "\\textup{Minimize:} \\quad (\\textup{GasTruck} \\\\cdot \\textup{TruckTrips}) + (\\textup{GasCar} \\\\cdot \\textup{CarTrips})",
            "related_variables": [
                "TruckTrips",
                "CarTrips"
            ],
            "related_parameters": [
                "GasTruck",
                "GasCar"
            ]
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413170942_nl4opt_prob_191/",
    "problem_path": "data/nl4opt/prob_191/"
}