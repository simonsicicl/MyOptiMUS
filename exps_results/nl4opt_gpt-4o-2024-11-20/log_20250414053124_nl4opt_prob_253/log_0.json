{
    "background": "A mask making company needs to ship masks to retail stores and aims to determine the optimal number of small and large boxes to use, adhering to specific capacity and ratio constraints.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Number of masks a small box can hold",
            "symbol": "SmallBoxCapacity",
            "value": 25,
            "shape": [],
            "code": "SmallBoxCapacity = data[\"SmallBoxCapacity\"] # scalar parameter"
        },
        {
            "definition": "Number of masks a large box can hold",
            "symbol": "LargeBoxCapacity",
            "value": 45,
            "shape": [],
            "code": "LargeBoxCapacity = data[\"LargeBoxCapacity\"] # scalar parameter"
        },
        {
            "definition": "Minimum ratio of the number of small boxes to large boxes",
            "symbol": "MinSmallToLargeRatio",
            "value": 0.33,
            "shape": [],
            "code": "MinSmallToLargeRatio = data[\"MinSmallToLargeRatio\"] # scalar parameter"
        },
        {
            "definition": "Minimum number of large boxes required",
            "symbol": "MinLargeBoxes",
            "value": 5,
            "shape": [],
            "code": "MinLargeBoxes = data[\"MinLargeBoxes\"] # scalar parameter"
        },
        {
            "definition": "Minimum number of masks required to be distributed",
            "symbol": "MinMasksRequired",
            "value": 750,
            "shape": [],
            "code": "MinMasksRequired = data[\"MinMasksRequired\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The number of small boxes must be non-negative.",
            "status": "formulated",
            "formulation": "\\textup{SmallBoxes} \\geq 0",
            "related_variables": [
                "SmallBoxes"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of large boxes is non-negative.",
            "status": "formulated",
            "formulation": "\\textup{LargeBoxes} \\geq 0",
            "related_variables": [
                "LargeBoxes"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of small boxes must be at least MinSmallToLargeRatio times the number of large boxes.",
            "status": "formulated",
            "formulation": "\\textup{SmallBoxes} \\geq \\textup{MinSmallToLargeRatio} \\cdot \\textup{LargeBoxes}",
            "related_variables": [
                "SmallBoxes",
                "LargeBoxes"
            ],
            "related_parameters": [
                "MinSmallToLargeRatio"
            ]
        },
        {
            "description": "The number of large boxes used must be at least \\textup{MinLargeBoxes}.",
            "status": "formulated",
            "formulation": "\\textup{LargeBoxes} \\geq \\textup{MinLargeBoxes}",
            "related_variables": [
                "LargeBoxes"
            ],
            "related_parameters": [
                "MinLargeBoxes"
            ]
        },
        {
            "description": "The total number of masks distributed must be at least MinMasksRequired.",
            "status": "formulated",
            "formulation": "\\textup{SmallBoxes} \\times \\textup{SmallBoxCapacity} + \\textup{LargeBoxes} \\times \\textup{LargeBoxCapacity} \\geq \\textup{MinMasksRequired}",
            "related_variables": [
                "SmallBoxes",
                "LargeBoxes"
            ],
            "related_parameters": [
                "SmallBoxCapacity",
                "LargeBoxCapacity",
                "MinMasksRequired"
            ]
        },
        {
            "description": "Ensure the total number of masks shipped meets or exceeds the minimum required.",
            "status": "formulated",
            "formulation": "\\textup{SmallBoxes} \\cdot \\textup{SmallBoxCapacity} + \\textup{LargeBoxes} \\cdot \\textup{LargeBoxCapacity} \\geq \\textup{MinMasksRequired}",
            "related_variables": [
                "SmallBoxes",
                "LargeBoxes"
            ],
            "related_parameters": [
                "SmallBoxCapacity",
                "LargeBoxCapacity",
                "MinMasksRequired"
            ]
        },
        {
            "description": "Ensure the number of small boxes meets the minimum ratio with respect to the number of large boxes.",
            "status": "formulated",
            "formulation": "\\textup{SmallBoxes} \\geq \\textup{MinSmallToLargeRatio} \\cdot \\textup{LargeBoxes}",
            "related_variables": [
                "SmallBoxes",
                "LargeBoxes"
            ],
            "related_parameters": [
                "MinSmallToLargeRatio"
            ]
        },
        {
            "description": "Ensure the number of large boxes meets the minimum required number.",
            "status": "formulated",
            "formulation": "\\textup{LargeBoxes} \\geq \\textup{MinLargeBoxes}",
            "related_variables": [
                "LargeBoxes"
            ],
            "related_parameters": [
                "MinLargeBoxes"
            ]
        }
    ],
    "variables": [
        {
            "definition": "The number of small boxes used in shipping.",
            "symbol": "SmallBoxes",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "The number of large boxes used in shipping.",
            "symbol": "LargeBoxes",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Minimize the total number of boxes (small and large) used for shipping masks.",
            "status": "formulated",
            "formulation": "\\textup{Minimize} \\quad \\textup{SmallBoxes} + \\textup{LargeBoxes}",
            "related_variables": [
                "SmallBoxes",
                "LargeBoxes"
            ],
            "related_parameters": []
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250414053124_nl4opt_prob_253/",
    "problem_path": "data/nl4opt/prob_253/"
}