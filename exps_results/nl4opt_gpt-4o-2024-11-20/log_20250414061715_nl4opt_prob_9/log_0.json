{
    "background": "A store owner is looking to maximize profit by selling carrots and cucumbers with known costs and profits while adhering to budget constraints.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Monthly budget for carrots and cucumbers",
            "symbol": "Budget",
            "value": 500,
            "shape": [],
            "code": "Budget = data[\"Budget\"] # scalar parameter"
        },
        {
            "definition": "Cost per carrot",
            "symbol": "CostCarrot",
            "value": 0.3,
            "shape": [],
            "code": "CostCarrot = data[\"CostCarrot\"] # scalar parameter"
        },
        {
            "definition": "Cost per cucumber",
            "symbol": "CostCucumber",
            "value": 0.5,
            "shape": [],
            "code": "CostCucumber = data[\"CostCucumber\"] # scalar parameter"
        },
        {
            "definition": "Profit per carrot",
            "symbol": "ProfitCarrot",
            "value": 0.75,
            "shape": [],
            "code": "ProfitCarrot = data[\"ProfitCarrot\"] # scalar parameter"
        },
        {
            "definition": "Profit per cucumber",
            "symbol": "ProfitCucumber",
            "value": 0.8,
            "shape": [],
            "code": "ProfitCucumber = data[\"ProfitCucumber\"] # scalar parameter"
        },
        {
            "definition": "Estimated maximum ratio of cucumbers sold to carrots sold",
            "symbol": "RatioCucumbersToCarrots",
            "value": 0.33,
            "shape": [],
            "code": "RatioCucumbersToCarrots = data[\"RatioCucumbersToCarrots\"] # scalar parameter"
        },
        {
            "definition": "Minimum number of carrots sold per month",
            "symbol": "MinCarrotsSold",
            "value": 300,
            "shape": [],
            "code": "MinCarrotsSold = data[\"MinCarrotsSold\"] # scalar parameter"
        },
        {
            "definition": "Maximum number of carrots sold per month",
            "symbol": "MaxCarrotsSold",
            "value": 500,
            "shape": [],
            "code": "MaxCarrotsSold = data[\"MaxCarrotsSold\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The number of carrots sold must be an integer.",
            "status": "formulated",
            "formulation": "\\textup{CarrotsSold} \\in \\mathbb{Z}",
            "related_variables": [
                "CarrotsSold"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of cucumbers sold is an integer.",
            "status": "formulated",
            "formulation": "\\\\textup{CucumbersSold} \\\\in \\\\mathbb{Z}",
            "related_variables": [
                "CucumbersSold"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of carrots sold must be greater than or equal to zero (non-negative).",
            "status": "formulated",
            "formulation": "\\\\textup{CarrotsSold} \\\\geq 0",
            "related_variables": [
                "CarrotsSold"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of cucumbers sold must be non-negative.",
            "status": "formulated",
            "formulation": "\\textup{CucumbersSold} \\geq 0",
            "related_variables": [
                "CucumbersSold"
            ],
            "related_parameters": []
        },
        {
            "description": "The budget constraint to ensure the total cost of carrots and cucumbers sold does not exceed the monthly budget.",
            "status": "formulated",
            "formulation": "\\textup{CostCarrot} \\cdot \\textup{CarrotsSold} + \\textup{CostCucumber} \\cdot \\textup{CucumbersSold} \\leq \\textup{Budget}",
            "related_variables": [
                "CarrotsSold",
                "CucumbersSold"
            ],
            "related_parameters": [
                "CostCarrot",
                "CostCucumber",
                "Budget"
            ]
        },
        {
            "description": "The number of cucumbers sold must not exceed the estimated ratio of cucumbers to carrots sold times the number of carrots sold.",
            "status": "formulated",
            "formulation": "\\\\textup{CucumbersSold} \\\\leq \\\\textup{RatioCucumbersToCarrots} \\\\times \\\\textup{CarrotsSold}",
            "related_variables": [
                "CarrotsSold",
                "CucumbersSold"
            ],
            "related_parameters": [
                "RatioCucumbersToCarrots"
            ]
        },
        {
            "description": "Ensure the number of carrots sold meets or exceeds the specified minimum requirement.",
            "status": "formulated",
            "formulation": "\\textup{CarrotsSold} \\geq \\textup{MinCarrotsSold}",
            "related_variables": [
                "CarrotsSold"
            ],
            "related_parameters": [
                "MinCarrotsSold"
            ]
        },
        {
            "description": "The number of carrots sold should not exceed the maximum allowed number of carrots sold.",
            "status": "formulated",
            "formulation": "\\textup{CarrotsSold} \\leq \\textup{MaxCarrotsSold}",
            "related_variables": [
                "CarrotsSold"
            ],
            "related_parameters": [
                "MaxCarrotsSold"
            ]
        },
        {
            "description": "Auxiliary constraint ensuring the number of carrots sold is within the specified minimum and maximum bounds.",
            "status": "formulated",
            "formulation": "\\textup{MinCarrotsSold} \\leq \\textup{CarrotsSold} \\leq \\textup{MaxCarrotsSold}",
            "related_variables": [
                "CarrotsSold"
            ],
            "related_parameters": [
                "MinCarrotsSold",
                "MaxCarrotsSold"
            ]
        },
        {
            "description": "Auxiliary constraint to enforce the cucumbers-to-carrots ratio does not exceed the limit.",
            "status": "formulated",
            "formulation": "\\textup{CucumbersSold} \\leq \\textup{RatioCucumbersToCarrots} \\cdot \\textup{CarrotsSold}",
            "related_variables": [
                "CucumbersSold",
                "CarrotsSold"
            ],
            "related_parameters": [
                "RatioCucumbersToCarrots"
            ]
        },
        {
            "description": "Ensure the total cost of carrots and cucumbers does not exceed the budget.",
            "status": "formulated",
            "formulation": "\\textup{CostCarrot} \\times \\textup{CarrotsSold} + \\textup{CostCucumber} \\times \\textup{CucumbersSold} \\leq \\textup{Budget}",
            "related_variables": [
                "CarrotsSold",
                "CucumbersSold"
            ],
            "related_parameters": [
                "CostCarrot",
                "CostCucumber",
                "Budget"
            ]
        },
        {
            "description": "Ensure the number of cucumbers sold does not exceed the specified ratio relative to the number of carrots sold.",
            "status": "formulated",
            "formulation": "\\textup{CucumbersSold} \\leq \\textup{RatioCucumbersToCarrots} \\times \\textup{CarrotsSold}",
            "related_variables": [
                "CarrotsSold",
                "CucumbersSold"
            ],
            "related_parameters": [
                "RatioCucumbersToCarrots"
            ]
        },
        {
            "description": "Ensure the number of carrots sold is within the allowable range.",
            "status": "formulated",
            "formulation": "\\textup{MinCarrotsSold} \\leq \\textup{CarrotsSold} \\leq \\textup{MaxCarrotsSold}",
            "related_variables": [
                "CarrotsSold"
            ],
            "related_parameters": [
                "MinCarrotsSold",
                "MaxCarrotsSold"
            ]
        }
    ],
    "variables": [
        {
            "definition": "The number of carrots sold in the store",
            "symbol": "CarrotsSold",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "The number of cucumbers sold in the store",
            "symbol": "CucumbersSold",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Maximize total profit from selling carrots and cucumbers.",
            "status": "formulated",
            "formulation": "\\textup{ProfitCarrot} \\times \\textup{CarrotsSold} + \\textup{ProfitCucumber} \\times \\textup{CucumbersSold}",
            "related_variables": [
                "CarrotsSold",
                "CucumbersSold"
            ],
            "related_parameters": [
                "ProfitCarrot",
                "ProfitCucumber"
            ]
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250414061715_nl4opt_prob_9/",
    "problem_path": "data/nl4opt/prob_9/"
}