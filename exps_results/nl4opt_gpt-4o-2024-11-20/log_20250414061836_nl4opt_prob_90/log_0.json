{
    "background": "An accounting firm seeks to staff a project with full time and part time workers considering budget and hours worked constraints.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Number of hours per shift for full time workers",
            "symbol": "FullTimeShiftHours",
            "value": 8,
            "shape": [],
            "code": "FullTimeShiftHours = data[\"FullTimeShiftHours\"] # scalar parameter"
        },
        {
            "definition": "Number of hours per shift for part time workers",
            "symbol": "PartTimeShiftHours",
            "value": 4,
            "shape": [],
            "code": "PartTimeShiftHours = data[\"PartTimeShiftHours\"] # scalar parameter"
        },
        {
            "definition": "Payment per shift for full time workers",
            "symbol": "FullTimeShiftPay",
            "value": 300,
            "shape": [],
            "code": "FullTimeShiftPay = data[\"FullTimeShiftPay\"] # scalar parameter"
        },
        {
            "definition": "Payment per shift for part time workers",
            "symbol": "PartTimeShiftPay",
            "value": 100,
            "shape": [],
            "code": "PartTimeShiftPay = data[\"PartTimeShiftPay\"] # scalar parameter"
        },
        {
            "definition": "Total required hours of labor for the project",
            "symbol": "TotalLaborHours",
            "value": 500,
            "shape": [],
            "code": "TotalLaborHours = data[\"TotalLaborHours\"] # scalar parameter"
        },
        {
            "definition": "Total budget for labor on the project",
            "symbol": "TotalBudget",
            "value": 15000,
            "shape": [],
            "code": "TotalBudget = data[\"TotalBudget\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "Number of full-time workers is non-negative",
            "status": "formulated",
            "formulation": "\\textup{FullTimeWorkers} \\geq 0",
            "related_variables": [
                "FullTimeWorkers"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of part-time workers is non-negative.",
            "status": "formulated",
            "formulation": "\\\\textup{PartTimeWorkers} \\\\geq 0",
            "related_variables": [
                "PartTimeWorkers"
            ],
            "related_parameters": []
        },
        {
            "description": "The sum of labor hours of full-time and part-time workers must meet or exceed TotalLaborHours.",
            "status": "formulated",
            "formulation": "\\textup{TotalLaborHours} \\leq (\\textup{FullTimeWorkers} \\times \\textup{FullTimeShiftHours}) + (\\textup{PartTimeWorkers} \\times \\textup{PartTimeShiftHours})",
            "related_variables": [
                "FullTimeWorkers",
                "PartTimeWorkers"
            ],
            "related_parameters": [
                "FullTimeShiftHours",
                "PartTimeShiftHours",
                "TotalLaborHours"
            ]
        },
        {
            "description": "The total pay for all full-time and part-time workers must not exceed TotalBudget.",
            "status": "formulated",
            "formulation": "\\textup{FullTimeShiftPay} \\cdot \\textup{FullTimeWorkers} + \\textup{PartTimeShiftPay} \\cdot \\textup{PartTimeWorkers} \\leq \\textup{TotalBudget}",
            "related_variables": [
                "FullTimeWorkers",
                "PartTimeWorkers"
            ],
            "related_parameters": [
                "FullTimeShiftPay",
                "PartTimeShiftPay",
                "TotalBudget"
            ]
        },
        {
            "description": "Total labor hours worked by full-time and part-time workers must meet or exceed the required labor hours for the project",
            "status": "formulated",
            "formulation": "\\textup{FullTimeShiftHours} \\cdot \\textup{FullTimeWorkers} + \\textup{PartTimeShiftHours} \\cdot \\textup{PartTimeWorkers} \\geq \\textup{TotalLaborHours}",
            "related_variables": [
                "FullTimeWorkers",
                "PartTimeWorkers"
            ],
            "related_parameters": [
                "FullTimeShiftHours",
                "PartTimeShiftHours",
                "TotalLaborHours"
            ]
        },
        {
            "description": "Total labor cost of full-time and part-time workers must not exceed the project's budget",
            "status": "formulated",
            "formulation": "\\textup{FullTimeShiftPay} \\cdot \\textup{FullTimeWorkers} + \\textup{PartTimeShiftPay} \\cdot \\textup{PartTimeWorkers} \\leq \\textup{TotalBudget}",
            "related_variables": [
                "FullTimeWorkers",
                "PartTimeWorkers"
            ],
            "related_parameters": [
                "FullTimeShiftPay",
                "PartTimeShiftPay",
                "TotalBudget"
            ]
        }
    ],
    "variables": [
        {
            "definition": "Number of full-time workers assigned to the project",
            "symbol": "FullTimeWorkers",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "The number of part-time workers assigned to the project",
            "symbol": "PartTimeWorkers",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Minimize the total number of full-time and part-time workers scheduled for the project",
            "status": "formulated",
            "formulation": "\\textup{Minimize:} \\quad \\textup{FullTimeWorkers} + \\textup{PartTimeWorkers}",
            "related_variables": [
                "FullTimeWorkers",
                "PartTimeWorkers"
            ],
            "related_parameters": []
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250414061836_nl4opt_prob_90/",
    "problem_path": "data/nl4opt/prob_90/"
}