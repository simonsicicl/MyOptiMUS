{
    "background": "A bodybuilder is planning to buy turkey dinners and tuna salad sandwiches for his meals, which contain different amounts of protein, carbs, and fat. He has minimum protein and carbs intake goals to meet, and he also has a limit on the proportion of turkey dinners he can buy to minimize costs.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Amount of protein in a turkey dinner",
            "symbol": "ProteinTurkeyDinner",
            "value": 20,
            "shape": [],
            "code": "ProteinTurkeyDinner = data[\"ProteinTurkeyDinner\"] # scalar parameter"
        },
        {
            "definition": "Amount of carbs in a turkey dinner",
            "symbol": "CarbsTurkeyDinner",
            "value": 30,
            "shape": [],
            "code": "CarbsTurkeyDinner = data[\"CarbsTurkeyDinner\"] # scalar parameter"
        },
        {
            "definition": "Amount of fat in a turkey dinner",
            "symbol": "FatTurkeyDinner",
            "value": 12,
            "shape": [],
            "code": "FatTurkeyDinner = data[\"FatTurkeyDinner\"] # scalar parameter"
        },
        {
            "definition": "Amount of protein in a tuna salad sandwich",
            "symbol": "ProteinTunaSalad",
            "value": 18,
            "shape": [],
            "code": "ProteinTunaSalad = data[\"ProteinTunaSalad\"] # scalar parameter"
        },
        {
            "definition": "Amount of carbs in a tuna salad sandwich",
            "symbol": "CarbsTunaSalad",
            "value": 25,
            "shape": [],
            "code": "CarbsTunaSalad = data[\"CarbsTunaSalad\"] # scalar parameter"
        },
        {
            "definition": "Amount of fat in a tuna salad sandwich",
            "symbol": "FatTunaSalad",
            "value": 8,
            "shape": [],
            "code": "FatTunaSalad = data[\"FatTunaSalad\"] # scalar parameter"
        },
        {
            "definition": "Minimum required grams of protein",
            "symbol": "MinProtein",
            "value": 150,
            "shape": [],
            "code": "MinProtein = data[\"MinProtein\"] # scalar parameter"
        },
        {
            "definition": "Minimum required grams of carbs",
            "symbol": "MinCarbs",
            "value": 200,
            "shape": [],
            "code": "MinCarbs = data[\"MinCarbs\"] # scalar parameter"
        },
        {
            "definition": "Maximum proportion of total meals that can be turkey dinners",
            "symbol": "MaxTurkeyDinnerProportion",
            "value": 0.4,
            "shape": [],
            "code": "MaxTurkeyDinnerProportion = data[\"MaxTurkeyDinnerProportion\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The number of turkey dinners is non-negative.",
            "status": "formulated",
            "formulation": "\\textup{NumTurkeyDinners} \\geq 0",
            "related_variables": [
                "NumTurkeyDinners"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of tuna salad sandwiches is non-negative.",
            "status": "formulated",
            "formulation": "\\textup{NumTunaSalad} \\geq 0",
            "related_variables": [
                "NumTunaSalad"
            ],
            "related_parameters": []
        },
        {
            "description": "The total grams of protein from meals must be at least MinProtein",
            "status": "formulated",
            "formulation": "\\\\textup{ProteinTurkeyDinner} \\\\cdot \\\\textup{NumTurkeyDinners} + \\\\textup{ProteinTunaSalad} \\\\cdot \\\\textup{NumTunaSalad} \\\\geq \\\\textup{MinProtein}",
            "related_variables": [
                "NumTurkeyDinners",
                "NumTunaSalad"
            ],
            "related_parameters": [
                "ProteinTurkeyDinner",
                "ProteinTunaSalad",
                "MinProtein"
            ]
        },
        {
            "description": "The total grams of carbs from turkey dinners and tuna salad sandwiches must be at least MinCarbs.",
            "status": "formulated",
            "formulation": "\\\\textup{CarbsTurkeyDinner} \\\\cdot \\\\textup{NumTurkeyDinners} + \\\\textup{CarbsTunaSalad} \\\\cdot \\\\textup{NumTunaSalad} \\\\geq \\\\textup{MinCarbs}",
            "related_variables": [
                "NumTurkeyDinners",
                "NumTunaSalad"
            ],
            "related_parameters": [
                "CarbsTurkeyDinner",
                "CarbsTunaSalad",
                "MinCarbs"
            ]
        },
        {
            "description": "At most MaxTurkeyDinnerProportion of the meals should be turkey dinners.",
            "status": "formulated",
            "formulation": "\\textup{NumTurkeyDinners} \\leq \\textup{MaxTurkeyDinnerProportion} \\cdot \\textup{TotalMeals}",
            "related_variables": [
                "NumTurkeyDinners",
                "TotalMeals"
            ],
            "related_parameters": [
                "MaxTurkeyDinnerProportion"
            ]
        },
        {
            "description": "The total number of meals is the sum of turkey dinners and tuna salad sandwiches.",
            "status": "formulated",
            "formulation": "\\textup{TotalMeals} = \\textup{NumTurkeyDinners} + \\textup{NumTunaSalad}",
            "related_variables": [
                "TotalMeals",
                "NumTurkeyDinners",
                "NumTunaSalad"
            ],
            "related_parameters": []
        },
        {
            "description": "Ensure the meals meet the minimum required protein intake.",
            "status": "formulated",
            "formulation": "\\textup{ProteinTurkeyDinner} \\cdot \\textup{NumTurkeyDinners} + \\textup{ProteinTunaSalad} \\cdot \\textup{NumTunaSalad} \\geq \\textup{MinProtein}",
            "related_variables": [
                "NumTurkeyDinners",
                "NumTunaSalad"
            ],
            "related_parameters": [
                "ProteinTurkeyDinner",
                "ProteinTunaSalad",
                "MinProtein"
            ]
        },
        {
            "description": "Ensure the meals meet the minimum required carbs intake.",
            "status": "formulated",
            "formulation": "\\textup{CarbsTurkeyDinner} \\cdot \\textup{NumTurkeyDinners} + \\textup{CarbsTunaSalad} \\cdot \\textup{NumTunaSalad} \\geq \\textup{MinCarbs}",
            "related_variables": [
                "NumTurkeyDinners",
                "NumTunaSalad"
            ],
            "related_parameters": [
                "CarbsTurkeyDinner",
                "CarbsTunaSalad",
                "MinCarbs"
            ]
        },
        {
            "description": "Ensure the number of turkey dinners does not exceed the maximum proportion of total meals.",
            "status": "formulated",
            "formulation": "\\textup{NumTurkeyDinners} \\leq \\textup{MaxTurkeyDinnerProportion} \\cdot \\textup{TotalMeals}",
            "related_variables": [
                "NumTurkeyDinners",
                "TotalMeals"
            ],
            "related_parameters": [
                "MaxTurkeyDinnerProportion"
            ]
        },
        {
            "description": "Define the total number of meals as the sum of turkey dinners and tuna salads.",
            "status": "formulated",
            "formulation": "\\textup{TotalMeals} = \\textup{NumTurkeyDinners} + \\textup{NumTunaSalad}",
            "related_variables": [
                "NumTurkeyDinners",
                "NumTunaSalad",
                "TotalMeals"
            ],
            "related_parameters": []
        }
    ],
    "variables": [
        {
            "definition": "Number of turkey dinners to be purchased.",
            "symbol": "NumTurkeyDinners",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "Number of tuna salad sandwiches to be purchased.",
            "symbol": "NumTunaSalad",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "The total number of meals, which is the sum of turkey dinners and tuna salad sandwiches.",
            "symbol": "TotalMeals",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "The total number of meals, which is the sum of turkey dinners and tuna salad sandwiches.",
            "symbol": "TotalMeals",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Minimize the total fat intake from the meals.",
            "status": "formulated",
            "formulation": "\\textup{Minimize} \\quad \\textup{FatTurkeyDinner} \\cdot \\textup{NumTurkeyDinners} + \\textup{FatTunaSalad} \\cdot \\textup{NumTunaSalad}",
            "related_variables": [
                "NumTurkeyDinners",
                "NumTunaSalad"
            ],
            "related_parameters": [
                "FatTurkeyDinner",
                "FatTunaSalad"
            ]
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413160229_nl4opt_prob_141/",
    "problem_path": "data/nl4opt/prob_141/"
}