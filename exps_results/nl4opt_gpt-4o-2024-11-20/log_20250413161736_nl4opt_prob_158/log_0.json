{
    "background": "A school is organizing a field trip and requires buses of two sizes to transport students, with constraints on minimum students transported and parking limitations for the larger buses.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Capacity of a small bus",
            "symbol": "SmallBusCapacity",
            "value": 20,
            "shape": [],
            "code": "SmallBusCapacity = data[\"SmallBusCapacity\"] # scalar parameter"
        },
        {
            "definition": "Capacity of a large bus",
            "symbol": "LargeBusCapacity",
            "value": 50,
            "shape": [],
            "code": "LargeBusCapacity = data[\"LargeBusCapacity\"] # scalar parameter"
        },
        {
            "definition": "Minimum number of students to be transported",
            "symbol": "MinStudents",
            "value": 500,
            "shape": [],
            "code": "MinStudents = data[\"MinStudents\"] # scalar parameter"
        },
        {
            "definition": "Maximum proportion of large buses",
            "symbol": "MaxLargeBusProportion",
            "value": 0.2,
            "shape": [],
            "code": "MaxLargeBusProportion = data[\"MaxLargeBusProportion\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The number of small buses is non-negative",
            "status": "formulated",
            "formulation": "\\\\textup{NumberOfSmallBuses} \\\\geq 0",
            "related_variables": [
                "NumberOfSmallBuses"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of large buses is non-negative",
            "status": "formulated",
            "formulation": "\\textup{NumberOfLargeBuses} \\geq 0",
            "related_variables": [
                "NumberOfLargeBuses"
            ],
            "related_parameters": []
        },
        {
            "description": "The total number of students transported must be at least the minimum number of students required (MinStudents).",
            "status": "formulated",
            "formulation": "\\\\textup{NumberOfSmallBuses} \\\\cdot \\\\textup{SmallBusCapacity} + \\\\textup{NumberOfLargeBuses} \\\\cdot \\\\textup{LargeBusCapacity} \\\\geq \\\\textup{MinStudents}",
            "related_variables": [
                "NumberOfSmallBuses",
                "NumberOfLargeBuses"
            ],
            "related_parameters": [
                "SmallBusCapacity",
                "LargeBusCapacity",
                "MinStudents"
            ]
        },
        {
            "description": "The number of large buses cannot exceed MaxLargeBusProportion times the total number of buses",
            "status": "formulated",
            "formulation": "(1 - \\textup{MaxLargeBusProportion}) \\times \\textup{NumberOfLargeBuses} \\leq \\textup{MaxLargeBusProportion} \\times \\textup{NumberOfSmallBuses}",
            "related_variables": [
                "NumberOfSmallBuses",
                "NumberOfLargeBuses"
            ],
            "related_parameters": [
                "MaxLargeBusProportion"
            ]
        },
        {
            "description": "Ensure the total number of students transported meets or exceeds the minimum required.",
            "status": "formulated",
            "formulation": "\\textup{NumberOfSmallBuses} \\times \\textup{SmallBusCapacity} + \\textup{NumberOfLargeBuses} \\times \\textup{LargeBusCapacity} \\geq \\textup{MinStudents}",
            "related_variables": [
                "NumberOfSmallBuses",
                "NumberOfLargeBuses"
            ],
            "related_parameters": [
                "SmallBusCapacity",
                "LargeBusCapacity",
                "MinStudents"
            ]
        },
        {
            "description": "Ensure the number of large buses does not exceed the allowed maximum proportion of total buses.",
            "status": "formulated",
            "formulation": "\\textup{NumberOfLargeBuses} \\leq \\textup{MaxLargeBusProportion} \\times \\textup{TotalBuses}",
            "related_variables": [
                "NumberOfLargeBuses",
                "TotalBuses"
            ],
            "related_parameters": [
                "MaxLargeBusProportion"
            ]
        },
        {
            "description": "Auxiliary constraint enforcing the definition of TotalBuses as the sum of small and large buses.",
            "status": "formulated",
            "formulation": "\\textup{TotalBuses} = \\textup{NumberOfSmallBuses} + \\textup{NumberOfLargeBuses}",
            "related_variables": [
                "NumberOfSmallBuses",
                "NumberOfLargeBuses",
                "TotalBuses"
            ],
            "related_parameters": []
        }
    ],
    "variables": [
        {
            "definition": "The number of small buses to be utilized for transporting students",
            "symbol": "NumberOfSmallBuses",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "The number of large buses to be utilized for transporting students",
            "symbol": "NumberOfLargeBuses",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "The total number of buses, which is the sum of the small and large buses.",
            "symbol": "TotalBuses",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Minimize the total number of buses needed (small and large combined).",
            "status": "formulated",
            "formulation": "\\textup{Minimize} \\quad \\textup{NumberOfSmallBuses} + \\textup{NumberOfLargeBuses}",
            "related_variables": [
                "NumberOfSmallBuses",
                "NumberOfLargeBuses"
            ],
            "related_parameters": []
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413161736_nl4opt_prob_158/",
    "problem_path": "data/nl4opt/prob_158/"
}