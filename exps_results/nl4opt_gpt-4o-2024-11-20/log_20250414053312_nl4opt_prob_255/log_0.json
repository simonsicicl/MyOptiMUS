{
    "background": "An autobody shop is deciding on the purchase of two types of car jacks, an automatic electric one and a gas-powered one, to maximize the number of cars processed every hour while considering the limitations on power outlets, electricity, and gas.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Number of cars processed per hour by an automatic electric jack",
            "symbol": "CarsPerHourElectric",
            "value": 5,
            "shape": [],
            "code": "CarsPerHourElectric = data[\"CarsPerHourElectric\"] # scalar parameter"
        },
        {
            "definition": "Electrical units used per hour by an automatic electric jack",
            "symbol": "ElectricityPerJack",
            "value": 6,
            "shape": [],
            "code": "ElectricityPerJack = data[\"ElectricityPerJack\"] # scalar parameter"
        },
        {
            "definition": "Number of cars processed per hour by a gas-powered jack",
            "symbol": "CarsPerHourGas",
            "value": 4,
            "shape": [],
            "code": "CarsPerHourGas = data[\"CarsPerHourGas\"] # scalar parameter"
        },
        {
            "definition": "Gas units used per hour by a gas-powered jack",
            "symbol": "GasPerJack",
            "value": 7,
            "shape": [],
            "code": "GasPerJack = data[\"GasPerJack\"] # scalar parameter"
        },
        {
            "definition": "Maximum number of automatic electric jacks due to limited power outlets",
            "symbol": "MaxElectricJacks",
            "value": 15,
            "shape": [],
            "code": "MaxElectricJacks = data[\"MaxElectricJacks\"] # scalar parameter"
        },
        {
            "definition": "Maximum units of electricity available per hour",
            "symbol": "MaxElectricity",
            "value": 50,
            "shape": [],
            "code": "MaxElectricity = data[\"MaxElectricity\"] # scalar parameter"
        },
        {
            "definition": "Maximum units of gas available per hour",
            "symbol": "MaxGas",
            "value": 80,
            "shape": [],
            "code": "MaxGas = data[\"MaxGas\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The number of automatic electric car jacks should not be negative.",
            "status": "formulated",
            "formulation": "\\textup{ElectricJacks} \\geq 0",
            "related_variables": [
                "ElectricJacks"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of gas-powered car jacks must be non-negative.",
            "status": "formulated",
            "formulation": "\\textup{GasPoweredJacks} \\geq 0",
            "related_variables": [
                "GasPoweredJacks"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of automatic electric car jacks is less than or equal to the maximum allowable number of electric car jacks.",
            "status": "formulated",
            "formulation": "\\textup{ElectricJacks} \\leq \\textup{MaxElectricJacks}",
            "related_variables": [
                "ElectricJacks"
            ],
            "related_parameters": [
                "MaxElectricJacks"
            ]
        },
        {
            "description": "The total electricity usage of automatic electric car jacks should not exceed the maximum available electricity.",
            "status": "formulated",
            "formulation": "\\textup{ElectricJacks} \\times \\textup{ElectricityPerJack} \\leq \\textup{MaxElectricity}",
            "related_variables": [
                "ElectricJacks"
            ],
            "related_parameters": [
                "ElectricityPerJack",
                "MaxElectricity"
            ]
        },
        {
            "description": "The total gas usage by gas-powered car jacks must not exceed the maximum gas capacity (MaxGas).",
            "status": "formulated",
            "formulation": "\\\\textup{GasPoweredJacks} \\\\times \\\\textup{GasPerJack} \\\\leq \\\\textup{MaxGas}",
            "related_variables": [
                "GasPoweredJacks"
            ],
            "related_parameters": [
                "GasPerJack",
                "MaxGas"
            ]
        },
        {
            "description": "The number of electric jacks cannot exceed the maximum allowable due to limited power outlets.",
            "status": "formulated",
            "formulation": "\\textup{ElectricJacks} \\leq \\textup{MaxElectricJacks}",
            "related_variables": [
                "ElectricJacks"
            ],
            "related_parameters": [
                "MaxElectricJacks"
            ]
        },
        {
            "description": "The total electricity used by all electric jacks cannot exceed the maximum available electricity per hour.",
            "status": "formulated",
            "formulation": "\\textup{ElectricJacks} \\cdot \\textup{ElectricityPerJack} \\leq \\textup{MaxElectricity}",
            "related_variables": [
                "ElectricJacks"
            ],
            "related_parameters": [
                "ElectricityPerJack",
                "MaxElectricity"
            ]
        },
        {
            "description": "The total gas used by all gas-powered jacks cannot exceed the maximum available gas per hour.",
            "status": "formulated",
            "formulation": "\\textup{GasPoweredJacks} \\cdot \\textup{GasPerJack} \\leq \\textup{MaxGas}",
            "related_variables": [
                "GasPoweredJacks"
            ],
            "related_parameters": [
                "GasPerJack",
                "MaxGas"
            ]
        }
    ],
    "variables": [
        {
            "definition": "The number of automatic electric jacks to be purchased",
            "symbol": "ElectricJacks",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "The number of gas-powered jacks to be purchased",
            "symbol": "GasPoweredJacks",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Maximize the total number of cars processed every hour using the purchased jacks.",
            "status": "formulated",
            "formulation": "\\max \\quad (\\textup{ElectricJacks} \\cdot \\textup{CarsPerHourElectric} + \\textup{GasPoweredJacks} \\cdot \\textup{CarsPerHourGas})",
            "related_variables": [
                "ElectricJacks",
                "GasPoweredJacks"
            ],
            "related_parameters": [
                "CarsPerHourElectric",
                "CarsPerHourGas"
            ]
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250414053312_nl4opt_prob_255/",
    "problem_path": "data/nl4opt/prob_255/"
}