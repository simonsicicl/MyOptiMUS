{
    "background": "There are two metal extraction processes, J and P, each with different requirements and pollution outputs.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Units of metal extracted using process J",
            "symbol": "MetalJ",
            "value": 5,
            "shape": [],
            "code": "MetalJ = data[\"MetalJ\"] # scalar parameter"
        },
        {
            "definition": "Units of water used by process J",
            "symbol": "WaterJ",
            "value": 8,
            "shape": [],
            "code": "WaterJ = data[\"WaterJ\"] # scalar parameter"
        },
        {
            "definition": "Units of pollution produced by process J",
            "symbol": "PollutionJ",
            "value": 3,
            "shape": [],
            "code": "PollutionJ = data[\"PollutionJ\"] # scalar parameter"
        },
        {
            "definition": "Units of metal extracted using process P",
            "symbol": "MetalP",
            "value": 9,
            "shape": [],
            "code": "MetalP = data[\"MetalP\"] # scalar parameter"
        },
        {
            "definition": "Units of water used by process P",
            "symbol": "WaterP",
            "value": 6,
            "shape": [],
            "code": "WaterP = data[\"WaterP\"] # scalar parameter"
        },
        {
            "definition": "Units of pollution produced by process P",
            "symbol": "PollutionP",
            "value": 5,
            "shape": [],
            "code": "PollutionP = data[\"PollutionP\"] # scalar parameter"
        },
        {
            "definition": "Maximum units of water available",
            "symbol": "MaxWater",
            "value": 1500,
            "shape": [],
            "code": "MaxWater = data[\"MaxWater\"] # scalar parameter"
        },
        {
            "definition": "Maximum units of pollution allowable",
            "symbol": "MaxPollution",
            "value": 1350,
            "shape": [],
            "code": "MaxPollution = data[\"MaxPollution\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The number of operations involving process J must be non-negative.",
            "status": "formulated",
            "formulation": "\\textup{NumProcessJ} \\geq 0",
            "related_variables": [
                "NumProcessJ"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of operations involving the metal extraction process P must be non-negative.",
            "status": "formulated",
            "formulation": "\\textup{NumProcessP} \\geq 0",
            "related_variables": [
                "NumProcessP"
            ],
            "related_parameters": []
        },
        {
            "description": "The total water used in both processes J and P should not exceed the maximum allowable water, MaxWater.",
            "status": "formulated",
            "formulation": "(\\textup{WaterJ} \\times \\textup{NumProcessJ}) + (\\textup{WaterP} \\times \\textup{NumProcessP}) \\leq \\textup{MaxWater}",
            "related_variables": [
                "NumProcessJ",
                "NumProcessP"
            ],
            "related_parameters": [
                "WaterJ",
                "WaterP",
                "MaxWater"
            ]
        },
        {
            "description": "The total pollution generated by processes J and P cannot exceed the maximum allowable pollution.",
            "status": "formulated",
            "formulation": "\\\\textup{PollutionJ} \\\\times \\\\textup{NumProcessJ} + \\\\textup{PollutionP} \\\\times \\\\textup{NumProcessP} \\\\leq \\\\textup{MaxPollution}",
            "related_variables": [
                "NumProcessJ",
                "NumProcessP"
            ],
            "related_parameters": [
                "PollutionJ",
                "PollutionP",
                "MaxPollution"
            ]
        },
        {
            "description": "The water used by both processes cannot exceed the maximum available water",
            "status": "formulated",
            "formulation": "\\textup{WaterJ} \\cdot \\textup{NumProcessJ} + \\textup{WaterP} \\cdot \\textup{NumProcessP} \\leq \\textup{MaxWater}",
            "related_variables": [
                "NumProcessJ",
                "NumProcessP"
            ],
            "related_parameters": [
                "WaterJ",
                "WaterP",
                "MaxWater"
            ]
        },
        {
            "description": "The pollution produced by both processes cannot exceed the allowable pollution limit",
            "status": "formulated",
            "formulation": "\\textup{PollutionJ} \\cdot \\textup{NumProcessJ} + \\textup{PollutionP} \\cdot \\textup{NumProcessP} \\leq \\textup{MaxPollution}",
            "related_variables": [
                "NumProcessJ",
                "NumProcessP"
            ],
            "related_parameters": [
                "PollutionJ",
                "PollutionP",
                "MaxPollution"
            ]
        },
        {
            "description": "The number of operations for process J must be non-negative",
            "status": "formulated",
            "formulation": "\\textup{NumProcessJ} \\geq 0",
            "related_variables": [
                "NumProcessJ"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of operations for process P must be non-negative",
            "status": "formulated",
            "formulation": "\\textup{NumProcessP} \\geq 0",
            "related_variables": [
                "NumProcessP"
            ],
            "related_parameters": []
        }
    ],
    "variables": [
        {
            "definition": "The number of operations involving the metal extraction process J.",
            "symbol": "NumProcessJ",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "The number of operations involving the metal extraction process P.",
            "symbol": "NumProcessP",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Maximize the total amount of metal extracted from mined ores",
            "status": "formulated",
            "formulation": "\\textup{Maximize} \\quad \\textup{MetalJ} \\cdot \\textup{NumProcessJ} + \\textup{MetalP} \\cdot \\textup{NumProcessP}",
            "related_variables": [
                "NumProcessJ",
                "NumProcessP"
            ],
            "related_parameters": [
                "MetalJ",
                "MetalP"
            ]
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250414053600_nl4opt_prob_258/",
    "problem_path": "data/nl4opt/prob_258/"
}