{
    "background": "A man fishes in a lake and decides between using a net or fishing line for each acre of the lake, with the goal of maximizing his catch. Each method has specific yields, bait requirements, and causes different amounts of pain to the fisherman.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Total size of the lake in acres",
            "symbol": "LakeSize",
            "value": 250,
            "shape": [],
            "code": "LakeSize = data[\"LakeSize\"] # scalar parameter"
        },
        {
            "definition": "Number of fish caught per acre using a net",
            "symbol": "FishNet",
            "value": 8,
            "shape": [],
            "code": "FishNet = data[\"FishNet\"] # scalar parameter"
        },
        {
            "definition": "Number of fish caught per acre using a fishing line",
            "symbol": "FishLine",
            "value": 5,
            "shape": [],
            "code": "FishLine = data[\"FishLine\"] # scalar parameter"
        },
        {
            "definition": "Amount of bait required per acre using a net",
            "symbol": "BaitNet",
            "value": 4,
            "shape": [],
            "code": "BaitNet = data[\"BaitNet\"] # scalar parameter"
        },
        {
            "definition": "Amount of bait required per acre using a fishing line",
            "symbol": "BaitLine",
            "value": 3,
            "shape": [],
            "code": "BaitLine = data[\"BaitLine\"] # scalar parameter"
        },
        {
            "definition": "Amount of pain caused to the fisherman per acre using a net",
            "symbol": "PainNet",
            "value": 2,
            "shape": [],
            "code": "PainNet = data[\"PainNet\"] # scalar parameter"
        },
        {
            "definition": "Amount of pain caused to the fisherman per acre using a fishing line",
            "symbol": "PainLine",
            "value": 1,
            "shape": [],
            "code": "PainLine = data[\"PainLine\"] # scalar parameter"
        },
        {
            "definition": "Total units of bait available",
            "symbol": "TotalBait",
            "value": 800,
            "shape": [],
            "code": "TotalBait = data[\"TotalBait\"] # scalar parameter"
        },
        {
            "definition": "Maximum units of pain the fisherman can tolerate",
            "symbol": "MaxPain",
            "value": 350,
            "shape": [],
            "code": "MaxPain = data[\"MaxPain\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The total acres used for fishing with net and line cannot exceed the total lake size.",
            "status": "formulated",
            "formulation": "\\textup{NetAcres} + \\textup{LineAcres} \\leq \\textup{LakeSize}",
            "related_variables": [
                "NetAcres",
                "LineAcres"
            ],
            "related_parameters": [
                "LakeSize"
            ]
        },
        {
            "description": "The number of acres fished with a net must be non-negative.",
            "status": "formulated",
            "formulation": "\\textup{NetAcres} \\geq 0",
            "related_variables": [
                "NetAcres"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of acres fished with a line is non-negative.",
            "status": "formulated",
            "formulation": "\\textup{LineAcres} \\geq 0",
            "related_variables": [
                "LineAcres"
            ],
            "related_parameters": []
        },
        {
            "description": "The total amount of bait used cannot exceed TotalBait units.",
            "status": "formulated",
            "formulation": "\\\\textup{BaitNet} \\\\times \\\\textup{NetAcres} + \\\\textup{BaitLine} \\\\times \\\\textup{LineAcres} \\\\leq \\\\textup{TotalBait}",
            "related_variables": [
                "NetAcres",
                "LineAcres"
            ],
            "related_parameters": [
                "BaitNet",
                "BaitLine",
                "TotalBait"
            ]
        },
        {
            "description": "The total units of pain experienced by the fisherman cannot exceed the maximum allowable pain (MaxPain).",
            "status": "formulated",
            "formulation": "\\textup{PainNet} \\times \\textup{NetAcres} + \\textup{PainLine} \\times \\textup{LineAcres} \\leq \\textup{MaxPain}",
            "related_variables": [
                "NetAcres",
                "LineAcres"
            ],
            "related_parameters": [
                "PainNet",
                "PainLine",
                "MaxPain"
            ]
        },
        {
            "description": "Land area constraint ensuring the total acres used for fishing do not exceed the size of the lake.",
            "status": "formulated",
            "formulation": "\\textup{NetAcres} + \\textup{LineAcres} \\leq \\textup{LakeSize}",
            "related_variables": [
                "NetAcres",
                "LineAcres"
            ],
            "related_parameters": [
                "LakeSize"
            ]
        },
        {
            "description": "Bait availability constraint ensuring the total bait used does not exceed the available bait.",
            "status": "formulated",
            "formulation": "\\textup{BaitNet} \\cdot \\textup{NetAcres} + \\textup{BaitLine} \\cdot \\textup{LineAcres} \\leq \\textup{TotalBait}",
            "related_variables": [
                "NetAcres",
                "LineAcres"
            ],
            "related_parameters": [
                "BaitNet",
                "BaitLine",
                "TotalBait"
            ]
        },
        {
            "description": "Pain tolerance constraint ensuring the total pain felt by the fisherman does not exceed his pain tolerance.",
            "status": "formulated",
            "formulation": "\\textup{PainNet} \\cdot \\textup{NetAcres} + \\textup{PainLine} \\cdot \\textup{LineAcres} \\leq \\textup{MaxPain}",
            "related_variables": [
                "NetAcres",
                "LineAcres"
            ],
            "related_parameters": [
                "PainNet",
                "PainLine",
                "MaxPain"
            ]
        },
        {
            "description": "Non-negativity constraint for \\textup{NetAcres}.",
            "status": "formulated",
            "formulation": "\\textup{NetAcres} \\geq 0",
            "related_variables": [
                "NetAcres"
            ],
            "related_parameters": []
        },
        {
            "description": "Non-negativity constraint for \\textup{LineAcres}.",
            "status": "formulated",
            "formulation": "\\textup{LineAcres} \\geq 0",
            "related_variables": [
                "LineAcres"
            ],
            "related_parameters": []
        }
    ],
    "variables": [
        {
            "definition": "Acres of the lake used for fishing with a net.",
            "symbol": "NetAcres",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "Acres of the lake used for fishing with a fishing line.",
            "symbol": "LineAcres",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Maximizing the total number of fish caught across all acres in the lake.",
            "status": "formulated",
            "formulation": "\\textup{Maximize: } \\\\ \\quad \\textup{FishNet} \\cdot \\textup{NetAcres} + \\textup{FishLine} \\cdot \\textup{LineAcres}",
            "related_variables": [
                "NetAcres",
                "LineAcres"
            ],
            "related_parameters": [
                "FishNet",
                "FishLine"
            ]
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250414061227_nl4opt_prob_85/",
    "problem_path": "data/nl4opt/prob_85/"
}