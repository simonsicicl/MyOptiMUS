{
    "background": "A snack exporter sends snacks to customers using two sizes of suitcases with constraints on the minimum ratio of small to large suitcases, as well as limits on the number of each size of suitcases available and the total number that can be sent.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Capacity of a small suitcase",
            "symbol": "SmallCapacity",
            "value": 50,
            "shape": [],
            "code": "SmallCapacity = data[\"SmallCapacity\"] # scalar parameter"
        },
        {
            "definition": "Capacity of a large suitcase",
            "symbol": "LargeCapacity",
            "value": 80,
            "shape": [],
            "code": "LargeCapacity = data[\"LargeCapacity\"] # scalar parameter"
        },
        {
            "definition": "Ratio of the number of small suitcases to the number of large suitcases",
            "symbol": "RatioSmallToLarge",
            "value": 2,
            "shape": [],
            "code": "RatioSmallToLarge = data[\"RatioSmallToLarge\"] # scalar parameter"
        },
        {
            "definition": "Maximum number of small suitcases available",
            "symbol": "MaxSmallSuitcases",
            "value": 70,
            "shape": [],
            "code": "MaxSmallSuitcases = data[\"MaxSmallSuitcases\"] # scalar parameter"
        },
        {
            "definition": "Maximum number of large suitcases available",
            "symbol": "MaxLargeSuitcases",
            "value": 50,
            "shape": [],
            "code": "MaxLargeSuitcases = data[\"MaxLargeSuitcases\"] # scalar parameter"
        },
        {
            "definition": "Minimum number of large suitcases that must be sent",
            "symbol": "MinLargeSuitcases",
            "value": 15,
            "shape": [],
            "code": "MinLargeSuitcases = data[\"MinLargeSuitcases\"] # scalar parameter"
        },
        {
            "definition": "Maximum total number of suitcases that can be sent",
            "symbol": "MaxTotalSuitcases",
            "value": 70,
            "shape": [],
            "code": "MaxTotalSuitcases = data[\"MaxTotalSuitcases\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The number of small suitcases sent must be non-negative.",
            "status": "formulated",
            "formulation": "\\\\textup{NumSmallSuitcases} \\\\geq 0",
            "related_variables": [
                "NumSmallSuitcases"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of large suitcases sent must be non-negative.",
            "status": "formulated",
            "formulation": "\\textup{NumLargeSuitcases} \\geq 0",
            "related_variables": [
                "NumLargeSuitcases"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of small suitcases sent must be at least RatioSmallToLarge times the number of large suitcases sent.",
            "status": "formulated",
            "formulation": "\\\\textup{NumSmallSuitcases} \\\\geq \\\\textup{RatioSmallToLarge} \\\\cdot \\\\textup{NumLargeSuitcases}",
            "related_variables": [
                "NumSmallSuitcases",
                "NumLargeSuitcases"
            ],
            "related_parameters": [
                "RatioSmallToLarge"
            ]
        },
        {
            "description": "Constraint ensuring that the total number of small suitcases sent does not exceed the maximum available.",
            "status": "formulated",
            "formulation": "\\textup{NumSmallSuitcases} \\leq \\textup{MaxSmallSuitcases}",
            "related_variables": [
                "NumSmallSuitcases"
            ],
            "related_parameters": [
                "MaxSmallSuitcases"
            ]
        },
        {
            "description": "The number of large suitcases sent should not exceed the maximum available number of large suitcases.",
            "status": "formulated",
            "formulation": "\\textup{NumLargeSuitcases} \\leq \\textup{MaxLargeSuitcases}",
            "related_variables": [
                "NumLargeSuitcases"
            ],
            "related_parameters": [
                "MaxLargeSuitcases"
            ]
        },
        {
            "description": "At least MinLargeSuitcases large suitcases must be sent.",
            "status": "formulated",
            "formulation": "\\textup{NumLargeSuitcases} \\geq \\textup{MinLargeSuitcases}",
            "related_variables": [
                "NumLargeSuitcases"
            ],
            "related_parameters": [
                "MinLargeSuitcases"
            ]
        },
        {
            "description": "The total number of small and large suitcases sent cannot exceed the maximum allowed number of suitcases.",
            "status": "formulated",
            "formulation": "\\\\textup{NumSmallSuitcases} + \\\\textup{NumLargeSuitcases} \\\\leq \\\\textup{MaxTotalSuitcases}",
            "related_variables": [
                "NumSmallSuitcases",
                "NumLargeSuitcases"
            ],
            "related_parameters": [
                "MaxTotalSuitcases"
            ]
        },
        {
            "description": "The number of small suitcases sent cannot exceed the maximum available",
            "status": "formulated",
            "formulation": "\\textup{NumSmallSuitcases} \\leq \\textup{MaxSmallSuitcases}",
            "related_variables": [
                "NumSmallSuitcases"
            ],
            "related_parameters": [
                "MaxSmallSuitcases"
            ]
        },
        {
            "description": "The number of large suitcases sent cannot exceed the maximum available",
            "status": "formulated",
            "formulation": "\\textup{NumLargeSuitcases} \\leq \\textup{MaxLargeSuitcases}",
            "related_variables": [
                "NumLargeSuitcases"
            ],
            "related_parameters": [
                "MaxLargeSuitcases"
            ]
        },
        {
            "description": "A minimum number of large suitcases must be sent",
            "status": "formulated",
            "formulation": "\\textup{NumLargeSuitcases} \\geq \\textup{MinLargeSuitcases}",
            "related_variables": [
                "NumLargeSuitcases"
            ],
            "related_parameters": [
                "MinLargeSuitcases"
            ]
        },
        {
            "description": "The total number of suitcases cannot exceed the maximum allowed",
            "status": "formulated",
            "formulation": "\\textup{NumSmallSuitcases} + \\textup{NumLargeSuitcases} \\leq \\textup{MaxTotalSuitcases}",
            "related_variables": [
                "NumSmallSuitcases",
                "NumLargeSuitcases"
            ],
            "related_parameters": [
                "MaxTotalSuitcases"
            ]
        },
        {
            "description": "The ratio of small suitcases to large suitcases must adhere to the given constraint",
            "status": "formulated",
            "formulation": "\\textup{NumSmallSuitcases} \\geq \\textup{RatioSmallToLarge} \\times \\textup{NumLargeSuitcases}",
            "related_variables": [
                "NumSmallSuitcases",
                "NumLargeSuitcases"
            ],
            "related_parameters": [
                "RatioSmallToLarge"
            ]
        }
    ],
    "variables": [
        {
            "definition": "The number of small suitcases sent.",
            "symbol": "NumSmallSuitcases",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "The number of large suitcases sent.",
            "symbol": "NumLargeSuitcases",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Maximize the total number of snacks that can be delivered",
            "status": "formulated",
            "formulation": "\\textup{Maximize } \\quad \\textup{SmallCapacity} \\times \\textup{NumSmallSuitcases} + \\textup{LargeCapacity} \\times \\textup{NumLargeSuitcases}",
            "related_variables": [
                "NumSmallSuitcases",
                "NumLargeSuitcases"
            ],
            "related_parameters": [
                "SmallCapacity",
                "LargeCapacity"
            ]
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413162941_nl4opt_prob_170/",
    "problem_path": "data/nl4opt/prob_170/"
}