{
    "background": "A pharmacy produces acne and anti-bacterial creams in two factories with different production rates and requires a certain amount of base gel per hour for each factory. The pharmacy aims to meet minimum production requirements for both creams with a limited supply of base gel.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Quantity of acne cream produced by factory 1 per hour",
            "symbol": "AcneFactory1",
            "value": 12,
            "shape": [],
            "code": "AcneFactory1 = data[\"AcneFactory1\"] # scalar parameter"
        },
        {
            "definition": "Quantity of anti-bacterial cream produced by factory 1 per hour",
            "symbol": "AntibacterialFactory1",
            "value": 15,
            "shape": [],
            "code": "AntibacterialFactory1 = data[\"AntibacterialFactory1\"] # scalar parameter"
        },
        {
            "definition": "Quantity of acne cream produced by factory 2 per hour",
            "symbol": "AcneFactory2",
            "value": 20,
            "shape": [],
            "code": "AcneFactory2 = data[\"AcneFactory2\"] # scalar parameter"
        },
        {
            "definition": "Quantity of anti-bacterial cream produced by factory 2 per hour",
            "symbol": "AntibacterialFactory2",
            "value": 10,
            "shape": [],
            "code": "AntibacterialFactory2 = data[\"AntibacterialFactory2\"] # scalar parameter"
        },
        {
            "definition": "Base gel used by factory 1 per hour",
            "symbol": "BaseGelFactory1",
            "value": 30,
            "shape": [],
            "code": "BaseGelFactory1 = data[\"BaseGelFactory1\"] # scalar parameter"
        },
        {
            "definition": "Base gel used by factory 2 per hour",
            "symbol": "BaseGelFactory2",
            "value": 45,
            "shape": [],
            "code": "BaseGelFactory2 = data[\"BaseGelFactory2\"] # scalar parameter"
        },
        {
            "definition": "Total available units of base gel",
            "symbol": "TotalBaseGel",
            "value": 5000,
            "shape": [],
            "code": "TotalBaseGel = data[\"TotalBaseGel\"] # scalar parameter"
        },
        {
            "definition": "Minimum required units of acne cream to be produced",
            "symbol": "MinAcneCream",
            "value": 800,
            "shape": [],
            "code": "MinAcneCream = data[\"MinAcneCream\"] # scalar parameter"
        },
        {
            "definition": "Minimum required units of anti-bacterial cream to be produced",
            "symbol": "MinAntibacterialCream",
            "value": 1000,
            "shape": [],
            "code": "MinAntibacterialCream = data[\"MinAntibacterialCream\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "Total base gel usage across both factories cannot exceed the available supply.",
            "status": "formulated",
            "formulation": "\\textup{BaseGelFactory1} \\cdot \\textup{HoursFactory1} + \\textup{BaseGelFactory2} \\cdot \\textup{HoursFactory2} \\leq \\textup{TotalBaseGel}",
            "related_variables": [
                "HoursFactory1",
                "HoursFactory2"
            ],
            "related_parameters": [
                "BaseGelFactory1",
                "BaseGelFactory2",
                "TotalBaseGel"
            ]
        },
        {
            "description": "Ensure that the total production of acne cream from both factories meets the minimum required production \\textup{MinAcneCream}.",
            "status": "formulated",
            "formulation": "\\textup{AcneFactory1} * \\textup{HoursFactory1} + \\textup{AcneFactory2} * \\textup{HoursFactory2} \\geq \\textup{MinAcneCream}",
            "related_variables": [
                "HoursFactory1",
                "HoursFactory2"
            ],
            "related_parameters": [
                "AcneFactory1",
                "AcneFactory2",
                "MinAcneCream"
            ]
        },
        {
            "description": "At least MinAntibacterialCream units of anti-bacterial cream must be produced in total.",
            "status": "formulated",
            "formulation": "\\textup{AntibacterialFactory1} \\cdot \\textup{HoursFactory1} + \\textup{AntibacterialFactory2} \\cdot \\textup{HoursFactory2} \\geq \\textup{MinAntibacterialCream}",
            "related_variables": [
                "HoursFactory1",
                "HoursFactory2"
            ],
            "related_parameters": [
                "AntibacterialFactory1",
                "AntibacterialFactory2",
                "MinAntibacterialCream"
            ]
        },
        {
            "description": "Ensure that the number of hours Factory 1 operates is non-negative.",
            "status": "formulated",
            "formulation": "\\textup{HoursFactory1} \\geq 0",
            "related_variables": [
                "HoursFactory1"
            ],
            "related_parameters": []
        },
        {
            "description": "The operating hours of Factory 2 must be non-negative.",
            "status": "formulated",
            "formulation": "\\textup{HoursFactory2} \\geq 0",
            "related_variables": [
                "HoursFactory2"
            ],
            "related_parameters": []
        },
        {
            "description": "The total production of acne cream across both factories must meet the minimum requirement.",
            "status": "formulated",
            "formulation": "\\textup{AcneFactory1} \\cdot \\textup{HoursFactory1} + \\textup{AcneFactory2} \\cdot \\textup{HoursFactory2} \\geq \\textup{MinAcneCream}",
            "related_variables": [
                "HoursFactory1",
                "HoursFactory2"
            ],
            "related_parameters": [
                "AcneFactory1",
                "AcneFactory2",
                "MinAcneCream"
            ]
        },
        {
            "description": "The total production of anti-bacterial cream across both factories must meet the minimum requirement.",
            "status": "formulated",
            "formulation": "\\textup{AntibacterialFactory1} \\cdot \\textup{HoursFactory1} + \\textup{AntibacterialFactory2} \\cdot \\textup{HoursFactory2} \\geq \\textup{MinAntibacterialCream}",
            "related_variables": [
                "HoursFactory1",
                "HoursFactory2"
            ],
            "related_parameters": [
                "AntibacterialFactory1",
                "AntibacterialFactory2",
                "MinAntibacterialCream"
            ]
        },
        {
            "description": "The total base gel consumption across both factories must not exceed the total available base gel.",
            "status": "formulated",
            "formulation": "\\textup{BaseGelFactory1} \\cdot \\textup{HoursFactory1} + \\textup{BaseGelFactory2} \\cdot \\textup{HoursFactory2} \\leq \\textup{TotalBaseGel}",
            "related_variables": [
                "HoursFactory1",
                "HoursFactory2"
            ],
            "related_parameters": [
                "BaseGelFactory1",
                "BaseGelFactory2",
                "TotalBaseGel"
            ]
        }
    ],
    "variables": [
        {
            "definition": "Number of hours Factory 1 operates per hour.",
            "symbol": "HoursFactory1",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "Number of hours Factory 2 operates per hour.",
            "symbol": "HoursFactory2",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Minimize the total hours of operation across both factories.",
            "status": "formulated",
            "formulation": "\\textup{Minimize:} \\quad \\textup{HoursFactory1} + \\textup{HoursFactory2}",
            "related_variables": [
                "HoursFactory1",
                "HoursFactory2"
            ],
            "related_parameters": []
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413153719_nl4opt_prob_116/",
    "problem_path": "data/nl4opt/prob_116/"
}