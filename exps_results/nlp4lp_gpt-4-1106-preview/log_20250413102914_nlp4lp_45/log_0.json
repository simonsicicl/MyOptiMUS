{
    "background": "A company is looking to minimize the total transportation cost of transporting goods from its depots to ports.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Number of depots",
            "symbol": "numdepot",
            "value": "",
            "shape": [
                "I"
            ],
            "code": "numdepot = np.array(data[\"numdepot\"]) # ['I']"
        },
        {
            "definition": "Number of ports",
            "symbol": "numport",
            "value": "",
            "shape": [
                "J"
            ],
            "code": "numport = np.array(data[\"numport\"]) # ['J']"
        },
        {
            "definition": "Cost per unit distance for transporting goods",
            "symbol": "Price",
            "value": "",
            "shape": [],
            "code": "Price = data[\"Price\"] # scalar parameter"
        },
        {
            "definition": "Distance between depot i and port j",
            "symbol": "Distance",
            "value": "",
            "shape": [
                "I",
                "J"
            ],
            "code": "Distance = np.array(data[\"Distance\"]) # ['I', 'J']"
        }
    ],
    "constraints": [
        {
            "description": "The number of depots should be non-negative",
            "status": "formulated",
            "formulation": "\\textup{numdepot} \\geq 0",
            "related_variables": [],
            "related_parameters": [
                "numdepot"
            ]
        },
        {
            "description": "The number of ports must be non-negative",
            "status": "formulated",
            "formulation": "\\textup{numport} \\geq 0",
            "related_variables": [],
            "related_parameters": [
                "numport"
            ]
        },
        {
            "description": "Cost per unit distance (Price) must be non-negative",
            "status": "formulated",
            "formulation": "\\textup{Price} \\geq 0",
            "related_variables": [],
            "related_parameters": [
                "Price"
            ]
        },
        {
            "description": "Non-negative distance between each depot and port",
            "status": "formulated",
            "formulation": "\\forall i \\in \\{1, ..., \\textup{numdepot}\\}, \\forall j \\in \\{1, ..., \\textup{numport}\\}, \\quad \\textup{Distance}_{ij} \\geq 0",
            "related_variables": [],
            "related_parameters": [
                "Distance"
            ]
        }
    ],
    "variables": [
        {
            "definition": "Quantity of goods transported from depot i to port j",
            "symbol": "QuantityShipped",
            "shape": [
                "numdepot",
                "numport"
            ],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Minimize the total transportation cost from depots to ports",
            "status": "formulated",
            "formulation": "\\min \\quad \\sum_{i=1}^{\\textup{numdepot}} \\sum_{j=1}^{\\textup{numport}} \\textup{Price} \\times \\textup{Distance}_{ij} \\times \\textup{QuantityShipped}_{ij}",
            "related_variables": [
                "QuantityShipped"
            ],
            "related_parameters": [
                "Price",
                "Distance"
            ]
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413102914_nlp4lp_45/",
    "problem_path": "data/nlp4lp/45/"
}