{
    "background": "The problem is to optimize total manpower requirement over a period of five years considering the manpower needed for two different operations (one and two) for producing various products every year. Stock levels, production capacities, demands, and input coefficients between products are also considered.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "The number of years over which the total manpower requirement is maximized",
            "symbol": "K",
            "value": 5,
            "shape": [],
            "code": "K = data[\"K\"] # scalar parameter"
        },
        {
            "definition": "Manpower requirements for operations one in year k",
            "symbol": "ManpowerOne",
            "value": "",
            "shape": [
                "K"
            ],
            "code": "ManpowerOne = np.array(data[\"ManpowerOne\"]) # ['K']"
        },
        {
            "definition": "Manpower requirements for operations two in year k",
            "symbol": "ManpowerTwo",
            "value": "",
            "shape": [
                "K"
            ],
            "code": "ManpowerTwo = np.array(data[\"ManpowerTwo\"]) # ['K']"
        },
        {
            "definition": "Stock level of product k at the beginning of the year",
            "symbol": "Stock",
            "value": "",
            "shape": [
                "K"
            ],
            "code": "Stock = np.array(data[\"Stock\"]) # ['K']"
        },
        {
            "definition": "Production capacity for product k for the year",
            "symbol": "Capacity",
            "value": "",
            "shape": [
                "K"
            ],
            "code": "Capacity = np.array(data[\"Capacity\"]) # ['K']"
        },
        {
            "definition": "Demand for product k for the year",
            "symbol": "Demand",
            "value": "",
            "shape": [
                "K"
            ],
            "code": "Demand = np.array(data[\"Demand\"]) # ['K']"
        },
        {
            "definition": "Input one coefficient for product k with respect to product j",
            "symbol": "InputOne",
            "value": "",
            "shape": [
                "K",
                "K"
            ],
            "code": "InputOne = np.array(data[\"InputOne\"]) # ['K', 'K']"
        },
        {
            "definition": "Input two coefficient for product k with respect to product j",
            "symbol": "InputTwo",
            "value": "",
            "shape": [
                "K",
                "K"
            ],
            "code": "InputTwo = np.array(data[\"InputTwo\"]) # ['K', 'K']"
        }
    ],
    "constraints": [],
    "variables": [],
    "objective": [
        {
            "description": "Maximize the total manpower requirement over five years for both operations.",
            "status": "formulated",
            "formulation": "\\sum_{k=1}^{K} (\\textup{ManpowerOne}_{k} + \\textup{ManpowerTwo}_{k})",
            "related_variables": [],
            "related_parameters": [
                "ManpowerOne",
                "ManpowerTwo",
                "K"
            ]
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413085911_nlp4lp_29/",
    "problem_path": "data/nlp4lp/29/"
}