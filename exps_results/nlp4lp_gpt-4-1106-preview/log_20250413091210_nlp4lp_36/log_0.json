{
    "background": "Determine the selection of items to include in a knapsack that has a fixed capacity, where each item has an associated value and size.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Total Capacity of the Knapsack",
            "symbol": "C",
            "value": "",
            "shape": [],
            "code": "C = data[\"C\"] # scalar parameter"
        },
        {
            "definition": "Value of item k",
            "symbol": "Value",
            "value": "",
            "shape": [
                "K"
            ],
            "code": "Value = np.array(data[\"Value\"]) # ['K']"
        },
        {
            "definition": "Size of item k",
            "symbol": "Size",
            "value": "",
            "shape": [
                "K"
            ],
            "code": "Size = np.array(data[\"Size\"]) # ['K']"
        }
    ],
    "constraints": [
        {
            "description": "The total size of the items in the knapsack must not exceed the capacity C",
            "status": "formulated",
            "formulation": "\\sum_{k=1}^{K} \\textup{Size}_k \\cdot \\textup{ItemIncluded}_k \\leq \\textup{C}",
            "related_variables": [
                "ItemIncluded"
            ],
            "related_parameters": [
                "Size",
                "C"
            ]
        },
        {
            "description": "Each item can either be included or not in the knapsack, represented by a binary variable.",
            "status": "formulated",
            "formulation": "\\sum_{k=1}^{K} \\textup{Size}_{k} \\cdot \\textup{ItemIncluded}_{k} \\leq \\textup{C}",
            "related_variables": [
                "ItemIncluded"
            ],
            "related_parameters": [
                "Size",
                "C"
            ]
        },
        {
            "description": "The total size of the items included must not exceed the capacity of the knapsack",
            "status": "formulated",
            "formulation": "\\sum_{k=1}^{K} \\textup{Size}_{k} \\times \\textup{ItemIncluded}_{k} \\leq \\textup{C}",
            "related_variables": [
                "ItemIncluded"
            ],
            "related_parameters": [
                "Size",
                "C"
            ]
        },
        {
            "description": "Total size of items included in the knapsack must not exceed its capacity",
            "status": "formulated",
            "formulation": "\\sum_{k=1}^{K} (\\textup{Size}_k \\cdot \\textup{ItemIncluded}_k) \\leq \\textup{C}",
            "related_variables": [
                "ItemIncluded"
            ],
            "related_parameters": [
                "Size",
                "C"
            ]
        },
        {
            "description": "Each item k has a non-negative value",
            "status": "formulated",
            "formulation": "Value_k \\geq 0 \\quad \\forall k \\in K",
            "related_variables": [],
            "related_parameters": [
                "Value"
            ]
        },
        {
            "description": "The total size of the items included in the knapsack must not exceed its capacity",
            "status": "formulated",
            "formulation": "\\sum_{k=1}^{K} \\textup{Size}_k \\times \\textup{ItemIncluded}_k \\leq \\textup{C}",
            "related_variables": [
                "ItemIncluded"
            ],
            "related_parameters": [
                "C",
                "Size"
            ]
        }
    ],
    "variables": [
        {
            "definition": "Binary variable indicating if item k is included in the knapsack (1) or not (0)",
            "symbol": "ItemIncluded",
            "shape": [
                "K"
            ],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Maximize the total value of the items packed in the knapsack",
            "status": "formulated",
            "formulation": "\\max \\sum_{k=1}^{K} \\textup{Value}_k \\times \\textup{ItemIncluded}_k",
            "related_variables": [
                "ItemIncluded"
            ],
            "related_parameters": [
                "Value"
            ]
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413091210_nlp4lp_36/",
    "problem_path": "data/nlp4lp/36/"
}