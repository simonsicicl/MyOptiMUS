{
    "background": "The task involves selecting a mix of different food types to purchase in order to satisfy nutritional demands at the minimum cost. Each food type has a set price, and a nutrition matrix detailing the amounts of various nutrients it contains.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Number of different types of food",
            "symbol": "K",
            "value": "",
            "shape": [],
            "code": "K = data[\"K\"] # scalar parameter"
        },
        {
            "definition": "Number of nutrients to consider",
            "symbol": "M",
            "value": "",
            "shape": [],
            "code": "M = data[\"M\"] # scalar parameter"
        },
        {
            "definition": "Price of food k",
            "symbol": "Price",
            "value": "",
            "shape": [
                "K"
            ],
            "code": "Price = np.array(data[\"Price\"]) # ['K']"
        },
        {
            "definition": "Demand for nutrient m",
            "symbol": "Demand",
            "value": "",
            "shape": [
                "M"
            ],
            "code": "Demand = np.array(data[\"Demand\"]) # ['M']"
        },
        {
            "definition": "Amount of nutrient m in food k",
            "symbol": "Nutrition",
            "value": "",
            "shape": [
                "K",
                "M"
            ],
            "code": "Nutrition = np.array(data[\"Nutrition\"]) # ['K', 'M']"
        }
    ],
    "constraints": [
        {
            "description": "The total amount of each nutrient from all food types must meet or exceed the specific demand for that nutrient",
            "status": "formulated",
            "formulation": "\\sum_{k=1}^{K} \\textup{Nutrition}_{km} \\cdot \\textup{AmountPurchased}_{k} \\geq \\textup{Demand}_{m}, \\quad \\forall m \\in \\{1, 2, ..., M\\}",
            "related_variables": [
                "AmountPurchased"
            ],
            "related_parameters": [
                "Nutrition",
                "Demand"
            ]
        },
        {
            "description": "All purchased food amounts must be non-negative",
            "status": "formulated",
            "formulation": "\\forall k \\in \\{1, \\ldots, K\\}, \\quad \\textup{AmountPurchased}_k \\geq 0",
            "related_variables": [
                "AmountPurchased"
            ],
            "related_parameters": [
                "K"
            ]
        },
        {
            "description": "Ensure that for each nutrient the demand is met or exceeded by the sum of nutrients provided by the selected foods",
            "status": "formulated",
            "formulation": "\\forall m \\in \\{1, ..., M\\}:\\quad \\sum_{k=1}^{K} \\textup{Nutrition}_{k,m} \\times \\textup{AmountPurchased}_k \\geq \\textup{Demand}_m",
            "related_variables": [
                "AmountPurchased"
            ],
            "related_parameters": [
                "Nutrition",
                "Demand"
            ]
        }
    ],
    "variables": [
        {
            "definition": "The amount of food type k to purchase",
            "symbol": "AmountPurchased",
            "shape": [
                "K"
            ],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Minimize the total price of the foods purchased to meet nutritional demands",
            "status": "formulated",
            "formulation": "\\textup{Minimize } \\sum_{k=1}^{K} \\textup{Price}_k \\times \\textup{AmountPurchased}_k",
            "related_variables": [
                "AmountPurchased"
            ],
            "related_parameters": [
                "Price"
            ]
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413091255_nlp4lp_37/",
    "problem_path": "data/nlp4lp/37/"
}