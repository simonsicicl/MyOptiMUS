{
    "background": "The problem is to find the minimum number of employees needed to meet a certain coverage requirement where employees work for a set number of consecutive days followed by a mandatory rest period.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "The number of users on the nth day",
            "symbol": "Num",
            "value": "",
            "shape": [
                "N"
            ],
            "code": "Num = np.array(data[\"Num\"]) # ['N']"
        },
        {
            "definition": "Number of consecutive working days before a resting period",
            "symbol": "WorkingDays",
            "value": "",
            "shape": [],
            "code": "WorkingDays = data[\"WorkingDays\"] # scalar parameter"
        },
        {
            "definition": "Number of consecutive resting days",
            "symbol": "RestingDays",
            "value": "",
            "shape": [],
            "code": "RestingDays = data[\"RestingDays\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "Each day, the number of employees working must meet or exceed the daily demand (Num[n]).",
            "status": "formulated",
            "formulation": "\\forall n \\in \\{1, \\\\dots, N\\}, \\\\quad \\sum_{e=1}^{\\\\textup{MinEmployees}} \\\\textup{EmployeeSchedule}_{e, n} \\\\geq \\\\textup{Num}[n]",
            "related_variables": [
                "EmployeeSchedule",
                "MinEmployees"
            ],
            "related_parameters": [
                "Num",
                "WorkingDays",
                "RestingDays"
            ]
        },
        {
            "description": "Each employee must have at least RestingDays consecutive days of rest, and they cannot exceed WorkingDays consecutive working days.",
            "status": "formulated",
            "formulation": "\\forall e \\in \\{1, \\dots, \\textup{MinEmployees}\\}, \\quad \\forall n \\in \\{1, \\dots, \\textup{N}\\}, \\\\ \\quad \\sum_{j=n}^{n+\\textup{WorkingDays}-1} \\textup{EmployeeSchedule}_{e, j} \\leq \\textup{WorkingDays} \\\\ \\quad + \\\\ \\textup{RestStart}_{e, n} = 1 \\implies \\sum_{j=n}^{n+\\textup{RestingDays}-1} (1 - \\textup{EmployeeSchedule}_{e, j}) = \\textup{RestingDays}, \\\\ \\textup{EmployeeSchedule}_{e, n+k} = 0 \\quad \\forall k \\in \\{0, \\dots, \\textup{RestingDays}-1\\}",
            "related_variables": [
                "EmployeeSchedule",
                "RestStart"
            ],
            "related_parameters": [
                "RestingDays",
                "WorkingDays",
                "N",
                "MinEmployees"
            ]
        },
        {
            "description": "Ensures that the total number of employees is a non-negative integer.",
            "status": "formulated",
            "formulation": "\\textup{MinEmployees} \\geq 0, \\quad \\textup{MinEmployees} \\in \\mathbb{Z}",
            "related_variables": [
                "MinEmployees"
            ],
            "related_parameters": []
        },
        {
            "description": "Ensure each employee follows a repeated schedule of WorkingDays consecutive days followed by RestingDays consecutive days off.",
            "status": "formulated",
            "formulation": "\\forall e, \\\\quad \\sum_{t=n}^{n+\\\\textup{WorkingDays}-1} \\\\textup{EmployeeSchedule}_{e, t} = \\\\textup{WorkingDays} \\\\quad \\\\text{and}\\\\quad \\textup{EmployeeSchedule}_{e, t+\\\\textup{WorkingDays}} = 0, \\\\dots, \\\\textup{EmployeeSchedule}_{e, t+\\\\textup{WorkingDays}+\\\\textup{RestingDays}-1} = 0",
            "related_variables": [
                "EmployeeSchedule"
            ],
            "related_parameters": [
                "WorkingDays",
                "RestingDays"
            ]
        },
        {
            "description": "Ensure no employee works during their mandatory rest period.",
            "status": "formulated",
            "formulation": "\\forall e \\in \\{1, \\dots, \\textup{MinEmployees}\\}, \\quad \\forall n \\in \\{1, \\dots, \\textup{N}\\} \\\\ \\quad \\textup{RestStart}_{e, n} = 1 \\implies \\sum_{j=n}^{n+\\textup{RestingDays}-1} \\textup{EmployeeSchedule}_{e, j} = 0",
            "related_variables": [
                "EmployeeSchedule",
                "RestStart"
            ],
            "related_parameters": [
                "RestingDays",
                "N",
                "MinEmployees"
            ]
        },
        {
            "description": "Ensure that resting blocks are enforced immediately after working blocks.",
            "status": "formulated",
            "formulation": "\\forall e \\in \\{1, \\dots, \\textup{MinEmployees}\\}, \\quad \\forall n \\in \\{1, \\dots, \\textup{N}\\} \\\\ \\quad \\textup{RestStart}_{e, n} = 1 \\implies \\sum_{j=n-\\textup{WorkingDays}}^{n-1} \\textup{EmployeeSchedule}_{e, j} = \\textup{WorkingDays}",
            "related_variables": [
                "EmployeeSchedule",
                "RestStart"
            ],
            "related_parameters": [
                "WorkingDays",
                "N",
                "MinEmployees"
            ]
        },
        {
            "description": "Ensures employees work exactly \\textup{WorkingDays} consecutive days before starting their resting period.",
            "status": "formulated",
            "formulation": "\\sum_{n=i}^{i + \\textup{WorkingDays} - 1} \\textup{EmployeeSchedule}[e][n] = \\textup{WorkingDays} \\quad \\forall e, \\forall i : 1 \\leq i \\leq N - \\textup{WorkingDays} + 1",
            "related_variables": [
                "EmployeeSchedule"
            ],
            "related_parameters": [
                "WorkingDays",
                "N"
            ]
        },
        {
            "description": "Enforces that after \\textup{RestStart}[e][n] is activated, employees must rest for \\textup{RestingDays} days.",
            "status": "formulated",
            "formulation": "\\sum_{n=i}^{i + \\textup{RestingDays} - 1} (1 - \\textup{EmployeeSchedule}[e][n]) = \\textup{RestingDays} \\quad \\forall e, \\forall i : 1 \\leq i \\leq N - \\textup{RestingDays} + 1",
            "related_variables": [
                "EmployeeSchedule",
                "RestStart"
            ],
            "related_parameters": [
                "RestingDays",
                "N"
            ]
        },
        {
            "description": "Ensures every day's demand \\textup{Num}[n] is met by the sum of working employees.",
            "status": "formulated",
            "formulation": "\\sum_{e=1}^{\\textup{MinEmployees}} \\textup{EmployeeSchedule}[e][n] \\geq \\textup{Num}[n] \\quad \\forall n",
            "related_variables": [
                "EmployeeSchedule",
                "MinEmployees"
            ],
            "related_parameters": [
                "Num",
                "N"
            ]
        },
        {
            "description": "Ensure that the number of employees hired is sufficient by linking it to the binary scheduling variable.",
            "status": "formulated",
            "formulation": "\\sum_{e=1}^{\\textup{MinEmployees}} \\textup{EmployeeSchedule}_{e,n} \\geq \\textup{Num}_{n} \\quad \\forall \\, n \\in \\{1, \\ldots, N\\}",
            "related_variables": [
                "EmployeeSchedule",
                "MinEmployees"
            ],
            "related_parameters": [
                "Num"
            ]
        },
        {
            "description": "Enforce the work-rest schedule, so an employee cannot work beyond the allowed number of consecutive working days.",
            "status": "formulated",
            "formulation": "\\sum_{n'=n}^{n+\\textup{WorkingDays}-1} \\textup{EmployeeSchedule}_{e,n'} \\leq \\textup{WorkingDays} - \\textup{RestStart}_{e,n} \\quad \\forall e \\in \\{1, \\ldots, \\textup{MinEmployees}\\}, \\forall n \\in \\{1, \\ldots, N\\}",
            "related_variables": [
                "EmployeeSchedule",
                "RestStart",
                "MinEmployees"
            ],
            "related_parameters": [
                "WorkingDays"
            ]
        },
        {
            "description": "Ensure the rest period starts after exactly \\textup{WorkingDays} of consecutive work.",
            "status": "formulated",
            "formulation": "\\sum_{n'=n-\\textup{RestingDays}+1}^{n} \\textup{RestStart}_{e,n'} \\geq \\textup{EmployeeSchedule}_{e,n} \\quad \\forall e \\in \\{1, \\ldots, \\textup{MinEmployees}\\}, \\forall n \\in \\{1, \\ldots, N\\}",
            "related_variables": [
                "EmployeeSchedule",
                "RestStart",
                "MinEmployees"
            ],
            "related_parameters": [
                "RestingDays"
            ]
        },
        {
            "description": "Ensure that each employee cannot work if they are in a mandatory rest period.",
            "status": "formulated",
            "formulation": "\\textup{EmployeeSchedule}_{e,n} + \\textup{RestStart}_{e,n} \\leq 1 \\quad \\forall e \\in \\{1, \\ldots, \\textup{MinEmployees}\\}, \\forall n \\in \\{1, \\ldots, N\\}",
            "related_variables": [
                "EmployeeSchedule",
                "RestStart",
                "MinEmployees"
            ],
            "related_parameters": []
        }
    ],
    "variables": [
        {
            "definition": "Binary variable indicating whether employee e works on day n.",
            "symbol": "EmployeeSchedule",
            "shape": [
                "MinEmployees",
                "N"
            ],
            "status": "formulated"
        },
        {
            "definition": "The minimum number of employees required to meet the demand.",
            "symbol": "MinEmployees",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "Binary variable indicating whether employee e starts a rest period on day n.",
            "symbol": "RestStart",
            "shape": [
                "MinEmployees",
                "N"
            ],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Minimize the total number of employees hired while meeting the coverage requirements.",
            "status": "formulated",
            "formulation": "\\textup{Minimize } \\textup{MinEmployees}",
            "related_variables": [
                "MinEmployees"
            ],
            "related_parameters": []
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413154014_nlp4lp_42/",
    "problem_path": "data/nlp4lp/42/"
}