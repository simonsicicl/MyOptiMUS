{
    "background": "A florist needs to determine the optimal number of small and large bouquets to maximize the number of flowers delivered to stores given the constraints on transportation and bouquet sizes.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Number of flowers in a small bouquet",
            "symbol": "SmallBouquetSize",
            "value": 5,
            "shape": [],
            "code": "SmallBouquetSize = data[\"SmallBouquetSize\"] # scalar parameter"
        },
        {
            "definition": "Number of flowers in a large bouquet",
            "symbol": "LargeBouquetSize",
            "value": 10,
            "shape": [],
            "code": "LargeBouquetSize = data[\"LargeBouquetSize\"] # scalar parameter"
        },
        {
            "definition": "Maximum number of small bouquets that can be transported",
            "symbol": "MaxSmallBouquets",
            "value": 80,
            "shape": [],
            "code": "MaxSmallBouquets = data[\"MaxSmallBouquets\"] # scalar parameter"
        },
        {
            "definition": "Maximum number of large bouquets that can be transported",
            "symbol": "MaxLargeBouquets",
            "value": 50,
            "shape": [],
            "code": "MaxLargeBouquets = data[\"MaxLargeBouquets\"] # scalar parameter"
        },
        {
            "definition": "Total maximum number of bouquets that can be transported",
            "symbol": "MaxTotalBouquets",
            "value": 70,
            "shape": [],
            "code": "MaxTotalBouquets = data[\"MaxTotalBouquets\"] # scalar parameter"
        },
        {
            "definition": "Minimum number of large bouquets that must be transported",
            "symbol": "MinLargeBouquets",
            "value": 20,
            "shape": [],
            "code": "MinLargeBouquets = data[\"MinLargeBouquets\"] # scalar parameter"
        },
        {
            "definition": "Minimum ratio of small bouquets to large bouquets",
            "symbol": "MinSmallLargeRatio",
            "value": 2,
            "shape": [],
            "code": "MinSmallLargeRatio = data[\"MinSmallLargeRatio\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The number of small bouquets must be non-negative",
            "status": "formulated",
            "formulation": "x_{\\textup{Small}} \\geq 0",
            "related_variables": [
                "x_Small"
            ],
            "related_parameters": []
        },
        {
            "description": "Number of large bouquets is non-negative",
            "status": "formulated",
            "formulation": "\\textup{NumLargeBouquets} \\geq 0",
            "related_variables": [
                "NumLargeBouquets"
            ],
            "related_parameters": []
        },
        {
            "description": "At most, the maximum number of small bouquets can be transported",
            "status": "formulated",
            "formulation": "\\textup{NumSmallBouquets} \\leq \\textup{MaxSmallBouquets}",
            "related_variables": [
                "NumSmallBouquets"
            ],
            "related_parameters": [
                "MaxSmallBouquets"
            ]
        },
        {
            "description": "At most MaxLargeBouquets large bouquets can be transported",
            "status": "formulated",
            "formulation": "\\textup{NumLargeBouquets} \\leq \\textup{MaxLargeBouquets}",
            "related_variables": [
                "NumLargeBouquets"
            ],
            "related_parameters": [
                "MaxLargeBouquets"
            ]
        },
        {
            "description": "A total of at most MaxTotalBouquets bouquets can be transported",
            "status": "formulated",
            "formulation": "\\textup{NumSmallBouquets} + \\textup{NumLargeBouquets} \\leq \\textup{MaxTotalBouquets}",
            "related_variables": [
                "NumSmallBouquets",
                "NumLargeBouquets"
            ],
            "related_parameters": [
                "MaxTotalBouquets"
            ]
        },
        {
            "description": "At least MinLargeBouquets large bouquets must be transported",
            "status": "formulated",
            "formulation": "\\textup{NumLargeBouquets} \\geq \\textup{MinLargeBouquets}",
            "related_variables": [
                "NumLargeBouquets"
            ],
            "related_parameters": [
                "MinLargeBouquets"
            ]
        },
        {
            "description": "The number of small bouquets must be at least MinSmallLargeRatio times the number of large bouquets",
            "status": "formulated",
            "formulation": "\\textup{NumSmallBouquets} \\geq \\textup{MinSmallLargeRatio} \\times \\textup{NumLargeBouquets}",
            "related_variables": [
                "NumSmallBouquets",
                "NumLargeBouquets"
            ],
            "related_parameters": [
                "MinSmallLargeRatio"
            ]
        },
        {
            "description": "The number of small bouquets to large bouquets must be at least twice",
            "status": "formulated",
            "formulation": "\\textup{NumSmallBouquets} \\geq 2 \\cdot \\textup{NumLargeBouquets}",
            "related_variables": [
                "NumSmallBouquets",
                "NumLargeBouquets"
            ],
            "related_parameters": [
                "MinSmallLargeRatio"
            ]
        },
        {
            "description": "Maximum transport capacity for small bouquets",
            "status": "formulated",
            "formulation": "\\textup{NumSmallBouquets} \\leq \\textup{MaxSmallBouquets}",
            "related_variables": [
                "NumSmallBouquets"
            ],
            "related_parameters": [
                "MaxSmallBouquets"
            ]
        },
        {
            "description": "Maximum transport capacity for large bouquets",
            "status": "formulated",
            "formulation": "\\textup{NumLargeBouquets} \\leq \\textup{MaxLargeBouquets}",
            "related_variables": [
                "NumLargeBouquets"
            ],
            "related_parameters": [
                "MaxLargeBouquets"
            ]
        },
        {
            "description": "The total number of bouquets must not exceed the maximum transport capacity",
            "status": "formulated",
            "formulation": "\\textup{NumSmallBouquets} + \\textup{NumLargeBouquets} \\leq \\textup{MaxTotalBouquets}",
            "related_variables": [
                "NumSmallBouquets",
                "NumLargeBouquets"
            ],
            "related_parameters": [
                "MaxTotalBouquets"
            ]
        },
        {
            "description": "Minimum number of large bouquets that must be transported",
            "status": "formulated",
            "formulation": "\\textup{NumLargeBouquets} \\geq \\textup{MinLargeBouquets}",
            "related_variables": [
                "NumLargeBouquets"
            ],
            "related_parameters": [
                "MinLargeBouquets"
            ]
        }
    ],
    "variables": [
        {
            "definition": "Number of small bouquets",
            "symbol": "NumSmallBouquets",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "Number of large bouquets",
            "symbol": "NumLargeBouquets",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Maximize the total number of flowers transported to the stores",
            "status": "formulated",
            "formulation": "\\max\\left(\\textup{SmallBouquetSize} \\cdot \\textup{NumSmallBouquets} + \\textup{LargeBouquetSize} \\cdot \\textup{NumLargeBouquets}\\right)",
            "related_variables": [
                "NumSmallBouquets",
                "NumLargeBouquets"
            ],
            "related_parameters": [
                "SmallBouquetSize",
                "LargeBouquetSize"
            ]
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413135317_nl4opt_prob_160/",
    "problem_path": "data/nl4opt/prob_160/"
}