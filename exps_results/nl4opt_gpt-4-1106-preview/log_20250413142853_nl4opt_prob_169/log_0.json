{
    "background": "A company in the middle east uses camels and horses for package delivery. Each animal has a specific carrying capacity and requires a certain amount of food. There are limitations on the total number of packages to be delivered and the available food. Furthermore, the company prefers to use fewer horses than camels due to climate considerations.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Number of packages a camel can carry",
            "symbol": "CamelCapacity",
            "value": 50,
            "shape": [],
            "code": "CamelCapacity = data[\"CamelCapacity\"] # scalar parameter"
        },
        {
            "definition": "Number of packages a horse can carry",
            "symbol": "HorseCapacity",
            "value": 60,
            "shape": [],
            "code": "HorseCapacity = data[\"HorseCapacity\"] # scalar parameter"
        },
        {
            "definition": "Units of food required by a camel",
            "symbol": "CamelFood",
            "value": 20,
            "shape": [],
            "code": "CamelFood = data[\"CamelFood\"] # scalar parameter"
        },
        {
            "definition": "Units of food required by a horse",
            "symbol": "HorseFood",
            "value": 30,
            "shape": [],
            "code": "HorseFood = data[\"HorseFood\"] # scalar parameter"
        },
        {
            "definition": "Minimum number of packages to be delivered",
            "symbol": "MinPackages",
            "value": 1000,
            "shape": [],
            "code": "MinPackages = data[\"MinPackages\"] # scalar parameter"
        },
        {
            "definition": "Total units of food available",
            "symbol": "TotalFood",
            "value": 450,
            "shape": [],
            "code": "TotalFood = data[\"TotalFood\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The number of camels must be a non-negative integer",
            "status": "formulated",
            "formulation": "\\textup{Camels} \\geq 0",
            "related_variables": [
                "Camels"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of horses used for package delivery must be non-negative",
            "status": "formulated",
            "formulation": "\\textup{Horses} \\geq 0",
            "related_variables": [
                "Horses"
            ],
            "related_parameters": []
        },
        {
            "description": "At least MinPackages packages need to be delivered by the sum of carrying capacities of camels and horses",
            "status": "formulated",
            "formulation": "\\textup{Camels} \\times \\textup{CamelCapacity} + \\textup{Horses} \\times \\textup{HorseCapacity} \\geq \\textup{MinPackages}",
            "related_variables": [
                "Camels",
                "Horses"
            ],
            "related_parameters": [
                "CamelCapacity",
                "HorseCapacity",
                "MinPackages"
            ]
        },
        {
            "description": "Food consumed by all camels and horses cannot exceed TotalFood units",
            "status": "formulated",
            "formulation": "\\textup{Camels} \\times \\textup{CamelFood} + \\textup{Horses} \\times \\textup{HorseFood} \\leq \\textup{TotalFood}",
            "related_variables": [
                "Camels",
                "Horses"
            ],
            "related_parameters": [
                "CamelFood",
                "HorseFood",
                "TotalFood"
            ]
        },
        {
            "description": "The number of horses cannot exceed the number of camels",
            "status": "formulated",
            "formulation": "\\textup{Horses} \\leq \\textup{Camels}",
            "related_variables": [
                "Horses",
                "Camels"
            ],
            "related_parameters": []
        },
        {
            "description": "Ensure that the total carrying capacity of camels and horses meets the minimum number of packages to be delivered",
            "status": "formulated",
            "formulation": "\\textup{Camels} \\cdot \\textup{CamelCapacity} + \\textup{Horses} \\cdot \\textup{HorseCapacity} \\geq \\textup{MinPackages}",
            "related_variables": [
                "Camels",
                "Horses"
            ],
            "related_parameters": [
                "CamelCapacity",
                "HorseCapacity",
                "MinPackages"
            ]
        },
        {
            "description": "Ensure that the total food consumed by camels and horses does not exceed the total food available",
            "status": "formulated",
            "formulation": "\\textup{Camels} \\cdot \\textup{CamelFood} + \\textup{Horses} \\cdot \\textup{HorseFood} \\leq \\textup{TotalFood}",
            "related_variables": [
                "Camels",
                "Horses"
            ],
            "related_parameters": [
                "CamelFood",
                "HorseFood",
                "TotalFood"
            ]
        }
    ],
    "variables": [
        {
            "definition": "The number of camels used for package delivery",
            "symbol": "Camels",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "The number of horses used for package delivery",
            "symbol": "Horses",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Minimize the total number of camels and horses used for package delivery",
            "status": "formulated",
            "formulation": "\\textup{Minimize } \\quad \\textup{Camels} + \\textup{Horses}",
            "related_variables": [
                "Camels",
                "Horses"
            ],
            "related_parameters": []
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413142853_nl4opt_prob_169/",
    "problem_path": "data/nl4opt/prob_169/"
}