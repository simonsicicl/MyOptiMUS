{
    "background": "A village is hosting a banquet where bike and car transportations are provided, and the objective is to minimize the number of bikes while meeting the transportation needs.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Seating capacity of a bike",
            "symbol": "BikeCapacity",
            "value": 3,
            "shape": [],
            "code": "BikeCapacity = data[\"BikeCapacity\"] # scalar parameter"
        },
        {
            "definition": "Seating capacity of a car",
            "symbol": "CarCapacity",
            "value": 5,
            "shape": [],
            "code": "CarCapacity = data[\"CarCapacity\"] # scalar parameter"
        },
        {
            "definition": "Maximum proportion of transport vehicles that can be cars",
            "symbol": "MaxCarProportion",
            "value": 0.4,
            "shape": [],
            "code": "MaxCarProportion = data[\"MaxCarProportion\"] # scalar parameter"
        },
        {
            "definition": "Minimum number of people that need transport",
            "symbol": "MinPeople",
            "value": 500,
            "shape": [],
            "code": "MinPeople = data[\"MinPeople\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The number of bikes used should be non-negative",
            "status": "formulated",
            "formulation": "\\textup{NumberOfBikes} \\geq 0",
            "related_variables": [
                "NumberOfBikes"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of cars must be a non-negative value",
            "status": "formulated",
            "formulation": "\\textup{NumberOfCars} \\geq 0",
            "related_variables": [
                "NumberOfCars"
            ],
            "related_parameters": []
        },
        {
            "description": "Each bike can transport at most BikeCapacity people",
            "status": "formulated",
            "formulation": "\\textup{NumberOfBikes} \\cdot \\textup{BikeCapacity} \\geq \\textup{MinPeople}",
            "related_variables": [
                "NumberOfBikes"
            ],
            "related_parameters": [
                "BikeCapacity",
                "MinPeople"
            ]
        },
        {
            "description": "Each car can transport at most CarCapacity people",
            "status": "formulated",
            "formulation": "\\textup{NumberOfCars} \\cdot \\textup{CarCapacity} \\geq \\textup{MinPeople} - \\textup{NumberOfBikes} \\cdot \\textup{BikeCapacity}",
            "related_variables": [
                "NumberOfBikes",
                "NumberOfCars"
            ],
            "related_parameters": [
                "CarCapacity",
                "BikeCapacity",
                "MinPeople"
            ]
        },
        {
            "description": "At most MaxCarProportion of the total number of vehicles can be cars",
            "status": "formulated",
            "formulation": "\\textup{NumberOfCars} \\leq \\textup{MaxCarProportion} \\cdot (\\textup{NumberOfBikes} + \\textup{NumberOfCars})",
            "related_variables": [
                "NumberOfBikes",
                "NumberOfCars"
            ],
            "related_parameters": [
                "MaxCarProportion"
            ]
        },
        {
            "description": "At least MinPeople must be transported utilizing the available bikes and cars",
            "status": "formulated",
            "formulation": "\\textup{NumberOfBikes} \\times \\textup{BikeCapacity} + \\textup{NumberOfCars} \\times \\textup{CarCapacity} \\geq \\textup{MinPeople}",
            "related_variables": [
                "NumberOfBikes",
                "NumberOfCars"
            ],
            "related_parameters": [
                "BikeCapacity",
                "CarCapacity",
                "MinPeople"
            ]
        },
        {
            "description": "Ensure the minimum number of people are transported",
            "status": "formulated",
            "formulation": "\\textup{NumberOfBikes} \\times \\textup{BikeCapacity} + \\textup{NumberOfCars} \\times \\textup{CarCapacity} \\geq \\textup{MinPeople}",
            "related_variables": [
                "NumberOfBikes",
                "NumberOfCars"
            ],
            "related_parameters": [
                "BikeCapacity",
                "CarCapacity",
                "MinPeople"
            ]
        },
        {
            "description": "Limit the number of cars based on the maximum car proportion",
            "status": "formulated",
            "formulation": "\\textup{NumberOfCars} \\leq \\left(\\textup{MaxCarProportion} \\times (\\textup{NumberOfBikes} + \\textup{NumberOfCars})\\right)",
            "related_variables": [
                "NumberOfBikes",
                "NumberOfCars"
            ],
            "related_parameters": [
                "MaxCarProportion"
            ]
        }
    ],
    "variables": [
        {
            "definition": "The number of bikes used for transportation",
            "symbol": "NumberOfBikes",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "The number of cars used for transportation",
            "symbol": "NumberOfCars",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Minimize the number of bikes used for transportation",
            "status": "formulated",
            "formulation": "\\min \\textup{NumberOfBikes}",
            "related_variables": [
                "NumberOfBikes"
            ],
            "related_parameters": []
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413144309_nl4opt_prob_178/",
    "problem_path": "data/nl4opt/prob_178/"
}