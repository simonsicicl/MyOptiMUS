{
    "background": "A candy store mixes regular candy and sour candy to prepare two products: regular mix and sour surprise mix.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Amount of regular candy in each kilogram of the regular mix",
            "symbol": "RegCandyRegMix",
            "value": 0.8,
            "shape": [],
            "code": "RegCandyRegMix = data[\"RegCandyRegMix\"] # scalar parameter"
        },
        {
            "definition": "Amount of sour candy in each kilogram of the regular mix",
            "symbol": "SourCandyRegMix",
            "value": 0.2,
            "shape": [],
            "code": "SourCandyRegMix = data[\"SourCandyRegMix\"] # scalar parameter"
        },
        {
            "definition": "Profit per kilogram of the regular mix",
            "symbol": "ProfitRegMix",
            "value": 3,
            "shape": [],
            "code": "ProfitRegMix = data[\"ProfitRegMix\"] # scalar parameter"
        },
        {
            "definition": "Amount of regular candy in each kilogram of the sour surprise mix",
            "symbol": "RegCandySourMix",
            "value": 0.1,
            "shape": [],
            "code": "RegCandySourMix = data[\"RegCandySourMix\"] # scalar parameter"
        },
        {
            "definition": "Amount of sour candy in each kilogram of the sour surprise mix",
            "symbol": "SourCandySourMix",
            "value": 0.9,
            "shape": [],
            "code": "SourCandySourMix = data[\"SourCandySourMix\"] # scalar parameter"
        },
        {
            "definition": "Profit per kilogram of the sour surprise mix",
            "symbol": "ProfitSourMix",
            "value": 5,
            "shape": [],
            "code": "ProfitSourMix = data[\"ProfitSourMix\"] # scalar parameter"
        },
        {
            "definition": "Total amount of regular candy available",
            "symbol": "TotalRegCandy",
            "value": 80,
            "shape": [],
            "code": "TotalRegCandy = data[\"TotalRegCandy\"] # scalar parameter"
        },
        {
            "definition": "Total amount of sour candy available",
            "symbol": "TotalSourCandy",
            "value": 60,
            "shape": [],
            "code": "TotalSourCandy = data[\"TotalSourCandy\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The amounts of regular mix and sour surprise mix should be non-negative",
            "status": "formulated",
            "formulation": "\\textup{RegularMix} \\geq 0 \\quad \\textup{and} \\quad \\textup{SourSurpriseMix} \\geq 0",
            "related_variables": [
                "RegularMix",
                "SourSurpriseMix"
            ],
            "related_parameters": []
        },
        {
            "description": "The sum of regular candy used in both mixes cannot exceed the total amount of regular candy available.",
            "status": "formulated",
            "formulation": "\\textup{RegCandyRegMix} \\times \\textup{RegularMix} + \\textup{RegCandySourMix} \\times \\textup{SourSurpriseMix} \\leq \\textup{TotalRegCandy}",
            "related_variables": [
                "RegularMix",
                "SourSurpriseMix"
            ],
            "related_parameters": [
                "RegCandyRegMix",
                "RegCandySourMix",
                "TotalRegCandy"
            ]
        },
        {
            "description": "The sum of sour candy used in both mixes cannot exceed TotalSourCandy kg",
            "status": "formulated",
            "formulation": "\\textup{RegularMix} \\cdot \\textup{SourCandyRegMix} + \\textup{SourSurpriseMix} \\cdot \\textup{SourCandySourMix} \\leq \\textup{TotalSourCandy}",
            "related_variables": [
                "RegularMix",
                "SourSurpriseMix"
            ],
            "related_parameters": [
                "SourCandyRegMix",
                "SourCandySourMix",
                "TotalSourCandy"
            ]
        },
        {
            "description": "The amount of regular candy and sour candy in the regular mix should be proportional to its given ratios, calculated for each kilogram of the regular mix prepared",
            "status": "formulated",
            "formulation": "\\textup{RegularMix} \\times \\textup{RegCandyRegMix} + \\textup{RegularMix} \\times \\textup{SourCandyRegMix} = \\textup{RegularMix}",
            "related_variables": [
                "RegularMix"
            ],
            "related_parameters": [
                "RegCandyRegMix",
                "SourCandyRegMix"
            ]
        },
        {
            "description": "Each kilogram of sour surprise mix contains specified amounts of regular candy and sour candy",
            "status": "formulated",
            "formulation": "\\textup{RegCandySourMix} \\cdot \\textup{SourSurpriseMix} + \\textup{SourCandySourMix} \\cdot \\textup{SourSurpriseMix} \\leq \\textup{SourSurpriseMix}",
            "related_variables": [
                "SourSurpriseMix"
            ],
            "related_parameters": [
                "RegCandySourMix",
                "SourCandySourMix"
            ]
        }
    ],
    "variables": [
        {
            "definition": "The amount (in kilograms) of the regular mix that the store prepares",
            "symbol": "RegularMix",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "The amount (in kilograms) of the sour surprise mix that the store prepares",
            "symbol": "SourSurpriseMix",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Maximize the total profit from the sale of regular mix and sour surprise mix",
            "status": "formulated",
            "formulation": "\\max (\\textup{ProfitRegMix} \\times \\textup{RegularMix} + \\textup{ProfitSourMix} \\times \\textup{SourSurpriseMix})",
            "related_variables": [
                "RegularMix",
                "SourSurpriseMix"
            ],
            "related_parameters": [
                "ProfitRegMix",
                "ProfitSourMix"
            ]
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413181851_nl4opt_prob_29/",
    "problem_path": "data/nl4opt/prob_29/"
}