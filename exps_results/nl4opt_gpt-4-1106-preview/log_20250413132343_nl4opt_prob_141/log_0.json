{
    "background": "A bodybuilder is planning to buy turkey dinners and tuna salad sandwiches for his meals, which contain different amounts of protein, carbs, and fat. He has minimum protein and carbs intake goals to meet, and he also has a limit on the proportion of turkey dinners he can buy to minimize costs.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Amount of protein in a turkey dinner",
            "symbol": "ProteinTurkeyDinner",
            "value": 20,
            "shape": [],
            "code": "ProteinTurkeyDinner = data[\"ProteinTurkeyDinner\"] # scalar parameter"
        },
        {
            "definition": "Amount of carbs in a turkey dinner",
            "symbol": "CarbsTurkeyDinner",
            "value": 30,
            "shape": [],
            "code": "CarbsTurkeyDinner = data[\"CarbsTurkeyDinner\"] # scalar parameter"
        },
        {
            "definition": "Amount of fat in a turkey dinner",
            "symbol": "FatTurkeyDinner",
            "value": 12,
            "shape": [],
            "code": "FatTurkeyDinner = data[\"FatTurkeyDinner\"] # scalar parameter"
        },
        {
            "definition": "Amount of protein in a tuna salad sandwich",
            "symbol": "ProteinTunaSalad",
            "value": 18,
            "shape": [],
            "code": "ProteinTunaSalad = data[\"ProteinTunaSalad\"] # scalar parameter"
        },
        {
            "definition": "Amount of carbs in a tuna salad sandwich",
            "symbol": "CarbsTunaSalad",
            "value": 25,
            "shape": [],
            "code": "CarbsTunaSalad = data[\"CarbsTunaSalad\"] # scalar parameter"
        },
        {
            "definition": "Amount of fat in a tuna salad sandwich",
            "symbol": "FatTunaSalad",
            "value": 8,
            "shape": [],
            "code": "FatTunaSalad = data[\"FatTunaSalad\"] # scalar parameter"
        },
        {
            "definition": "Minimum required grams of protein",
            "symbol": "MinProtein",
            "value": 150,
            "shape": [],
            "code": "MinProtein = data[\"MinProtein\"] # scalar parameter"
        },
        {
            "definition": "Minimum required grams of carbs",
            "symbol": "MinCarbs",
            "value": 200,
            "shape": [],
            "code": "MinCarbs = data[\"MinCarbs\"] # scalar parameter"
        },
        {
            "definition": "Maximum proportion of total meals that can be turkey dinners",
            "symbol": "MaxTurkeyDinnerProportion",
            "value": 0.4,
            "shape": [],
            "code": "MaxTurkeyDinnerProportion = data[\"MaxTurkeyDinnerProportion\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The number of turkey dinners must be non-negative",
            "status": "formulated",
            "formulation": "\\textup{TurkeyDinners} \\geq 0",
            "related_variables": [
                "TurkeyDinners"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of tuna salad sandwiches is non-negative",
            "status": "formulated",
            "formulation": "\\textup{TunaSalads} \\geq 0",
            "related_variables": [
                "TunaSalads"
            ],
            "related_parameters": []
        },
        {
            "description": "Total grams of protein from meals must be at least MinProtein",
            "status": "formulated",
            "formulation": "\\textup{ProteinTurkeyDinner} \\times \\textup{TurkeyDinners} + \\textup{ProteinTunaSalad} \\times \\textup{TunaSalads} \\geq \\textup{MinProtein}",
            "related_variables": [
                "TurkeyDinners",
                "TunaSalads"
            ],
            "related_parameters": [
                "ProteinTurkeyDinner",
                "ProteinTunaSalad",
                "MinProtein"
            ]
        },
        {
            "description": "Total grams of carbs from meals must be at least MinCarbs",
            "status": "formulated",
            "formulation": "\\textup{CarbsTurkeyDinner} \\cdot \\textup{TurkeyDinners} + \\textup{CarbsTunaSalad} \\cdot \\textup{TunaSalads} \\geq \\textup{MinCarbs}",
            "related_variables": [
                "TurkeyDinners",
                "TunaSalads"
            ],
            "related_parameters": [
                "CarbsTurkeyDinner",
                "CarbsTunaSalad",
                "MinCarbs"
            ]
        },
        {
            "description": "Ensure no more than MaxTurkeyDinnerProportion of the meals are turkey dinners.",
            "status": "formulated",
            "formulation": "\\textup{TurkeyDinners} \\leq \\textup{MaxTurkeyDinnerProportion} \\times (\\textup{TurkeyDinners} + \\textup{TunaSalads})",
            "related_variables": [
                "TurkeyDinners",
                "TunaSalads"
            ],
            "related_parameters": [
                "MaxTurkeyDinnerProportion"
            ]
        },
        {
            "description": "Ensure minimum protein intake is met",
            "status": "formulated",
            "formulation": "\\textup{ProteinTurkeyDinner} \\cdot \\textup{TurkeyDinners} + \\textup{ProteinTunaSalad} \\cdot \\textup{TunaSalads} \\geq \\textup{MinProtein}",
            "related_variables": [
                "TurkeyDinners",
                "TunaSalads"
            ],
            "related_parameters": [
                "ProteinTurkeyDinner",
                "ProteinTunaSalad",
                "MinProtein"
            ]
        },
        {
            "description": "Ensure minimum carbs intake is met",
            "status": "formulated",
            "formulation": "\\textup{CarbsTurkeyDinner} \\cdot \\textup{TurkeyDinners} + \\textup{CarbsTunaSalad} \\cdot \\textup{TunaSalads} \\geq \\textup{MinCarbs}",
            "related_variables": [
                "TurkeyDinners",
                "TunaSalads"
            ],
            "related_parameters": [
                "CarbsTurkeyDinner",
                "CarbsTunaSalad",
                "MinCarbs"
            ]
        },
        {
            "description": "Limit the proportion of turkey dinners compared to the total number of meals",
            "status": "formulated",
            "formulation": "\\textup{TurkeyDinners} \\leq \\textup{MaxTurkeyDinnerProportion} \\cdot (\\textup{TurkeyDinners} + \\textup{TunaSalads})",
            "related_variables": [
                "TurkeyDinners",
                "TunaSalads"
            ],
            "related_parameters": [
                "MaxTurkeyDinnerProportion"
            ]
        }
    ],
    "variables": [
        {
            "definition": "The number of turkey dinners the bodybuilder buys",
            "symbol": "TurkeyDinners",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "The number of tuna salad sandwiches the bodybuilder buys",
            "symbol": "TunaSalads",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Minimize the total fat intake from turkey dinners and tuna salad sandwiches",
            "status": "formulated",
            "formulation": "\\min \\left( \\textup{FatTurkeyDinner} \\cdot \\textup{TurkeyDinners} + \\textup{FatTunaSalad} \\cdot \\textup{TunaSalads} \\right)",
            "related_variables": [
                "TurkeyDinners",
                "TunaSalads"
            ],
            "related_parameters": [
                "FatTurkeyDinner",
                "FatTunaSalad"
            ]
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413132343_nl4opt_prob_141/",
    "problem_path": "data/nl4opt/prob_141/"
}