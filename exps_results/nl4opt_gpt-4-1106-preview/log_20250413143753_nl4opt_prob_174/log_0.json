{
    "background": "A recycling company aims to optimize the utilization of bins and workers for collecting recycling material from neighborhoods.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Number of workers required for a small bin",
            "symbol": "SmallBinWorkers",
            "value": 2,
            "shape": [],
            "code": "SmallBinWorkers = data[\"SmallBinWorkers\"] # scalar parameter"
        },
        {
            "definition": "Number of workers required for a large bin",
            "symbol": "LargeBinWorkers",
            "value": 5,
            "shape": [],
            "code": "LargeBinWorkers = data[\"LargeBinWorkers\"] # scalar parameter"
        },
        {
            "definition": "Recycling material capacity of a small bin",
            "symbol": "SmallBinCapacity",
            "value": 25,
            "shape": [],
            "code": "SmallBinCapacity = data[\"SmallBinCapacity\"] # scalar parameter"
        },
        {
            "definition": "Recycling material capacity of a large bin",
            "symbol": "LargeBinCapacity",
            "value": 60,
            "shape": [],
            "code": "LargeBinCapacity = data[\"LargeBinCapacity\"] # scalar parameter"
        },
        {
            "definition": "Total number of workers available",
            "symbol": "TotalWorkers",
            "value": 100,
            "shape": [],
            "code": "TotalWorkers = data[\"TotalWorkers\"] # scalar parameter"
        },
        {
            "definition": "Ratio of the number of small bins to large bins",
            "symbol": "BinRatio",
            "value": 3,
            "shape": [],
            "code": "BinRatio = data[\"BinRatio\"] # scalar parameter"
        },
        {
            "definition": "Minimum number of small bins",
            "symbol": "MinSmallBins",
            "value": 10,
            "shape": [],
            "code": "MinSmallBins = data[\"MinSmallBins\"] # scalar parameter"
        },
        {
            "definition": "Minimum number of large bins",
            "symbol": "MinLargeBins",
            "value": 4,
            "shape": [],
            "code": "MinLargeBins = data[\"MinLargeBins\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "Each small bin requires a fixed number of workers given by the parameter SmallBinWorkers",
            "status": "formulated",
            "formulation": "\\textup{NumSmallBins} \\times \\textup{SmallBinWorkers} \\leq \\textup{TotalWorkers}",
            "related_variables": [
                "NumSmallBins"
            ],
            "related_parameters": [
                "SmallBinWorkers",
                "TotalWorkers"
            ]
        },
        {
            "description": "Each large bin requires LargeBinWorkers workers.",
            "status": "formulated",
            "formulation": "TotalLargeBinWorkers \\leq \\textup{TotalWorkers}",
            "related_variables": [
                "TotalLargeBinWorkers"
            ],
            "related_parameters": [
                "TotalWorkers"
            ]
        },
        {
            "description": "The total number of workers used cannot exceed the total number of workers available",
            "status": "formulated",
            "formulation": "\\textup{NumSmallBins} \\times \\textup{SmallBinWorkers} + \\textup{TotalLargeBinWorkers} \\leq \\textup{TotalWorkers}",
            "related_variables": [
                "NumSmallBins",
                "TotalLargeBinWorkers"
            ],
            "related_parameters": [
                "SmallBinWorkers",
                "TotalWorkers"
            ]
        },
        {
            "description": "The number of small bins must be BinRatio times the number of large bins",
            "status": "formulated",
            "formulation": "\\textup{NumSmallBins} = \\textup{BinRatio} \\times \\textup{NumLargeBins}",
            "related_variables": [
                "NumSmallBins",
                "NumLargeBins"
            ],
            "related_parameters": [
                "BinRatio"
            ]
        },
        {
            "description": "At least a minimum number of small bins should be used",
            "status": "formulated",
            "formulation": "\\textup{NumSmallBins} \\geq \\textup{MinSmallBins}",
            "related_variables": [
                "NumSmallBins"
            ],
            "related_parameters": [
                "MinSmallBins"
            ]
        },
        {
            "description": "At least the minimum number of large bins should be used",
            "status": "formulated",
            "formulation": "\\textup{NumLargeBins} \\geq \\textup{MinLargeBins}",
            "related_variables": [
                "NumLargeBins"
            ],
            "related_parameters": [
                "MinLargeBins"
            ]
        },
        {
            "description": "Ensure the number of small bins is non-negative",
            "status": "formulated",
            "formulation": "\\textup{NumSmallBins} \\geq 0",
            "related_variables": [
                "NumSmallBins"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of large bins must be non-negative",
            "status": "formulated",
            "formulation": "\\textup{NumLargeBins} \\geq 0",
            "related_variables": [
                "NumLargeBins"
            ],
            "related_parameters": []
        },
        {
            "description": "Calculate the total number of workers required for large bins.",
            "status": "formulated",
            "formulation": "\\textup{TotalLargeBinWorkers} = \\textup{NumLargeBins} \\times \\textup{LargeBinWorkers}",
            "related_variables": [
                "NumLargeBins",
                "TotalLargeBinWorkers"
            ],
            "related_parameters": [
                "LargeBinWorkers"
            ]
        },
        {
            "description": "Ensure the total number of workers employed does not exceed the available workers",
            "status": "formulated",
            "formulation": "\\textup{SmallBinWorkers} \\times \\textup{NumSmallBins} + \\textup{TotalLargeBinWorkers} \\leq \\textup{TotalWorkers}",
            "related_variables": [
                "NumSmallBins",
                "TotalLargeBinWorkers"
            ],
            "related_parameters": [
                "SmallBinWorkers",
                "TotalWorkers"
            ]
        },
        {
            "description": "Link the variable TotalLargeBinWorkers with NumLargeBins and corresponding workers needed",
            "status": "formulated",
            "formulation": "\\textup{TotalLargeBinWorkers} = \\textup{LargeBinWorkers} \\times \\textup{NumLargeBins}",
            "related_variables": [
                "TotalLargeBinWorkers",
                "NumLargeBins"
            ],
            "related_parameters": [
                "LargeBinWorkers"
            ]
        },
        {
            "description": "Maintain the ratio of the number of small bins to large bins",
            "status": "formulated",
            "formulation": "\\textup{NumSmallBins} \\leq \\textup{BinRatio} \\times \\textup{NumLargeBins}",
            "related_variables": [
                "NumSmallBins",
                "NumLargeBins"
            ],
            "related_parameters": [
                "BinRatio"
            ]
        },
        {
            "description": "Ensure the minimum number of small bins is maintained",
            "status": "formulated",
            "formulation": "\\textup{NumSmallBins} \\geq \\textup{MinSmallBins}",
            "related_variables": [
                "NumSmallBins"
            ],
            "related_parameters": [
                "MinSmallBins"
            ]
        },
        {
            "description": "Ensure the minimum number of large bins is maintained",
            "status": "formulated",
            "formulation": "\\textup{NumLargeBins} \\geq \\textup{MinLargeBins}",
            "related_variables": [
                "NumLargeBins"
            ],
            "related_parameters": [
                "MinLargeBins"
            ]
        }
    ],
    "variables": [
        {
            "definition": "Number of small bins",
            "symbol": "NumSmallBins",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "Total number of workers required for large bins",
            "symbol": "TotalLargeBinWorkers",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "Number of large bins",
            "symbol": "NumLargeBins",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Maximize the total capacity of recycling material collected by small and large bins",
            "status": "formulated",
            "formulation": "\\textup{Maximize} \\quad \\textup{TotalRecyclingCapacity} = \\textup{SmallBinCapacity} \\times \\textup{NumSmallBins} + \\textup{LargeBinCapacity} \\times \\textup{NumLargeBins}",
            "related_variables": [
                "NumSmallBins",
                "NumLargeBins"
            ],
            "related_parameters": [
                "SmallBinCapacity",
                "LargeBinCapacity"
            ]
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413143753_nl4opt_prob_174/",
    "problem_path": "data/nl4opt/prob_174/"
}