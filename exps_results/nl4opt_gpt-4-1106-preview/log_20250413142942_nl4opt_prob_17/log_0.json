{
    "background": "Elm Furniture produces chairs and dressers, generating profit from each.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Profit for each chair produced",
            "symbol": "ProfitChair",
            "value": 43,
            "shape": [],
            "code": "ProfitChair = data[\"ProfitChair\"] # scalar parameter"
        },
        {
            "definition": "Profit for each dresser produced",
            "symbol": "ProfitDresser",
            "value": 52,
            "shape": [],
            "code": "ProfitDresser = data[\"ProfitDresser\"] # scalar parameter"
        },
        {
            "definition": "Total gallons of stain available per week",
            "symbol": "TotalStain",
            "value": 17,
            "shape": [],
            "code": "TotalStain = data[\"TotalStain\"] # scalar parameter"
        },
        {
            "definition": "Total lengths of oak wood available per week",
            "symbol": "TotalOak",
            "value": 11,
            "shape": [],
            "code": "TotalOak = data[\"TotalOak\"] # scalar parameter"
        },
        {
            "definition": "Amount of stain required for one chair",
            "symbol": "StainPerChair",
            "value": 1.4,
            "shape": [],
            "code": "StainPerChair = data[\"StainPerChair\"] # scalar parameter"
        },
        {
            "definition": "Amount of oak wood required for one chair",
            "symbol": "OakPerChair",
            "value": 2,
            "shape": [],
            "code": "OakPerChair = data[\"OakPerChair\"] # scalar parameter"
        },
        {
            "definition": "Amount of stain required for one dresser",
            "symbol": "StainPerDresser",
            "value": 1.1,
            "shape": [],
            "code": "StainPerDresser = data[\"StainPerDresser\"] # scalar parameter"
        },
        {
            "definition": "Amount of oak wood required for one dresser",
            "symbol": "OakPerDresser",
            "value": 3,
            "shape": [],
            "code": "OakPerDresser = data[\"OakPerDresser\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "Number of chairs produced must be an integer value",
            "status": "formulated",
            "formulation": "ChairsProduced \\in \\mathbb{Z}",
            "related_variables": [
                "ChairsProduced"
            ],
            "related_parameters": []
        },
        {
            "description": "Number of dressers must be an integer",
            "status": "formulated",
            "formulation": "\\textup{DressersProduced} \\in \\mathbb{Z}",
            "related_variables": [
                "DressersProduced"
            ],
            "related_parameters": []
        },
        {
            "description": "Number of chairs produced must be non-negative",
            "status": "formulated",
            "formulation": "\\textup{ChairsProduced} \\geq 0",
            "related_variables": [
                "ChairsProduced"
            ],
            "related_parameters": []
        },
        {
            "description": "Number of dressers produced must be non-negative",
            "status": "formulated",
            "formulation": "\\textup{DressersProduced} \\geq 0",
            "related_variables": [
                "DressersProduced"
            ],
            "related_parameters": []
        },
        {
            "description": "Total stain used for chairs and dressers cannot exceed TotalStain gallons per week",
            "status": "formulated",
            "formulation": "\\textup{StainPerChair} \\times \\textup{ChairsProduced} + \\textup{StainPerDresser} \\times \\textup{DressersProduced} \\leq \\textup{TotalStain}",
            "related_variables": [
                "ChairsProduced",
                "DressersProduced"
            ],
            "related_parameters": [
                "StainPerChair",
                "StainPerDresser",
                "TotalStain"
            ]
        },
        {
            "description": "Total oak wood used for chairs and dressers cannot exceed the total available lengths of oak wood per week",
            "status": "formulated",
            "formulation": "\\textup{OakPerChair} \\cdot \\textup{ChairsProduced} + \\textup{OakPerDresser} \\cdot \\textup{DressersProduced} \\leq \\textup{TotalOak}",
            "related_variables": [
                "ChairsProduced",
                "DressersProduced"
            ],
            "related_parameters": [
                "OakPerChair",
                "OakPerDresser",
                "TotalOak"
            ]
        },
        {
            "description": "Total stain used for chair production must not exceed the total available stain",
            "status": "formulated",
            "formulation": "\\textup{StainPerChair} \\cdot \\textup{ChairsProduced} \\leq \\textup{TotalStain}",
            "related_variables": [
                "ChairsProduced"
            ],
            "related_parameters": [
                "StainPerChair",
                "TotalStain"
            ]
        },
        {
            "description": "The total amount of stain used for dressers must not exceed the total stain available",
            "status": "formulated",
            "formulation": "\\textup{DressersProduced} \\cdot \\textup{StainPerDresser} \\leq \\textup{TotalStain}",
            "related_variables": [
                "DressersProduced"
            ],
            "related_parameters": [
                "StainPerDresser",
                "TotalStain"
            ]
        },
        {
            "description": "Total oak wood used for chairs must not exceed total oak wood available",
            "status": "formulated",
            "formulation": "\\textup{ChairsProduced} \\times \\textup{OakPerChair} \\leq \\textup{TotalOak}",
            "related_variables": [
                "ChairsProduced"
            ],
            "related_parameters": [
                "OakPerChair",
                "TotalOak"
            ]
        },
        {
            "description": "Total oak used for dressers does not exceed total oak available",
            "status": "formulated",
            "formulation": "\\textup{OakPerDresser} \\cdot \\textup{DressersProduced} \\leq \\textup{TotalOak}",
            "related_variables": [
                "DressersProduced"
            ],
            "related_parameters": [
                "OakPerDresser",
                "TotalOak"
            ]
        }
    ],
    "variables": [
        {
            "definition": "Number of chairs produced",
            "symbol": "ChairsProduced",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "Number of dressers produced",
            "symbol": "DressersProduced",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Maximize the total profit from chairs and dressers produced",
            "status": "formulated",
            "formulation": "\\textup{TotalProfit} = \\textup{ProfitChair} \\times \\textup{ChairsProduced} + \\textup{ProfitDresser} \\times \\textup{DressersProduced}",
            "related_variables": [
                "ChairsProduced",
                "DressersProduced"
            ],
            "related_parameters": [
                "ProfitChair",
                "ProfitDresser"
            ]
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413142942_nl4opt_prob_17/",
    "problem_path": "data/nl4opt/prob_17/"
}