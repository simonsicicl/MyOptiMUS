{
    "background": "A competitive eater aims to consume slices of cheesecake and caramel cake under certain dietary constraints while maximizing sugar intake.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Calories per slice of cheesecake",
            "symbol": "CalCheesecake",
            "value": 200,
            "shape": [],
            "code": "CalCheesecake = data[\"CalCheesecake\"] # scalar parameter"
        },
        {
            "definition": "Grams of sugar per slice of cheesecake",
            "symbol": "SugarCheesecake",
            "value": 40,
            "shape": [],
            "code": "SugarCheesecake = data[\"SugarCheesecake\"] # scalar parameter"
        },
        {
            "definition": "Calories per slice of caramel cake",
            "symbol": "CalCaramelCake",
            "value": 250,
            "shape": [],
            "code": "CalCaramelCake = data[\"CalCaramelCake\"] # scalar parameter"
        },
        {
            "definition": "Grams of sugar per slice of caramel cake",
            "symbol": "SugarCaramelCake",
            "value": 50,
            "shape": [],
            "code": "SugarCaramelCake = data[\"SugarCaramelCake\"] # scalar parameter"
        },
        {
            "definition": "Minimum ratio of cheesecake slices to caramel cake slices",
            "symbol": "CheeseCaramelRatio",
            "value": 3,
            "shape": [],
            "code": "CheeseCaramelRatio = data[\"CheeseCaramelRatio\"] # scalar parameter"
        },
        {
            "definition": "Minimum number of caramel cake slices to be eaten",
            "symbol": "MinCaramel",
            "value": 3,
            "shape": [],
            "code": "MinCaramel = data[\"MinCaramel\"] # scalar parameter"
        },
        {
            "definition": "Maximum calorie intake",
            "symbol": "MaxCalories",
            "value": 10000,
            "shape": [],
            "code": "MaxCalories = data[\"MaxCalories\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The number of cheesecake slices must be non-negative",
            "status": "formulated",
            "formulation": "CheesecakeSlices \\geq 0",
            "related_variables": [
                "CheesecakeSlices"
            ],
            "related_parameters": []
        },
        {
            "description": "Number of caramel cake slices is non-negative",
            "status": "formulated",
            "formulation": "\\textup{CaramelCakeSlices} \\geq 0",
            "related_variables": [
                "CaramelCakeSlices"
            ],
            "related_parameters": []
        },
        {
            "description": "Number of cheesecake slices must be at least CheeseCaramelRatio times the number of caramel cake slices",
            "status": "formulated",
            "formulation": "\\textup{CheesecakeSlices} \\geq \\textup{CheeseCaramelRatio} \\times \\textup{CaramelCakeSlices}",
            "related_variables": [
                "CheesecakeSlices",
                "CaramelCakeSlices"
            ],
            "related_parameters": [
                "CheeseCaramelRatio"
            ]
        },
        {
            "description": "At least MinCaramel slices of caramel cake must be eaten",
            "status": "formulated",
            "formulation": "\\textup{CaramelCakeSlices} \\geq \\textup{MinCaramel}",
            "related_variables": [
                "CaramelCakeSlices"
            ],
            "related_parameters": [
                "MinCaramel"
            ]
        },
        {
            "description": "Total calorie intake from all slices must not exceed MaxCalories",
            "status": "formulated",
            "formulation": "\\textup{CheesecakeSlices} \\cdot \\textup{CalCheesecake} + \\textup{CaramelCakeSlices} \\cdot \\textup{CalCaramelCake} \\leq \\textup{MaxCalories}",
            "related_variables": [
                "CheesecakeSlices",
                "CaramelCakeSlices"
            ],
            "related_parameters": [
                "CalCheesecake",
                "CalCaramelCake",
                "MaxCalories"
            ]
        }
    ],
    "variables": [
        {
            "definition": "Number of cheesecake slices consumed",
            "symbol": "CheesecakeSlices",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "Number of caramel cake slices consumed",
            "symbol": "CaramelCakeSlices",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Maximize the total grams of sugar consumed from both cheesecake and caramel cake slices",
            "status": "formulated",
            "formulation": "\\textup{Maximize} \\quad \\textup{CheesecakeSlices} \\times \\textup{SugarCheesecake} + \\textup{CaramelCakeSlices} \\times \\textup{SugarCaramelCake}",
            "related_variables": [
                "CheesecakeSlices",
                "CaramelCakeSlices"
            ],
            "related_parameters": [
                "SugarCheesecake",
                "SugarCaramelCake"
            ]
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413131223_nl4opt_prob_134/",
    "problem_path": "data/nl4opt/prob_134/"
}