{
    "background": "A clinical firm operates two factories, a northern and a western, where they make anti-itch injections and topical cream, both of which require plastic for packaging.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Amount of anti-itch injections produced per hour by the northern factory",
            "symbol": "NorthernInjectionsRate",
            "value": 800,
            "shape": [],
            "code": "NorthernInjectionsRate = data[\"NorthernInjectionsRate\"] # scalar parameter"
        },
        {
            "definition": "Amount of topical cream produced per hour by the northern factory",
            "symbol": "NorthernCreamRate",
            "value": 700,
            "shape": [],
            "code": "NorthernCreamRate = data[\"NorthernCreamRate\"] # scalar parameter"
        },
        {
            "definition": "Amount of anti-itch injections produced per hour by the western factory",
            "symbol": "WesternInjectionsRate",
            "value": 650,
            "shape": [],
            "code": "WesternInjectionsRate = data[\"WesternInjectionsRate\"] # scalar parameter"
        },
        {
            "definition": "Amount of topical cream produced per hour by the western factory",
            "symbol": "WesternCreamRate",
            "value": 750,
            "shape": [],
            "code": "WesternCreamRate = data[\"WesternCreamRate\"] # scalar parameter"
        },
        {
            "definition": "Units of plastic required per hour by the northern factory",
            "symbol": "NorthernPlasticRate",
            "value": 40,
            "shape": [],
            "code": "NorthernPlasticRate = data[\"NorthernPlasticRate\"] # scalar parameter"
        },
        {
            "definition": "Units of plastic required per hour by the western factory",
            "symbol": "WesternPlasticRate",
            "value": 35,
            "shape": [],
            "code": "WesternPlasticRate = data[\"WesternPlasticRate\"] # scalar parameter"
        },
        {
            "definition": "Total units of plastic available",
            "symbol": "TotalPlastic",
            "value": 60000,
            "shape": [],
            "code": "TotalPlastic = data[\"TotalPlastic\"] # scalar parameter"
        },
        {
            "definition": "Minimum total amount of anti-itch injections to be produced",
            "symbol": "MinInjections",
            "value": 800000,
            "shape": [],
            "code": "MinInjections = data[\"MinInjections\"] # scalar parameter"
        },
        {
            "definition": "Minimum total amount of topical cream to be produced",
            "symbol": "MinCream",
            "value": 700000,
            "shape": [],
            "code": "MinCream = data[\"MinCream\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The total plastic usage by both northern and western factories must not exceed the total available plastic",
            "status": "coded",
            "formulation": "\\textup{NorthernPlasticRate} \\times \\textup{NorthernFactoryHours} + \\textup{WesternPlasticRate} \\times \\textup{WesternFactoryHours} \\leq \\textup{TotalPlastic}",
            "related_variables": [
                "NorthernFactoryHours",
                "WesternFactoryHours"
            ],
            "related_parameters": [
                "NorthernPlasticRate",
                "WesternPlasticRate",
                "TotalPlastic"
            ],
            "code": "# Total plastic usage constraint for northern and western factories\nmodel.addConstr(NorthernPlasticRate * NorthernFactoryHours + WesternPlasticRate * WesternFactoryHours <= TotalPlastic, name=\"total_plastic_usage\")"
        },
        {
            "description": "The total grams of anti-itch injections produced by both factories must be at least the minimum required",
            "status": "coded",
            "formulation": "\\textup{NorthernFactoryHours} \\times \\textup{NorthernInjectionsRate} + \\textup{WesternFactoryHours} \\times \\textup{WesternInjectionsRate} \\geq \\textup{MinInjections}",
            "related_variables": [
                "NorthernFactoryHours",
                "WesternFactoryHours"
            ],
            "related_parameters": [
                "NorthernInjectionsRate",
                "WesternInjectionsRate",
                "MinInjections"
            ],
            "code": "# Add constraint for minimum total grams of anti-itch injections produced by both factories\nmodel.addConstr(NorthernFactoryHours * NorthernInjectionsRate + WesternFactoryHours * WesternInjectionsRate >= MinInjections, name=\"min_injections_requirement\")"
        },
        {
            "description": "The total amount of topical cream produced by the northern and western factories must meet the minimum requirement",
            "status": "coded",
            "formulation": "\\textup{NorthernCreamRate} \\cdot \\textup{NorthernFactoryHours} + \\textup{WesternCreamRate} \\cdot \\textup{WesternFactoryHours} \\geq \\textup{MinCream}",
            "related_variables": [
                "NorthernFactoryHours",
                "WesternFactoryHours"
            ],
            "related_parameters": [
                "NorthernCreamRate",
                "WesternCreamRate",
                "MinCream"
            ],
            "code": "# Constraint for the minimum requirement of topical cream production\nmodel.addConstr(NorthernCreamRate * NorthernFactoryHours + WesternCreamRate * WesternFactoryHours >= MinCream, \"min_cream_requirement\")"
        },
        {
            "description": "The number of hours the northern factory operates is non-negative.",
            "status": "coded",
            "formulation": "\\textup{NorthernFactoryHours} \\geq 0",
            "related_variables": [
                "NorthernFactoryHours"
            ],
            "related_parameters": [],
            "code": "model.addConstr(NorthernFactoryHours >= 0, name=\"non_negative_hours\")"
        },
        {
            "description": "The operating hours for the western factory must be non-negative.",
            "status": "coded",
            "formulation": "\\textup{WesternFactoryHours} \\geq 0",
            "related_variables": [
                "WesternFactoryHours"
            ],
            "related_parameters": [],
            "code": "model.addConstr(WesternFactoryHours >= 0, \"WesternFactoryHours_non_negative\")"
        }
    ],
    "variables": [
        {
            "definition": "Number of operating hours at the northern factory",
            "symbol": "NorthernFactoryHours",
            "shape": [],
            "status": "coded",
            "code": "NorthernFactoryHours = model.addVar(vtype=gp.GRB.CONTINUOUS, name=\"NorthernFactoryHours\")"
        },
        {
            "definition": "Number of operating hours at the western factory",
            "symbol": "WesternFactoryHours",
            "shape": [],
            "status": "coded",
            "code": "WesternFactoryHours = model.addVar(vtype=gp.GRB.CONTINUOUS, name=\"WesternFactoryHours\")"
        }
    ],
    "objective": [
        {
            "description": "Minimize the total operational time of both the northern and western factories",
            "status": "coded",
            "formulation": "\\textup{Minimize}\\quad \\textup{NorthernFactoryHours} + \\textup{WesternFactoryHours}",
            "related_variables": [
                "NorthernFactoryHours",
                "WesternFactoryHours"
            ],
            "related_parameters": [],
            "code": "# Set objective\nmodel.setObjective(NorthernFactoryHours + WesternFactoryHours, gp.GRB.MINIMIZE)"
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413175112_nl4opt_prob_271/",
    "problem_path": "data/nl4opt/prob_271/"
}