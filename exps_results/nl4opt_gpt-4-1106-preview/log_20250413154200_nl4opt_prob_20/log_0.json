{
    "background": "A grocery store wants to liquidate its stock by selling banana-haters packages and combo packages that contain different quantities of apples, bananas, and grapes, for different profit margins.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Initial stock of apples",
            "symbol": "ApplesStock",
            "value": 10,
            "shape": [],
            "code": "ApplesStock = data[\"ApplesStock\"] # scalar parameter"
        },
        {
            "definition": "Initial stock of bananas",
            "symbol": "BananasStock",
            "value": 20,
            "shape": [],
            "code": "BananasStock = data[\"BananasStock\"] # scalar parameter"
        },
        {
            "definition": "Initial stock of grapes",
            "symbol": "GrapesStock",
            "value": 80,
            "shape": [],
            "code": "GrapesStock = data[\"GrapesStock\"] # scalar parameter"
        },
        {
            "definition": "Number of apples in a banana-haters package",
            "symbol": "ApplesBHPack",
            "value": 6,
            "shape": [],
            "code": "ApplesBHPack = data[\"ApplesBHPack\"] # scalar parameter"
        },
        {
            "definition": "Number of grapes in a banana-haters package",
            "symbol": "GrapesBHPack",
            "value": 30,
            "shape": [],
            "code": "GrapesBHPack = data[\"GrapesBHPack\"] # scalar parameter"
        },
        {
            "definition": "Profit from a banana-haters package",
            "symbol": "ProfitBHPack",
            "value": 6,
            "shape": [],
            "code": "ProfitBHPack = data[\"ProfitBHPack\"] # scalar parameter"
        },
        {
            "definition": "Number of apples in a combo package",
            "symbol": "ApplesCombo",
            "value": 5,
            "shape": [],
            "code": "ApplesCombo = data[\"ApplesCombo\"] # scalar parameter"
        },
        {
            "definition": "Number of bananas in a combo package",
            "symbol": "BananasCombo",
            "value": 6,
            "shape": [],
            "code": "BananasCombo = data[\"BananasCombo\"] # scalar parameter"
        },
        {
            "definition": "Number of grapes in a combo package",
            "symbol": "GrapesCombo",
            "value": 20,
            "shape": [],
            "code": "GrapesCombo = data[\"GrapesCombo\"] # scalar parameter"
        },
        {
            "definition": "Profit from a combo package",
            "symbol": "ProfitCombo",
            "value": 7,
            "shape": [],
            "code": "ProfitCombo = data[\"ProfitCombo\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The number of banana-haters packages sold must be non-negative",
            "status": "formulated",
            "formulation": "\\textup{BananaHatersPackagesSold} \\geq 0",
            "related_variables": [
                "BananaHatersPackagesSold"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of combo packages sold must be non-negative",
            "status": "formulated",
            "formulation": "ComboPackagesSold \\geq 0",
            "related_variables": [
                "ComboPackagesSold"
            ],
            "related_parameters": []
        },
        {
            "description": "Total apples used in both banana-haters and combo packages should not exceed the available stock of apples.",
            "status": "formulated",
            "formulation": "\\textup{BananaHatersPackagesSold} \\cdot \\textup{ApplesBHPack} + \\textup{ComboPackagesSold} \\cdot \\textup{ApplesCombo} \\leq \\textup{ApplesStock}",
            "related_variables": [
                "BananaHatersPackagesSold",
                "ComboPackagesSold"
            ],
            "related_parameters": [
                "ApplesStock",
                "ApplesBHPack",
                "ApplesCombo"
            ]
        },
        {
            "description": "The total number of bananas used in combo packages must not exceed the stock of bananas available",
            "status": "formulated",
            "formulation": "\\textup{BananasCombo} \\cdot \\textup{ComboPackagesSold} \\leq \\textup{BananasStock}",
            "related_variables": [
                "ComboPackagesSold"
            ],
            "related_parameters": [
                "BananasCombo",
                "BananasStock"
            ]
        },
        {
            "description": "The total number of grapes used in both banana-haters and combo packages must not exceed the available stock of grapes.",
            "status": "formulated",
            "formulation": "GrapesBHPack \\cdot \\textup{BananaHatersPackagesSold} + GrapesCombo \\cdot \\textup{ComboPackagesSold} \\leq \\textup{GrapesStock}",
            "related_variables": [
                "BananaHatersPackagesSold",
                "ComboPackagesSold"
            ],
            "related_parameters": [
                "GrapesBHPack",
                "GrapesCombo",
                "GrapesStock"
            ]
        },
        {
            "description": "The number of apples used in banana-haters packages and combo packages does not exceed the initial stock",
            "status": "formulated",
            "formulation": "\\textup{BananaHatersPackagesSold} \\times \\textup{ApplesBHPack} + \\textup{ComboPackagesSold} \\times \\textup{ApplesCombo} \\leq \\textup{ApplesStock}",
            "related_variables": [
                "BananaHatersPackagesSold",
                "ComboPackagesSold"
            ],
            "related_parameters": [
                "ApplesBHPack",
                "ApplesCombo",
                "ApplesStock"
            ]
        },
        {
            "description": "The number of bananas used in combo packages does not exceed the initial stock because banana-haters packages contain no bananas",
            "status": "formulated",
            "formulation": "\\textup{ComboPackagesSold} \\times \\textup{BananasCombo} \\leq \\textup{BananasStock}",
            "related_variables": [
                "ComboPackagesSold"
            ],
            "related_parameters": [
                "BananasCombo",
                "BananasStock"
            ]
        },
        {
            "description": "The number of grapes used in banana-haters packages and combo packages does not exceed the initial stock",
            "status": "formulated",
            "formulation": "\\textup{BananaHatersPackagesSold} \\times \\textup{GrapesBHPack} + \\textup{ComboPackagesSold} \\times \\textup{GrapesCombo} \\leq \\textup{GrapesStock}",
            "related_variables": [
                "BananaHatersPackagesSold",
                "ComboPackagesSold"
            ],
            "related_parameters": [
                "GrapesBHPack",
                "GrapesCombo",
                "GrapesStock"
            ]
        }
    ],
    "variables": [
        {
            "definition": "The number of banana-haters packages sold",
            "symbol": "BananaHatersPackagesSold",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "The number of combo packages sold",
            "symbol": "ComboPackagesSold",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Maximize the total profit by selling banana-haters packages and combo packages",
            "status": "formulated",
            "formulation": "\\max (\\textup{BananaHatersPackagesSold} \\times \\textup{ProfitBHPack} + \\textup{ComboPackagesSold} \\times \\textup{ProfitCombo})",
            "related_variables": [
                "BananaHatersPackagesSold",
                "ComboPackagesSold"
            ],
            "related_parameters": [
                "ProfitBHPack",
                "ProfitCombo"
            ]
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413154200_nl4opt_prob_20/",
    "problem_path": "data/nl4opt/prob_20/"
}