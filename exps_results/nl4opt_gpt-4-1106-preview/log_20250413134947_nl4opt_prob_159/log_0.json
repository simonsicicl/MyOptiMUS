{
    "background": "A meat shop needs to ship burger patties using refrigerated trucks and vans with specific capacities and costs, following certain restrictions regarding movement in the city and budget.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Maximum capacity of a truck",
            "symbol": "TruckCapacity",
            "value": 1000,
            "shape": [],
            "code": "TruckCapacity = data[\"TruckCapacity\"] # scalar parameter"
        },
        {
            "definition": "Cost per truck trip",
            "symbol": "TruckCost",
            "value": 300,
            "shape": [],
            "code": "TruckCost = data[\"TruckCost\"] # scalar parameter"
        },
        {
            "definition": "Maximum capacity of a van",
            "symbol": "VanCapacity",
            "value": 500,
            "shape": [],
            "code": "VanCapacity = data[\"VanCapacity\"] # scalar parameter"
        },
        {
            "definition": "Cost per van trip",
            "symbol": "VanCost",
            "value": 100,
            "shape": [],
            "code": "VanCost = data[\"VanCost\"] # scalar parameter"
        },
        {
            "definition": "Minimum number of patties to ship",
            "symbol": "MinPatties",
            "value": 50000,
            "shape": [],
            "code": "MinPatties = data[\"MinPatties\"] # scalar parameter"
        },
        {
            "definition": "Budget for shipments",
            "symbol": "Budget",
            "value": 12500,
            "shape": [],
            "code": "Budget = data[\"Budget\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "Number of trucks and vans used must be non-negative",
            "status": "formulated",
            "formulation": "\\textup{NumTrucks} \\geq 0 \\quad \\textup{and} \\quad \\textup{NumVans} \\geq 0",
            "related_variables": [
                "NumTrucks",
                "NumVans"
            ],
            "related_parameters": []
        },
        {
            "description": "Ensure that the number of vans used is non-negative",
            "status": "formulated",
            "formulation": "\\textup{NumVans} \\geq 0",
            "related_variables": [
                "NumVans"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of trucks must not exceed the number of vans",
            "status": "formulated",
            "formulation": "\\textup{NumTrucks} \\leq \\textup{NumVans}",
            "related_variables": [
                "NumTrucks",
                "NumVans"
            ],
            "related_parameters": []
        },
        {
            "description": "At least MinPatties patties need to be shipped",
            "status": "formulated",
            "formulation": "\\textup{NumTrucks} \\times \\textup{TruckCapacity} + \\textup{NumVans} \\times \\textup{VanCapacity} \\geq \\textup{MinPatties}",
            "related_variables": [
                "NumTrucks",
                "NumVans"
            ],
            "related_parameters": [
                "TruckCapacity",
                "VanCapacity",
                "MinPatties"
            ]
        },
        {
            "description": "Total cost of trucks and vans must not exceed budget",
            "status": "formulated",
            "formulation": "\\textup{TruckCost} \\times \\textup{NumTrucks} + \\textup{VanCost} \\times \\textup{NumVans} \\leq \\textup{Budget}",
            "related_variables": [
                "NumTrucks",
                "NumVans"
            ],
            "related_parameters": [
                "TruckCost",
                "VanCost",
                "Budget"
            ]
        },
        {
            "description": "Ensure that the minimum number of patties are shipped",
            "status": "formulated",
            "formulation": "\\textup{NumTrucks} \\times \\textup{TruckCapacity} + \\textup{NumVans} \\times \\textup{VanCapacity} \\geq \\textup{MinPatties}",
            "related_variables": [
                "NumTrucks",
                "NumVans"
            ],
            "related_parameters": [
                "TruckCapacity",
                "VanCapacity",
                "MinPatties"
            ]
        },
        {
            "description": "Ensure that the budget is not exceeded",
            "status": "formulated",
            "formulation": "\\textup{NumTrucks} \\times \\textup{TruckCost} + \\textup{NumVans} \\times \\textup{VanCost} \\leq \\textup{Budget}",
            "related_variables": [
                "NumTrucks",
                "NumVans"
            ],
            "related_parameters": [
                "TruckCost",
                "VanCost",
                "Budget"
            ]
        }
    ],
    "variables": [
        {
            "definition": "Number of refrigerated trucks used",
            "symbol": "NumTrucks",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "Number of vans used",
            "symbol": "NumVans",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Minimize the total number of trips for shipping the patties",
            "status": "formulated",
            "formulation": "\\textup{Minimize: } \\quad \\textup{NumTrucks} + \\textup{NumVans}",
            "related_variables": [
                "NumTrucks",
                "NumVans"
            ],
            "related_parameters": []
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413134947_nl4opt_prob_159/",
    "problem_path": "data/nl4opt/prob_159/"
}