{
    "background": "A toy company needs to determine the number of medium-sized and small factories to build in order to meet daily toy production minimums with a limited number of operators.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Number of toys produced per day by a medium-sized factory",
            "symbol": "ToysMedium",
            "value": 50,
            "shape": [],
            "code": "ToysMedium = data[\"ToysMedium\"] # scalar parameter"
        },
        {
            "definition": "Number of operators required for a medium-sized factory",
            "symbol": "OperatorsMedium",
            "value": 3,
            "shape": [],
            "code": "OperatorsMedium = data[\"OperatorsMedium\"] # scalar parameter"
        },
        {
            "definition": "Number of toys produced per day by a small factory",
            "symbol": "ToysSmall",
            "value": 35,
            "shape": [],
            "code": "ToysSmall = data[\"ToysSmall\"] # scalar parameter"
        },
        {
            "definition": "Number of operators required for a small factory",
            "symbol": "OperatorsSmall",
            "value": 2,
            "shape": [],
            "code": "OperatorsSmall = data[\"OperatorsSmall\"] # scalar parameter"
        },
        {
            "definition": "Minimum number of toys to be produced per day",
            "symbol": "ToysMin",
            "value": 250,
            "shape": [],
            "code": "ToysMin = data[\"ToysMin\"] # scalar parameter"
        },
        {
            "definition": "Total number of operators available",
            "symbol": "OperatorsTotal",
            "value": 16,
            "shape": [],
            "code": "OperatorsTotal = data[\"OperatorsTotal\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The number of medium-sized factories must be non-negative",
            "status": "formulated",
            "formulation": "\\textup{MediumFactories} \\geq 0",
            "related_variables": [
                "MediumFactories"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of small factories must be non-negative",
            "status": "formulated",
            "formulation": "\\textup{SmallFactories} \\geq 0",
            "related_variables": [
                "SmallFactories"
            ],
            "related_parameters": []
        },
        {
            "description": "Total production from all medium-sized and small factories must meet or exceed the minimum daily production requirement.",
            "status": "formulated",
            "formulation": "\\textup{MediumFactories} \\times \\textup{ToysMedium} + \\textup{SmallFactories} \\times \\textup{ToysSmall} \\geq \\textup{ToysMin}",
            "related_variables": [
                "MediumFactories",
                "SmallFactories"
            ],
            "related_parameters": [
                "ToysMedium",
                "ToysSmall",
                "ToysMin"
            ]
        },
        {
            "description": "The constraint enforces the total number of operators required by medium-sized and small factories does not exceed the total number of operators available.",
            "status": "formulated",
            "formulation": "\\textup{OperatorsMedium} \\cdot \\textup{MediumFactories} + \\textup{OperatorsSmall} \\cdot \\textup{SmallFactories} \\leq \\textup{OperatorsTotal}",
            "related_variables": [
                "MediumFactories",
                "SmallFactories"
            ],
            "related_parameters": [
                "OperatorsMedium",
                "OperatorsSmall",
                "OperatorsTotal"
            ]
        },
        {
            "description": "Production constraint to meet the minimum daily toy production requirement",
            "status": "formulated",
            "formulation": "\\textup{ToysMedium} \\cdot \\textup{MediumFactories} + \\textup{ToysSmall} \\cdot \\textup{SmallFactories} \\geq \\textup{ToysMin}",
            "related_variables": [
                "MediumFactories",
                "SmallFactories"
            ],
            "related_parameters": [
                "ToysMedium",
                "ToysSmall",
                "ToysMin"
            ]
        },
        {
            "description": "Operator constraint not to exceed the total number of operators available",
            "status": "formulated",
            "formulation": "\\textup{OperatorsMedium} \\cdot \\textup{MediumFactories} + \\textup{OperatorsSmall} \\cdot \\textup{SmallFactories} \\leq \\textup{OperatorsTotal}",
            "related_variables": [
                "MediumFactories",
                "SmallFactories"
            ],
            "related_parameters": [
                "OperatorsMedium",
                "OperatorsSmall",
                "OperatorsTotal"
            ]
        }
    ],
    "variables": [
        {
            "definition": "Number of medium-sized factories",
            "symbol": "MediumFactories",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "Number of small factories",
            "symbol": "SmallFactories",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Minimize the total number of factories built",
            "status": "formulated",
            "formulation": "\\textup{Minimize} \\quad \\textup{MediumFactories} + \\textup{SmallFactories}",
            "related_variables": [
                "MediumFactories",
                "SmallFactories"
            ],
            "related_parameters": []
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250414051108_nl4opt_prob_92/",
    "problem_path": "data/nl4opt/prob_92/"
}