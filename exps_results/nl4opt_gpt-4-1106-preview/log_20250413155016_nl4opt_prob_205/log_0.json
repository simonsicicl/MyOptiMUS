{
    "background": "Bob is planning his diet based on servings of noodles and protein bars. He aims to minimize his daily meal expenses while meeting his caloric and protein intake requirements.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Cost per serving of noodles",
            "symbol": "CostNoodles",
            "value": 5,
            "shape": [],
            "code": "CostNoodles = data[\"CostNoodles\"] # scalar parameter"
        },
        {
            "definition": "Calories per serving of noodles",
            "symbol": "CaloriesNoodles",
            "value": 600,
            "shape": [],
            "code": "CaloriesNoodles = data[\"CaloriesNoodles\"] # scalar parameter"
        },
        {
            "definition": "Protein per serving of noodles in grams",
            "symbol": "ProteinNoodles",
            "value": 1.5,
            "shape": [],
            "code": "ProteinNoodles = data[\"ProteinNoodles\"] # scalar parameter"
        },
        {
            "definition": "Cost per serving of protein bars",
            "symbol": "CostBars",
            "value": 2.5,
            "shape": [],
            "code": "CostBars = data[\"CostBars\"] # scalar parameter"
        },
        {
            "definition": "Calories per serving of protein bars",
            "symbol": "CaloriesBars",
            "value": 250,
            "shape": [],
            "code": "CaloriesBars = data[\"CaloriesBars\"] # scalar parameter"
        },
        {
            "definition": "Protein per serving of protein bars in grams",
            "symbol": "ProteinBars",
            "value": 5,
            "shape": [],
            "code": "ProteinBars = data[\"ProteinBars\"] # scalar parameter"
        },
        {
            "definition": "Minimum calorie intake per day",
            "symbol": "MinCalories",
            "value": 2000,
            "shape": [],
            "code": "MinCalories = data[\"MinCalories\"] # scalar parameter"
        },
        {
            "definition": "Minimum protein intake per day in grams",
            "symbol": "MinProtein",
            "value": 16,
            "shape": [],
            "code": "MinProtein = data[\"MinProtein\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The total calories from noodles and protein bars should be at least MinCalories",
            "status": "formulated",
            "formulation": "\\textup{CaloriesNoodles} \\times \\textup{ServingsNoodles} + \\textup{CaloriesBars} \\times \\textup{ServingsBars} \\geq \\textup{MinCalories}",
            "related_variables": [
                "ServingsNoodles",
                "ServingsBars"
            ],
            "related_parameters": [
                "CaloriesNoodles",
                "CaloriesBars",
                "MinCalories"
            ]
        },
        {
            "description": "Total protein from noodles and protein bars should be at least MinProtein grams",
            "status": "formulated",
            "formulation": "\\textup{ProteinNoodles} \\times \\textup{ServingsNoodles} + \\textup{ProteinBars} \\times \\textup{ServingsBars} \\geq \\textup{MinProtein}",
            "related_variables": [
                "ServingsNoodles",
                "ServingsBars"
            ],
            "related_parameters": [
                "ProteinNoodles",
                "ProteinBars",
                "MinProtein"
            ]
        },
        {
            "description": "The number of noodle servings must be non-negative",
            "status": "formulated",
            "formulation": "\\textup{ServingsNoodles} \\geq 0",
            "related_variables": [
                "ServingsNoodles"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of servings of protein bars must be non-negative",
            "status": "formulated",
            "formulation": "\\textup{ServingsBars} \\geq 0",
            "related_variables": [
                "ServingsBars"
            ],
            "related_parameters": []
        }
    ],
    "variables": [
        {
            "definition": "The number of servings of noodles Bob eats per day",
            "symbol": "ServingsNoodles",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "The number of servings of protein bars Bob eats per day",
            "symbol": "ServingsBars",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Minimize the total cost of the diet consisting of noodles and protein bars",
            "status": "formulated",
            "formulation": "\\textup{Minimize} \\quad \\textup{CostNoodles} \\cdot \\textup{ServingsNoodles} + \\textup{CostBars} \\cdot \\textup{ServingsBars}",
            "related_variables": [
                "ServingsNoodles",
                "ServingsBars"
            ],
            "related_parameters": [
                "CostNoodles",
                "CostBars"
            ]
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413155016_nl4opt_prob_205/",
    "problem_path": "data/nl4opt/prob_205/"
}