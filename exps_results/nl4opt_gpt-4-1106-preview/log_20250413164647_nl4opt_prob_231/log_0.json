{
    "background": "An amusement park operates two types of games, throwing and climbing games. The games differ in customer attraction rates and operating costs, and there is a requirement to have more throwing games than climbing games.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Number of customers per hour for throwing games",
            "symbol": "Ct",
            "value": 15,
            "shape": [],
            "code": "Ct = data[\"Ct\"] # scalar parameter"
        },
        {
            "definition": "Number of customers per hour for climbing games",
            "symbol": "Cc",
            "value": 8,
            "shape": [],
            "code": "Cc = data[\"Cc\"] # scalar parameter"
        },
        {
            "definition": "Cost of prizes per hour for throwing games",
            "symbol": "Pt",
            "value": 2,
            "shape": [],
            "code": "Pt = data[\"Pt\"] # scalar parameter"
        },
        {
            "definition": "Cost of prizes per hour for climbing games",
            "symbol": "Pc",
            "value": 3,
            "shape": [],
            "code": "Pc = data[\"Pc\"] # scalar parameter"
        },
        {
            "definition": "Minimum ratio of the number of throwing games to climbing games",
            "symbol": "R",
            "value": 2,
            "shape": [],
            "code": "R = data[\"R\"] # scalar parameter"
        },
        {
            "definition": "Minimum number of climbing games",
            "symbol": "MinClimbingGames",
            "value": 5,
            "shape": [],
            "code": "MinClimbingGames = data[\"MinClimbingGames\"] # scalar parameter"
        },
        {
            "definition": "Maximum total cost of prizes per hour",
            "symbol": "MaxPrizeCost",
            "value": 100,
            "shape": [],
            "code": "MaxPrizeCost = data[\"MaxPrizeCost\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The number of throwing games must be at least R times the number of climbing games",
            "status": "formulated",
            "formulation": "\\textup{NumberOfThrowingGames} \\geq R \\times \\textup{NumberOfClimbingGames}",
            "related_variables": [
                "NumberOfThrowingGames",
                "NumberOfClimbingGames"
            ],
            "related_parameters": [
                "R"
            ]
        },
        {
            "description": "There must be at least a minimum number of climbing games operated in the amusement park.",
            "status": "formulated",
            "formulation": "\\textup{NumberOfClimbingGames} \\geq \\textup{MinClimbingGames}",
            "related_variables": [
                "NumberOfClimbingGames"
            ],
            "related_parameters": [
                "MinClimbingGames"
            ]
        },
        {
            "description": "Total cost of prizes for throwing and climbing games per hour does not exceed MaxPrizeCost",
            "status": "formulated",
            "formulation": "\\textup{NumberOfThrowingGames} \\times \\textup{Ct} \\times \\textup{Pt} + \\textup{NumberOfClimbingGames} \\times \\textup{Cc} \\times \\textup{Pc} \\leq \\textup{MaxPrizeCost}",
            "related_variables": [
                "NumberOfThrowingGames",
                "NumberOfClimbingGames"
            ],
            "related_parameters": [
                "Ct",
                "Pt",
                "Cc",
                "Pc",
                "MaxPrizeCost"
            ]
        },
        {
            "description": "The number of throwing games must be non-negative",
            "status": "formulated",
            "formulation": "\\textup{NumberOfThrowingGames} \\geq 0",
            "related_variables": [
                "NumberOfThrowingGames"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of climbing games must be non-negative and satisfy the minimum requirement",
            "status": "formulated",
            "formulation": "\\textup{NumberOfClimbingGames} \\geq \\textup{MinClimbingGames}",
            "related_variables": [
                "NumberOfClimbingGames"
            ],
            "related_parameters": [
                "MinClimbingGames"
            ]
        },
        {
            "description": "There should be more throwing games than climbing games as per the minimum ratio R.",
            "status": "formulated",
            "formulation": "\\textup{NumberOfThrowingGames} \\geq \\textup{R} \\times \\textup{NumberOfClimbingGames}",
            "related_variables": [
                "NumberOfThrowingGames",
                "NumberOfClimbingGames"
            ],
            "related_parameters": [
                "R"
            ]
        },
        {
            "description": "Ensure that the total cost of prizes per hour does not exceed the maximum allowed.",
            "status": "formulated",
            "formulation": "\\textup{Pt} \\times \\textup{NumberOfThrowingGames} + \\textup{Pc} \\times \\textup{NumberOfClimbingGames} \\leq \\textup{MaxPrizeCost}",
            "related_variables": [
                "NumberOfThrowingGames",
                "NumberOfClimbingGames"
            ],
            "related_parameters": [
                "Pt",
                "Pc",
                "MaxPrizeCost"
            ]
        },
        {
            "description": "Ensure at least the minimum number of climbing games is operated.",
            "status": "formulated",
            "formulation": "\\textup{NumberOfClimbingGames} \\geq \\textup{MinClimbingGames}",
            "related_variables": [
                "NumberOfClimbingGames"
            ],
            "related_parameters": [
                "MinClimbingGames"
            ]
        }
    ],
    "variables": [
        {
            "definition": "Number of throwing games the amusement park operates",
            "symbol": "NumberOfThrowingGames",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "Number of climbing games the amusement park operates",
            "symbol": "NumberOfClimbingGames",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Maximize the total number of customers attracted every hour by operating throwing and climbing games.",
            "status": "formulated",
            "formulation": "\\textup{Maximize } \\textup{TotalCustomers} = \\textup{Ct} \\times \\textup{NumberOfThrowingGames} + \\textup{Cc} \\times \\textup{NumberOfClimbingGames}",
            "related_variables": [
                "NumberOfThrowingGames",
                "NumberOfClimbingGames"
            ],
            "related_parameters": [
                "Ct",
                "Cc"
            ]
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413164647_nl4opt_prob_231/",
    "problem_path": "data/nl4opt/prob_231/"
}