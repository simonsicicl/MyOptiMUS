{
    "background": "A cruise company has to decide the number of large and small cruise ship trips to conduct. Large ships carry more customers but produce more pollution than small ships.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Number of customers a large cruise ship can carry",
            "symbol": "LargeShipCapacity",
            "value": 2000,
            "shape": [],
            "code": "LargeShipCapacity = data[\"LargeShipCapacity\"] # scalar parameter"
        },
        {
            "definition": "Pollution units produced by a large cruise ship trip",
            "symbol": "LargeShipPollution",
            "value": 20,
            "shape": [],
            "code": "LargeShipPollution = data[\"LargeShipPollution\"] # scalar parameter"
        },
        {
            "definition": "Number of customers a small cruise ship can carry",
            "symbol": "SmallShipCapacity",
            "value": 800,
            "shape": [],
            "code": "SmallShipCapacity = data[\"SmallShipCapacity\"] # scalar parameter"
        },
        {
            "definition": "Pollution units produced by a small cruise ship trip",
            "symbol": "SmallShipPollution",
            "value": 15,
            "shape": [],
            "code": "SmallShipPollution = data[\"SmallShipPollution\"] # scalar parameter"
        },
        {
            "definition": "Maximum number of large cruise ship trips",
            "symbol": "MaxLargeShipTrips",
            "value": 7,
            "shape": [],
            "code": "MaxLargeShipTrips = data[\"MaxLargeShipTrips\"] # scalar parameter"
        },
        {
            "definition": "Minimum percentage of total trips that must be by small cruise ships",
            "symbol": "MinSmallShipTripPercent",
            "value": 0.4,
            "shape": [],
            "code": "MinSmallShipTripPercent = data[\"MinSmallShipTripPercent\"] # scalar parameter"
        },
        {
            "definition": "Minimum number of customers the company aims to transport",
            "symbol": "MinCustomers",
            "value": 20000,
            "shape": [],
            "code": "MinCustomers = data[\"MinCustomers\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The number of large cruise ship trips must be non-negative",
            "status": "formulated",
            "formulation": "\\textup{NumLargeShipTrips} \\geq 0",
            "related_variables": [
                "NumLargeShipTrips"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of small cruise ship trips must be non-negative",
            "status": "formulated",
            "formulation": "\\textup{NumSmallShipTrips} \\geq 0",
            "related_variables": [
                "NumSmallShipTrips"
            ],
            "related_parameters": []
        },
        {
            "description": "The number of large cruise ship trips must not exceed the maximum allowable trips",
            "status": "formulated",
            "formulation": "\\textup{NumLargeShipTrips} \\leq \\textup{MaxLargeShipTrips}",
            "related_variables": [
                "NumLargeShipTrips"
            ],
            "related_parameters": [
                "MaxLargeShipTrips"
            ]
        },
        {
            "description": "At least MinSmallShipTripPercent of total trips must be small cruise ship trips",
            "status": "formulated",
            "formulation": "\\textup{NumSmallShipTrips} \\geq \\textup{MinSmallShipTripPercent} \\cdot (\\textup{NumSmallShipTrips} + \\textup{NumLargeShipTrips})",
            "related_variables": [
                "NumSmallShipTrips",
                "NumLargeShipTrips"
            ],
            "related_parameters": [
                "MinSmallShipTripPercent"
            ]
        },
        {
            "description": "Total customers transported must be at least MinCustomers",
            "status": "formulated",
            "formulation": "\\textup{NumLargeShipTrips} \\cdot \\textup{LargeShipCapacity} + \\textup{NumSmallShipTrips} \\cdot \\textup{SmallShipCapacity} \\geq \\textup{MinCustomers}",
            "related_variables": [
                "NumLargeShipTrips",
                "NumSmallShipTrips"
            ],
            "related_parameters": [
                "LargeShipCapacity",
                "SmallShipCapacity",
                "MinCustomers"
            ]
        },
        {
            "description": "Ensure that large cruise ship trips do not exceed the maximum number",
            "status": "formulated",
            "formulation": "\\textup{NumLargeShipTrips} \\leq \\textup{MaxLargeShipTrips}",
            "related_variables": [
                "NumLargeShipTrips"
            ],
            "related_parameters": [
                "MaxLargeShipTrips"
            ]
        },
        {
            "description": "Ensure that at least a certain percentage of the total trips are small cruise ship trips",
            "status": "formulated",
            "formulation": "\\textup{NumSmallShipTrips} \\geq \\textup{MinSmallShipTripPercent} \\times (\\textup{NumLargeShipTrips} + \\textup{NumSmallShipTrips})",
            "related_variables": [
                "NumSmallShipTrips",
                "NumLargeShipTrips"
            ],
            "related_parameters": [
                "MinSmallShipTripPercent"
            ]
        },
        {
            "description": "Ensure that the minimum number of customers is transported",
            "status": "formulated",
            "formulation": "\\textup{NumLargeShipTrips} \\times \\textup{LargeShipCapacity} + \\textup{NumSmallShipTrips} \\times \\textup{SmallShipCapacity} \\geq \\textup{MinCustomers}",
            "related_variables": [
                "NumLargeShipTrips",
                "NumSmallShipTrips"
            ],
            "related_parameters": [
                "LargeShipCapacity",
                "SmallShipCapacity",
                "MinCustomers"
            ]
        }
    ],
    "variables": [
        {
            "definition": "Number of large cruise ship trips",
            "symbol": "NumLargeShipTrips",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "Number of small cruise ship trips",
            "symbol": "NumSmallShipTrips",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Minimize the total amount of pollution produced by the cruise ships",
            "status": "formulated",
            "formulation": "\\textup{Minimize}\\quad \\textup{TotalPollution} = \\textup{NumLargeShipTrips}\\times \\textup{LargeShipPollution} + \\textup{NumSmallShipTrips}\\times \\textup{SmallShipPollution}",
            "related_variables": [
                "NumLargeShipTrips",
                "NumSmallShipTrips"
            ],
            "related_parameters": [
                "LargeShipPollution",
                "SmallShipPollution"
            ]
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413170510_nl4opt_prob_245/",
    "problem_path": "data/nl4opt/prob_245/"
}