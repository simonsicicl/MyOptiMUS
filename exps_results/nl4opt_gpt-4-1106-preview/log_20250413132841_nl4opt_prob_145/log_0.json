{
    "background": "A drug company utilizes two different processes to produce pain killers and sleeping pills, with each process having its specific production rates for both drugs and using a certain amount of preliminary material.",
    "problem_type": "LP",
    "parameters": [
        {
            "definition": "Units of pain killers produced per hour by process 1",
            "symbol": "PainKillersProcess1",
            "value": 35,
            "shape": [],
            "code": "PainKillersProcess1 = data[\"PainKillersProcess1\"] # scalar parameter"
        },
        {
            "definition": "Units of sleeping pills produced per hour by process 1",
            "symbol": "SleepingPillsProcess1",
            "value": 12,
            "shape": [],
            "code": "SleepingPillsProcess1 = data[\"SleepingPillsProcess1\"] # scalar parameter"
        },
        {
            "definition": "Units of pain killers produced per hour by process 2",
            "symbol": "PainKillersProcess2",
            "value": 50,
            "shape": [],
            "code": "PainKillersProcess2 = data[\"PainKillersProcess2\"] # scalar parameter"
        },
        {
            "definition": "Units of sleeping pills produced per hour by process 2",
            "symbol": "SleepingPillsProcess2",
            "value": 30,
            "shape": [],
            "code": "SleepingPillsProcess2 = data[\"SleepingPillsProcess2\"] # scalar parameter"
        },
        {
            "definition": "Units of preliminary material required for process 1",
            "symbol": "MaterialProcess1",
            "value": 50,
            "shape": [],
            "code": "MaterialProcess1 = data[\"MaterialProcess1\"] # scalar parameter"
        },
        {
            "definition": "Units of preliminary material required for process 2",
            "symbol": "MaterialProcess2",
            "value": 60,
            "shape": [],
            "code": "MaterialProcess2 = data[\"MaterialProcess2\"] # scalar parameter"
        },
        {
            "definition": "Total units of preliminary material available",
            "symbol": "TotalMaterial",
            "value": 2000,
            "shape": [],
            "code": "TotalMaterial = data[\"TotalMaterial\"] # scalar parameter"
        },
        {
            "definition": "Minimum units of pain killers to be produced",
            "symbol": "MinPainKillers",
            "value": 1200,
            "shape": [],
            "code": "MinPainKillers = data[\"MinPainKillers\"] # scalar parameter"
        },
        {
            "definition": "Minimum units of sleeping pills to be produced",
            "symbol": "MinSleepingPills",
            "value": 1200,
            "shape": [],
            "code": "MinSleepingPills = data[\"MinSleepingPills\"] # scalar parameter"
        }
    ],
    "constraints": [
        {
            "description": "The number of hours process 1 is run must be non-negative",
            "status": "formulated",
            "formulation": "\\textup{HoursProcess1} \\geq 0",
            "related_variables": [
                "HoursProcess1"
            ],
            "related_parameters": []
        },
        {
            "description": "Number of hours process 2 is run is non-negative",
            "status": "formulated",
            "formulation": "\\textup{HoursProcess2} \\geq 0",
            "related_variables": [
                "HoursProcess2"
            ],
            "related_parameters": []
        },
        {
            "description": "Total material used by both processes must be at most the total available material units",
            "status": "formulated",
            "formulation": "\\textup{MaterialProcess1} \\times \\textup{HoursProcess1} + \\textup{MaterialProcess2} \\times \\textup{HoursProcess2} \\leq \\textup{TotalMaterial}",
            "related_variables": [
                "HoursProcess1",
                "HoursProcess2"
            ],
            "related_parameters": [
                "MaterialProcess1",
                "MaterialProcess2",
                "TotalMaterial"
            ]
        },
        {
            "description": "At least MinPainKillers units of pain killers must be produced",
            "status": "formulated",
            "formulation": "\\textup{PainKillersProcess1} \\times \\textup{HoursProcess1} + \\textup{PainKillersProcess2} \\times \\textup{HoursProcess2} \\geq \\textup{MinPainKillers}",
            "related_variables": [
                "HoursProcess1",
                "HoursProcess2"
            ],
            "related_parameters": [
                "PainKillersProcess1",
                "PainKillersProcess2",
                "MinPainKillers"
            ]
        },
        {
            "description": "At least MinSleepingPills units of sleeping pills must be produced",
            "status": "formulated",
            "formulation": "\\textup{SleepingPillsProcess1} \\times \\textup{HoursProcess1} + \\textup{SleepingPillsProcess2} \\times \\textup{HoursProcess2} \\geq \\textup{MinSleepingPills}",
            "related_variables": [
                "HoursProcess1",
                "HoursProcess2"
            ],
            "related_parameters": [
                "SleepingPillsProcess1",
                "SleepingPillsProcess2",
                "MinSleepingPills"
            ]
        },
        {
            "description": "The total production of pain killers must meet or exceed the minimum required",
            "status": "formulated",
            "formulation": "\\textup{PainKillersProcess1} \\cdot \\textup{HoursProcess1} + \\textup{PainKillersProcess2} \\cdot \\textup{HoursProcess2} \\geq \\textup{MinPainKillers}",
            "related_variables": [
                "HoursProcess1",
                "HoursProcess2"
            ],
            "related_parameters": [
                "PainKillersProcess1",
                "PainKillersProcess2",
                "MinPainKillers"
            ]
        },
        {
            "description": "The total production of sleeping pills must meet or exceed the minimum required",
            "status": "formulated",
            "formulation": "\\textup{SleepingPillsProcess1} \\cdot \\textup{HoursProcess1} + \\textup{SleepingPillsProcess2} \\cdot \\textup{HoursProcess2} \\geq \\textup{MinSleepingPills}",
            "related_variables": [
                "HoursProcess1",
                "HoursProcess2"
            ],
            "related_parameters": [
                "SleepingPillsProcess1",
                "SleepingPillsProcess2",
                "MinSleepingPills"
            ]
        },
        {
            "description": "The total use of preliminary material should not exceed the total amount available",
            "status": "formulated",
            "formulation": "\\textup{MaterialProcess1} \\cdot \\textup{HoursProcess1} + \\textup{MaterialProcess2} \\cdot \\textup{HoursProcess2} \\leq \\textup{TotalMaterial}",
            "related_variables": [
                "HoursProcess1",
                "HoursProcess2"
            ],
            "related_parameters": [
                "MaterialProcess1",
                "MaterialProcess2",
                "TotalMaterial"
            ]
        }
    ],
    "variables": [
        {
            "definition": "Number of hours process 1 is run",
            "symbol": "HoursProcess1",
            "shape": [],
            "status": "formulated"
        },
        {
            "definition": "Number of hours process 2 is run",
            "symbol": "HoursProcess2",
            "shape": [],
            "status": "formulated"
        }
    ],
    "objective": [
        {
            "description": "Minimize the total time needed to produce the required units of pain killers and sleeping pills",
            "status": "formulated",
            "formulation": "\\textup{Minimize } \\textup{TotalTime} = \\textup{HoursProcess1} + \\textup{HoursProcess2}",
            "related_variables": [
                "HoursProcess1",
                "HoursProcess2"
            ],
            "related_parameters": []
        }
    ],
    "solution_status": null,
    "solver_output_status": null,
    "error_message": null,
    "obj_val": null,
    "log_path": "logs/log_20250413132841_nl4opt_prob_145/",
    "problem_path": "data/nl4opt/prob_145/"
}